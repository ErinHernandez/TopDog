/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/draft/topdog/[roomId]";
exports.ids = ["pages/draft/topdog/[roomId]"];
exports.modules = {

/***/ "(pages-dir-node)/./components/DepositModal.js":
/*!************************************!*\
  !*** ./components/DepositModal.js ***!
  \************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ DepositModal)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _stripe_stripe_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @stripe/stripe-js */ \"@stripe/stripe-js\");\n/* harmony import */ var _stripe_stripe_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_stripe_stripe_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _lib_firebase__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../lib/firebase */ \"(pages-dir-node)/./lib/firebase.js\");\n/* harmony import */ var firebase_firestore__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! firebase/firestore */ \"firebase/firestore\");\n/* harmony import */ var _lib_userStats__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../lib/userStats */ \"(pages-dir-node)/./lib/userStats.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_lib_firebase__WEBPACK_IMPORTED_MODULE_2__, firebase_firestore__WEBPACK_IMPORTED_MODULE_3__, _lib_userStats__WEBPACK_IMPORTED_MODULE_4__]);\n([_lib_firebase__WEBPACK_IMPORTED_MODULE_2__, firebase_firestore__WEBPACK_IMPORTED_MODULE_3__, _lib_userStats__WEBPACK_IMPORTED_MODULE_4__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw new Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw new Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, \"catch\": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n\n\n\n\n\n// Define approved states/regions for deposits\nvar APPROVED_STATES = ['AL', 'AK', 'AZ', 'AR', 'CA', 'CO', 'CT', 'DE', 'FL', 'GA', 'HI', 'ID', 'IL', 'IN', 'IA', 'KS', 'KY', 'LA', 'ME', 'MD', 'MA', 'MI', 'MN', 'MS', 'MO', 'MT', 'NE', 'NV', 'NH', 'NJ', 'NM', 'NY', 'NC', 'ND', 'OH', 'OK', 'OR', 'PA', 'RI', 'SC', 'SD', 'TN', 'TX', 'UT', 'VT', 'VA', 'WA', 'WV', 'WI', 'WY'];\n\n// Initialize Stripe (you'll need to add your publishable key to environment variables)\nvar stripePromise = process.env.NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY ? (0,_stripe_stripe_js__WEBPACK_IMPORTED_MODULE_1__.loadStripe)(process.env.NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY) : null;\nvar depositAmounts = [{\n  value: 25,\n  label: '$25'\n}, {\n  value: 50,\n  label: '$50'\n}, {\n  value: 100,\n  label: '$100'\n}, {\n  value: 250,\n  label: '$250'\n}, {\n  value: 500,\n  label: '$500'\n}, {\n  value: 1000,\n  label: '$1,000'\n}];\nfunction DepositModal(_ref) {\n  var _userStats$totalDepos, _userStats$largestDep, _userStats$averageDep, _locationData$latitud, _locationData$longitu;\n  var open = _ref.open,\n    onClose = _ref.onClose,\n    _ref$userId = _ref.userId,\n    userId = _ref$userId === void 0 ? 'Not Todd Middleton' : _ref$userId;\n  var _useState = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(50),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedAmount = _useState2[0],\n    setSelectedAmount = _useState2[1];\n  var _useState3 = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    customAmount = _useState4[0],\n    setCustomAmount = _useState4[1];\n  var _useState5 = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isProcessing = _useState6[0],\n    setIsProcessing = _useState6[1];\n  var _useState7 = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),\n    _useState8 = _slicedToArray(_useState7, 2),\n    userStats = _useState8[0],\n    setUserStats = _useState8[1];\n  var _useState9 = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('pending'),\n    _useState10 = _slicedToArray(_useState9, 2),\n    locationStatus = _useState10[0],\n    setLocationStatus = _useState10[1]; // 'pending', 'checking', 'approved', 'denied', 'error'\n  var _useState11 = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),\n    _useState12 = _slicedToArray(_useState11, 2),\n    locationData = _useState12[0],\n    setLocationData = _useState12[1];\n  var _useState13 = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(''),\n    _useState14 = _slicedToArray(_useState13, 2),\n    locationError = _useState14[0],\n    setLocationError = _useState14[1];\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {\n    if (open && userId) {\n      fetchUserStats();\n      checkLocation();\n    }\n  }, [open, userId]);\n  var fetchUserStats = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var stats, _t;\n      return _regeneratorRuntime().wrap(function (_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 1;\n            return (0,_lib_userStats__WEBPACK_IMPORTED_MODULE_4__.getUserStats)(userId);\n          case 1:\n            stats = _context.sent;\n            setUserStats(stats);\n            _context.next = 3;\n            break;\n          case 2:\n            _context.prev = 2;\n            _t = _context[\"catch\"](0);\n            console.error('Error fetching user stats:', _t);\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee, null, [[0, 2]]);\n    }));\n    return function fetchUserStats() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var checkLocation = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n      var position, _position$coords, latitude, longitude, state, _t2;\n      return _regeneratorRuntime().wrap(function (_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            setLocationStatus('checking');\n            setLocationError('');\n            _context2.prev = 1;\n            if (navigator.geolocation) {\n              _context2.next = 2;\n              break;\n            }\n            setLocationStatus('error');\n            setLocationError('Geolocation is not supported by this browser.');\n            return _context2.abrupt(\"return\");\n          case 2:\n            _context2.next = 3;\n            return new Promise(function (resolve, reject) {\n              navigator.geolocation.getCurrentPosition(resolve, reject, {\n                enableHighAccuracy: true,\n                timeout: 10000,\n                maximumAge: 300000 // 5 minutes\n              });\n            });\n          case 3:\n            position = _context2.sent;\n            _position$coords = position.coords, latitude = _position$coords.latitude, longitude = _position$coords.longitude; // Reverse geocode to get state information\n            _context2.next = 4;\n            return reverseGeocode(latitude, longitude);\n          case 4:\n            state = _context2.sent;\n            setLocationData({\n              latitude: latitude,\n              longitude: longitude,\n              state: state,\n              timestamp: new Date().toISOString()\n            });\n\n            // Check if state is approved\n            if (APPROVED_STATES.includes(state)) {\n              setLocationStatus('approved');\n            } else {\n              setLocationStatus('denied');\n              setLocationError(\"Deposits are not available in \".concat(state, \". Please contact support for assistance.\"));\n            }\n            _context2.next = 6;\n            break;\n          case 5:\n            _context2.prev = 5;\n            _t2 = _context2[\"catch\"](1);\n            console.error('Geolocation error:', _t2);\n            setLocationStatus('error');\n            if (_t2.code === 1) {\n              setLocationError('Location access denied. Please enable location services to make deposits.');\n            } else if (_t2.code === 2) {\n              setLocationError('Location unavailable. Please check your connection and try again.');\n            } else if (_t2.code === 3) {\n              setLocationError('Location request timed out. Please try again.');\n            } else {\n              setLocationError('Unable to determine your location. Please try again or contact support.');\n            }\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2, null, [[1, 5]]);\n    }));\n    return function checkLocation() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var reverseGeocode = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(latitude, longitude) {\n      var _data$address, _data$address2, response, data, state, stateMap, _t3;\n      return _regeneratorRuntime().wrap(function (_context3) {\n        while (1) switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            _context3.next = 1;\n            return fetch(\"https://nominatim.openstreetmap.org/reverse?format=json&lat=\".concat(latitude, \"&lon=\").concat(longitude, \"&addressdetails=1\"));\n          case 1:\n            response = _context3.sent;\n            if (response.ok) {\n              _context3.next = 2;\n              break;\n            }\n            throw new Error('Geocoding service unavailable');\n          case 2:\n            _context3.next = 3;\n            return response.json();\n          case 3:\n            data = _context3.sent;\n            // Extract state from address\n            state = ((_data$address = data.address) === null || _data$address === void 0 ? void 0 : _data$address.state) || ((_data$address2 = data.address) === null || _data$address2 === void 0 ? void 0 : _data$address2.province) || 'Unknown'; // Convert full state name to abbreviation if needed\n            stateMap = {\n              'Alabama': 'AL',\n              'Alaska': 'AK',\n              'Arizona': 'AZ',\n              'Arkansas': 'AR',\n              'California': 'CA',\n              'Colorado': 'CO',\n              'Connecticut': 'CT',\n              'Delaware': 'DE',\n              'Florida': 'FL',\n              'Georgia': 'GA',\n              'Hawaii': 'HI',\n              'Idaho': 'ID',\n              'Illinois': 'IL',\n              'Indiana': 'IN',\n              'Iowa': 'IA',\n              'Kansas': 'KS',\n              'Kentucky': 'KY',\n              'Louisiana': 'LA',\n              'Maine': 'ME',\n              'Maryland': 'MD',\n              'Massachusetts': 'MA',\n              'Michigan': 'MI',\n              'Minnesota': 'MN',\n              'Mississippi': 'MS',\n              'Missouri': 'MO',\n              'Montana': 'MT',\n              'Nebraska': 'NE',\n              'Nevada': 'NV',\n              'New Hampshire': 'NH',\n              'New Jersey': 'NJ',\n              'New Mexico': 'NM',\n              'New York': 'NY',\n              'North Carolina': 'NC',\n              'North Dakota': 'ND',\n              'Ohio': 'OH',\n              'Oklahoma': 'OK',\n              'Oregon': 'OR',\n              'Pennsylvania': 'PA',\n              'Rhode Island': 'RI',\n              'South Carolina': 'SC',\n              'South Dakota': 'SD',\n              'Tennessee': 'TN',\n              'Texas': 'TX',\n              'Utah': 'UT',\n              'Vermont': 'VT',\n              'Virginia': 'VA',\n              'Washington': 'WA',\n              'West Virginia': 'WV',\n              'Wisconsin': 'WI',\n              'Wyoming': 'WY'\n            };\n            return _context3.abrupt(\"return\", stateMap[state] || state);\n          case 4:\n            _context3.prev = 4;\n            _t3 = _context3[\"catch\"](0);\n            console.error('Reverse geocoding error:', _t3);\n            // Fallback: return a default state for testing\n            return _context3.abrupt(\"return\", 'CA');\n          case 5:\n          case \"end\":\n            return _context3.stop();\n        }\n      }, _callee3, null, [[0, 4]]);\n    }));\n    return function reverseGeocode(_x, _x2) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var handleAmountSelect = function handleAmountSelect(amount) {\n    setSelectedAmount(amount);\n    setCustomAmount('');\n  };\n  var handleCustomAmountChange = function handleCustomAmountChange(e) {\n    var value = e.target.value;\n    setCustomAmount(value);\n    if (value) {\n      setSelectedAmount(0);\n    }\n  };\n  var getFinalAmount = function getFinalAmount() {\n    if (customAmount) {\n      return parseFloat(customAmount);\n    }\n    return selectedAmount;\n  };\n  var handleDeposit = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n      var amount;\n      return _regeneratorRuntime().wrap(function (_context5) {\n        while (1) switch (_context5.prev = _context5.next) {\n          case 0:\n            if (!(locationStatus !== 'approved')) {\n              _context5.next = 1;\n              break;\n            }\n            alert('Location approval required before making deposits.');\n            return _context5.abrupt(\"return\");\n          case 1:\n            amount = getFinalAmount();\n            if (!(!amount || amount <= 0)) {\n              _context5.next = 2;\n              break;\n            }\n            alert('Please enter a valid amount');\n            return _context5.abrupt(\"return\");\n          case 2:\n            if (!(amount < 5)) {\n              _context5.next = 3;\n              break;\n            }\n            alert('Minimum deposit amount is $5');\n            return _context5.abrupt(\"return\");\n          case 3:\n            setIsProcessing(true);\n            try {\n              // For now, we'll simulate a successful payment\n              // In production, you'd integrate with Stripe Elements\n              setTimeout( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n                return _regeneratorRuntime().wrap(function (_context4) {\n                  while (1) switch (_context4.prev = _context4.next) {\n                    case 0:\n                      _context4.next = 1;\n                      return updateUserBalance(amount);\n                    case 1:\n                      setIsProcessing(false);\n                      onClose();\n                    case 2:\n                    case \"end\":\n                      return _context4.stop();\n                  }\n                }, _callee4);\n              })), 2000);\n            } catch (error) {\n              console.error('Deposit error:', error);\n              alert('Deposit failed. Please try again.');\n              setIsProcessing(false);\n            }\n          case 4:\n          case \"end\":\n            return _context5.stop();\n        }\n      }, _callee5);\n    }));\n    return function handleDeposit() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  var updateUserBalance = /*#__PURE__*/function () {\n    var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(amount) {\n      var _t4;\n      return _regeneratorRuntime().wrap(function (_context6) {\n        while (1) switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.prev = 0;\n            _context6.next = 1;\n            return (0,_lib_userStats__WEBPACK_IMPORTED_MODULE_4__.updateDepositStats)(userId, amount);\n          case 1:\n            _context6.next = 2;\n            return (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_3__.addDoc)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_3__.collection)(_lib_firebase__WEBPACK_IMPORTED_MODULE_2__.db, 'transactions'), {\n              userId: userId,\n              type: 'deposit',\n              amount: amount,\n              status: 'completed',\n              location: locationData,\n              createdAt: (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_3__.serverTimestamp)()\n            });\n          case 2:\n            alert(\"Successfully deposited $\".concat(amount, \"!\"));\n            fetchUserStats(); // Refresh stats\n            _context6.next = 4;\n            break;\n          case 3:\n            _context6.prev = 3;\n            _t4 = _context6[\"catch\"](0);\n            console.error('Error updating balance:', _t4);\n          case 4:\n          case \"end\":\n            return _context6.stop();\n        }\n      }, _callee6, null, [[0, 3]]);\n    }));\n    return function updateUserBalance(_x3) {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n  if (!open) return null;\n  var userBalance = (userStats === null || userStats === void 0 ? void 0 : userStats.balance) || 0;\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"fixed inset-0 z-50 flex items-center justify-center\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"absolute inset-0 bg-black opacity-70\",\n    onClick: onClose\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"relative bg-black rounded-xl shadow-2xl p-8 z-10 max-w-md w-full mx-4 border border-[#60A5FA] max-h-[90vh] overflow-y-auto\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"button\", {\n    onClick: onClose,\n    className: \"absolute top-4 right-6 text-3xl text-gray-400 hover:text-white\"\n  }, \"\\xD7\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"text-center mb-6\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"h2\", {\n    className: \"text-3xl font-bold mb-2\",\n    style: {\n      color: '#60A5FA'\n    }\n  }, \"Deposit Funds\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"p\", {\n    className: \"text-gray-300 mb-4\"\n  }, \"Current Balance: \", /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"span\", {\n    className: \"font-bold text-white\"\n  }, \"$\", userBalance.toFixed(2))), userStats && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"text-xs text-gray-400 space-y-1\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"p\", null, \"Total Deposits: $\", ((_userStats$totalDepos = userStats.totalDeposits) === null || _userStats$totalDepos === void 0 ? void 0 : _userStats$totalDepos.toFixed(2)) || '0.00'), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"p\", null, \"Largest Deposit: $\", ((_userStats$largestDep = userStats.largestDeposit) === null || _userStats$largestDep === void 0 ? void 0 : _userStats$largestDep.toFixed(2)) || '0.00'), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"p\", null, \"Average Deposit: $\", ((_userStats$averageDep = userStats.averageDeposit) === null || _userStats$averageDep === void 0 ? void 0 : _userStats$averageDep.toFixed(2)) || '0.00'))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"mb-6 p-4 bg-gray-800 rounded-lg\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"h3\", {\n    className: \"text-lg font-bold mb-3\",\n    style: {\n      color: '#60A5FA'\n    }\n  }, \"Location Verification\"), locationStatus === 'pending' && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"text-center\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"p\", {\n    className: \"text-gray-300 mb-3\"\n  }, \"Location verification required for deposits\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"button\", {\n    onClick: checkLocation,\n    className: \"px-4 py-2 bg-[#60A5FA] text-[#000F55] font-bold rounded hover:bg-[#2DE2C5] transition-colors\"\n  }, \"Verify Location\")), locationStatus === 'checking' && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"text-center\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"animate-spin rounded-full h-8 w-8 border-b-2 border-[#60A5FA] mx-auto mb-2\"\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"p\", {\n    className: \"text-gray-300\"\n  }, \"Verifying your location...\")), locationStatus === 'approved' && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"text-center\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"text-green-400 mb-2\"\n  }, \"\\u2713 Location Approved\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"p\", {\n    className: \"text-gray-300 text-sm\"\n  }, locationData === null || locationData === void 0 ? void 0 : locationData.state, \" \\u2022 \", locationData === null || locationData === void 0 || (_locationData$latitud = locationData.latitude) === null || _locationData$latitud === void 0 ? void 0 : _locationData$latitud.toFixed(4), \", \", locationData === null || locationData === void 0 || (_locationData$longitu = locationData.longitude) === null || _locationData$longitu === void 0 ? void 0 : _locationData$longitu.toFixed(4)), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"button\", {\n    onClick: checkLocation,\n    className: \"mt-2 text-xs text-[#60A5FA] hover:underline\"\n  }, \"Refresh Location\")), locationStatus === 'denied' && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"text-center\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"text-red-400 mb-2\"\n  }, \"\\u2717 Location Not Approved\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"p\", {\n    className: \"text-gray-300 text-sm mb-3\"\n  }, locationError), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"button\", {\n    onClick: checkLocation,\n    className: \"px-4 py-2 bg-[#60A5FA] text-[#000F55] font-bold rounded hover:bg-[#2DE2C5] transition-colors\"\n  }, \"Try Again\")), locationStatus === 'error' && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"text-center\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"text-red-400 mb-2\"\n  }, \"\\u2717 Location Error\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"p\", {\n    className: \"text-gray-300 text-sm mb-3\"\n  }, locationError), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"button\", {\n    onClick: checkLocation,\n    className: \"px-4 py-2 bg-[#60A5FA] text-[#000F55] font-bold rounded hover:bg-[#2DE2C5] transition-colors\"\n  }, \"Retry\"))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"mb-6\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"h3\", {\n    className: \"text-lg font-bold mb-3\",\n    style: {\n      color: '#60A5FA'\n    }\n  }, \"Quick Select\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"grid grid-cols-2 gap-3\"\n  }, depositAmounts.map(function (amount) {\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"button\", {\n      key: amount.value,\n      onClick: function onClick() {\n        return handleAmountSelect(amount.value);\n      },\n      className: \"p-3 rounded-lg border transition-colors \".concat(selectedAmount === amount.value && !customAmount ? 'border-[#60A5FA] bg-[#60A5FA] text-[#000F55]' : 'border-gray-600 text-gray-300 hover:border-[#60A5FA] hover:text-[#60A5FA]')\n    }, amount.label);\n  }))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"mb-6\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"h3\", {\n    className: \"text-lg font-bold mb-3\",\n    style: {\n      color: '#60A5FA'\n    }\n  }, \"Custom Amount\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"relative\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"span\", {\n    className: \"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\"\n  }, \"$\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"input\", {\n    type: \"number\",\n    value: customAmount,\n    onChange: handleCustomAmountChange,\n    placeholder: \"Enter amount\",\n    className: \"w-full pl-8 pr-4 py-3 bg-gray-800 border border-gray-600 rounded-lg text-white placeholder-gray-400 focus:border-[#60A5FA] focus:outline-none\",\n    min: \"5\",\n    step: \"0.01\"\n  }))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"mb-6 p-4 bg-gray-800 rounded-lg\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"text-center\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"p\", {\n    className: \"text-gray-300\"\n  }, \"Deposit Amount:\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"p\", {\n    className: \"text-2xl font-bold\",\n    style: {\n      color: '#60A5FA'\n    }\n  }, \"$\", getFinalAmount().toFixed(2)))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"mb-6\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"h3\", {\n    className: \"text-lg font-bold mb-3\",\n    style: {\n      color: '#60A5FA'\n    }\n  }, \"Payment Information\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"p-4 bg-gray-800 rounded-lg\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"p\", {\n    className: \"text-gray-300 text-sm mb-2\"\n  }, \"Card details will be handled securely by Stripe\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"h-12 bg-gray-700 rounded border border-gray-600 flex items-center justify-center\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"span\", {\n    className: \"text-gray-400\"\n  }, \"Card input will be integrated here\")))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"button\", {\n    onClick: handleDeposit,\n    disabled: isProcessing || !selectedAmount && !customAmount || locationStatus !== 'approved',\n    className: \"w-full py-4 bg-[#60A5FA] text-[#000F55] font-bold text-xl rounded-lg hover:bg-[#2DE2C5] transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\n  }, isProcessing ? 'Processing...' : \"Deposit $\".concat(getFinalAmount().toFixed(2))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"mt-4 text-center\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"p\", {\n    className: \"text-xs text-gray-400\"\n  }, \"Minimum deposit: $5 \\u2022 Secure payment processing by Stripe\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"p\", {\n    className: \"text-xs text-gray-400 mt-1\"\n  }, \"Location verification required for all deposits\"))));\n}\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-node)/./components/DepositModal.js\n");

/***/ }),

/***/ "(pages-dir-node)/./components/Footer.js":
/*!******************************!*\
  !*** ./components/Footer.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Footer)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/link */ \"(pages-dir-node)/./node_modules/next/link.js\");\n/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_link__WEBPACK_IMPORTED_MODULE_1__);\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n\nfunction Footer() {\n  var _useState = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    showPressModal = _useState2[0],\n    setShowPressModal = _useState2[1];\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"footer\", {\n    className: \"bg-gray-900 text-white\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"border-t border-gray-700 pt-8 mb-14\"\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"container mx-auto px-4 pb-12\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"grid md:grid-cols-4 gap-8\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"flex flex-col items-start md:items-start\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"img\", {\n    src: \"/secondary_logo.png\",\n    alt: \"TopDog.dog Secondary Logo\",\n    className: \"h-12 w-auto mb-6\"\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"h3\", {\n    className: \"text-2xl font-bold\",\n    style: {\n      color: '#59c5bf'\n    }\n  }, \"TopDog.dog\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"p\", {\n    className: \"mb-6 text-gray-300\"\n  }, \"A Dog App.\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"flex space-x-4\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"a\", {\n    href: \"#\",\n    className: \"hover:text-[#59c5bf] transition-colors\",\n    style: {\n      color: '#59c5bf'\n    }\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"svg\", {\n    className: \"w-6 h-6\",\n    fill: \"currentColor\",\n    viewBox: \"0 0 24 24\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"path\", {\n    d: \"M24 4.557c-.883.392-1.832.656-2.828.775 1.017-.609 1.798-1.574 2.165-2.724-.951.564-2.005.974-3.127 1.195-.897-.957-2.178-1.555-3.594-1.555-3.179 0-5.515 2.966-4.797 6.045-4.091-.205-7.719-2.165-10.148-5.144-1.29 2.213-.669 5.108 1.523 6.574-.806-.026-1.566-.247-2.229-.616-.054 2.281 1.581 4.415 3.949 4.89-.693.188-1.452.232-2.224.084.626 1.956 2.444 3.379 4.6 3.419-2.07 1.623-4.678 2.348-7.29 2.04 2.179 1.397 4.768 2.212 7.548 2.212 9.142 0 14.307-7.721 13.995-14.646.962-.695 1.797-1.562 2.457-2.549z\"\n  }))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"a\", {\n    href: \"#\",\n    className: \"hover:text-[#59c5bf] transition-colors\",\n    style: {\n      color: '#59c5bf'\n    }\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"svg\", {\n    className: \"w-6 h-6\",\n    fill: \"currentColor\",\n    viewBox: \"0 0 24 24\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"path\", {\n    d: \"M22.46 6c-.77.35-1.6.58-2.46.69.88-.53 1.56-1.37 1.88-2.38-.83.5-1.75.85-2.72 1.05C18.37 4.5 17.26 4 16 4c-2.35 0-4.27 1.92-4.27 4.29 0 .34.04.67.11.98C8.28 9.09 5.11 7.38 3 4.79c-.37.63-.58 1.37-.58 2.15 0 1.49.75 2.81 1.91 3.56-.71 0-1.37-.2-1.95-.5v.03c0 2.08 1.48 3.82 3.44 4.21a4.22 4.22 0 0 1-1.93.07 4.28 4.28 0 0 0 4 2.98 8.521 8.521 0 0 1-5.33 1.84c-.34 0-.68-.02-1.02-.06C3.44 20.29 5.7 21 8.12 21 16 21 20.33 14.46 20.33 8.79c0-.19 0-.37-.01-.56.84-.6 1.56-1.36 2.14-2.23z\"\n  }))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"a\", {\n    href: \"#\",\n    className: \"hover:text-[#59c5bf] transition-colors\",\n    style: {\n      color: '#59c5bf'\n    }\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"svg\", {\n    className: \"w-6 h-6\",\n    fill: \"currentColor\",\n    viewBox: \"0 0 24 24\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"path\", {\n    d: \"M12.017 0C5.396 0 .029 5.367.029 11.987c0 5.079 3.158 9.417 7.618 11.174-.105-.949-.199-2.403.041-3.439.219-.937 1.406-5.957 1.406-5.957s-.359-.72-.359-1.781c0-1.663.967-2.911 2.168-2.911 1.024 0 1.518.769 1.518 1.688 0 1.029-.653 2.567-.992 3.992-.285 1.193.6 2.165 1.775 2.165 2.128 0 3.768-2.245 3.768-5.487 0-2.861-2.063-4.869-5.008-4.869-3.41 0-5.409 2.562-5.409 5.199 0 1.033.394 2.143.889 2.741.099.12.112.225.085.345-.09.375-.293 1.199-.334 1.363-.053.225-.172.271-.402.165-1.495-.69-2.433-2.878-2.878-4.646 0-3.776 2.748-7.252 7.92-7.252 4.158 0 7.392 2.967 7.392 6.923 0 4.135-2.607 7.462-6.233 7.462-1.214 0-2.357-.629-2.746-1.378l-.748 2.853c-.271 1.043-1.002 2.35-1.492 3.146C9.57 23.812 10.763 24.009 12.017 24.009c6.624 0 11.99-5.367 11.99-11.988C24.007 5.367 18.641.001 12.017.001z\"\n  }))))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"h4\", {\n    className: \"text-lg font-semibold mb-4\",\n    style: {\n      color: '#59c5bf'\n    }\n  }, \"Product\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"ul\", {\n    className: \"space-y-2\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"li\", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement((next_link__WEBPACK_IMPORTED_MODULE_1___default()), {\n    href: \"/leagues\",\n    className: \"text-gray-300 hover:text-white transition-colors\"\n  }, \"Leagues\")), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"li\", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement((next_link__WEBPACK_IMPORTED_MODULE_1___default()), {\n    href: \"/tournaments/topdog\",\n    className: \"text-gray-300 hover:text-white transition-colors\"\n  }, \"Draft\")), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"li\", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement((next_link__WEBPACK_IMPORTED_MODULE_1___default()), {\n    href: \"/leaderboard\",\n    className: \"text-gray-300 hover:text-white transition-colors\"\n  }, \"Leaderboard\")), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"li\", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement((next_link__WEBPACK_IMPORTED_MODULE_1___default()), {\n    href: \"/profile\",\n    className: \"text-gray-300 hover:text-white transition-colors\"\n  }, \"Profile\")))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"h4\", {\n    className: \"text-lg font-semibold mb-4\",\n    style: {\n      color: '#59c5bf'\n    }\n  }, \"Support\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"ul\", {\n    className: \"space-y-2\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"li\", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"a\", {\n    href: \"#\",\n    className: \"text-gray-300 hover:text-white transition-colors\"\n  }, \"Help Center\")), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"li\", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"a\", {\n    href: \"#\",\n    className: \"text-gray-300 hover:text-white transition-colors\"\n  }, \"Contact Us\")), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"li\", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"a\", {\n    href: \"#\",\n    className: \"text-gray-300 hover:text-white transition-colors\"\n  }, \"FAQ\")), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"li\", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement((next_link__WEBPACK_IMPORTED_MODULE_1___default()), {\n    href: \"/rules\",\n    className: \"text-gray-300 hover:text-white transition-colors\"\n  }, \"Rules\")))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"h4\", {\n    className: \"text-lg font-semibold mb-4\",\n    style: {\n      color: '#59c5bf'\n    }\n  }, \"Company\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"ul\", {\n    className: \"space-y-2\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"li\", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"a\", {\n    href: \"#\",\n    className: \"text-gray-300 hover:text-white transition-colors\"\n  }, \"About\")), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"li\", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"a\", {\n    href: \"#\",\n    className: \"text-gray-300 hover:text-white transition-colors\"\n  }, \"Blog\")), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"li\", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"a\", {\n    href: \"#\",\n    className: \"text-gray-300 hover:text-white transition-colors\"\n  }, \"Careers\")), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"li\", {\n    className: \"relative\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"button\", {\n    onClick: function onClick() {\n      return setShowPressModal(true);\n    },\n    className: \"text-gray-300 hover:text-white transition-colors\"\n  }, \"Press\"), showPressModal && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"absolute top-0 -left-60 bg-gray-800 p-4 rounded-lg z-10\",\n    style: {\n      width: '280px'\n    }\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"button\", {\n    onClick: function onClick() {\n      return setShowPressModal(false);\n    },\n    className: \"absolute -top-2 right-2 text-gray-400 hover:text-white text-4xl font-bold\"\n  }, \"\\xD7\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"text-center\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"p\", {\n    className: \"text-[#59c5bf] pb-0 pr-1\"\n  }, \"they hate us cuz they ain't us\")))))))));\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-node)/./components/Footer.js\n");

/***/ }),

/***/ "(pages-dir-node)/./components/FullDraftBoard.js":
/*!**************************************!*\
  !*** ./components/FullDraftBoard.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ FullDraftBoard)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _team_logos__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./team-logos */ \"(pages-dir-node)/./components/team-logos/index.js\");\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\n\n\n\n// Team colors (keep as before)\nvar TEAM_COLORS = ['#2563eb',\n// blue\n'#e11d48',\n// red\n'#10b981',\n// green\n'#f59e42',\n// orange\n'#a21caf',\n// purple\n'#14b8a6',\n// teal\n'#facc15',\n// yellow\n'#f472b6',\n// pink\n'#6b7280',\n// gray\n'#92400e',\n// brown\n'#84cc16',\n// lime\n'#6366f1' // indigo\n];\n\n// Exact Underdog-style position colors\nvar POSITION_COLORS = {\n  QB: '#7C3AED',\n  // deep purple\n  RB: '#008C47',\n  // darker green\n  WR: '#F59E42',\n  // bright orange\n  TE: '#F472B6' // hot pink\n};\n\n// SVG checkered flag overlay\nvar CheckeredFlag = function CheckeredFlag() {\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"svg\", {\n    width: \"18\",\n    height: \"18\",\n    viewBox: \"0 0 18 18\",\n    style: {\n      position: 'absolute',\n      top: 0,\n      right: 0\n    }\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"rect\", {\n    width: \"18\",\n    height: \"18\",\n    fill: \"white\"\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"rect\", {\n    x: \"0\",\n    y: \"0\",\n    width: \"9\",\n    height: \"9\",\n    fill: \"black\"\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"rect\", {\n    x: \"9\",\n    y: \"9\",\n    width: \"9\",\n    height: \"9\",\n    fill: \"black\"\n  }));\n};\nfunction FullDraftBoard(_ref) {\n  var _room$settings;\n  var room = _ref.room,\n    picks = _ref.picks,\n    participants = _ref.participants,\n    draftOrder = _ref.draftOrder,\n    PLAYER_POOL = _ref.PLAYER_POOL;\n  if (!room) return null;\n  var totalRounds = (room === null || room === void 0 || (_room$settings = room.settings) === null || _room$settings === void 0 ? void 0 : _room$settings.totalRounds) || 18;\n  var effectiveDraftOrder = draftOrder.length > 0 ? draftOrder : participants;\n  var rounds = Array.from({\n    length: totalRounds\n  }, function (_, i) {\n    return i + 1;\n  });\n  var maxTeams = 12;\n  var gridParticipants = _toConsumableArray(effectiveDraftOrder);\n  while (gridParticipants.length < maxTeams) gridParticipants.push('---');\n\n  // Build picks grid\n  var picksByTeam = gridParticipants.map(function (team, teamIndex) {\n    return rounds.map(function (round) {\n      var isSnakeRound = round % 2 === 0;\n      var pickPosition;\n      if (isSnakeRound) {\n        pickPosition = effectiveDraftOrder.length - 1 - teamIndex;\n      } else {\n        pickPosition = teamIndex;\n      }\n      var expectedTeam = effectiveDraftOrder[pickPosition];\n      var pick = picks.find(function (p) {\n        return p.user === expectedTeam && p.round === round;\n      });\n      return pick ? pick.player : '';\n    });\n  });\n  var getPositionColor = function getPositionColor(position) {\n    switch (position) {\n      case 'QB':\n        return '#ff6b5a';\n      case 'RB':\n        return '#c4b5fd';\n      case 'WR':\n        return '#13b8a6';\n      case 'TE':\n        return '#6366f1';\n      default:\n        return '#6b7280';\n    }\n  };\n\n  // Robust player name matching function\n  var findPlayerInPool = function findPlayerInPool(playerName) {\n    if (!playerName || !PLAYER_POOL) return null;\n\n    // Try exact match first\n    var player = PLAYER_POOL.find(function (p) {\n      return p.name === playerName;\n    });\n    if (player) return player;\n\n    // Try case-insensitive match\n    player = PLAYER_POOL.find(function (p) {\n      return p.name.toLowerCase() === playerName.toLowerCase();\n    });\n    if (player) return player;\n\n    // Try matching by last name (common format: \"McBride\" vs \"Trey McBride\")\n    var lastName = playerName.split(' ').pop();\n    if (lastName && lastName.length > 2) {\n      player = PLAYER_POOL.find(function (p) {\n        return p.name.toLowerCase().includes(lastName.toLowerCase());\n      });\n      if (player) return player;\n    }\n\n    // Try matching by first name + last name variations\n    var nameParts = playerName.split(' ');\n    if (nameParts.length >= 2) {\n      var firstName = nameParts[0];\n      var _lastName = nameParts.slice(1).join(' ');\n\n      // Try \"First Last\" format\n      player = PLAYER_POOL.find(function (p) {\n        var poolNameParts = p.name.split(' ');\n        if (poolNameParts.length >= 2) {\n          var poolFirstName = poolNameParts[0];\n          var poolLastName = poolNameParts.slice(1).join(' ');\n          return poolFirstName.toLowerCase() === firstName.toLowerCase() && poolLastName.toLowerCase() === _lastName.toLowerCase();\n        }\n        return false;\n      });\n      if (player) return player;\n\n      // Try \"Last, First\" format\n      player = PLAYER_POOL.find(function (p) {\n        var poolNameParts = p.name.split(' ');\n        if (poolNameParts.length >= 2) {\n          var poolFirstName = poolNameParts[0];\n          var poolLastName = poolNameParts.slice(1).join(' ');\n          return poolFirstName.toLowerCase() === firstName.toLowerCase() && poolLastName.toLowerCase() === _lastName.toLowerCase();\n        }\n        return false;\n      });\n      if (player) return player;\n    }\n    return null;\n  };\n\n  // Calculate position proportions for each team using picksByTeam (snake order)\n  var getTeamPositionProportions = function getTeamPositionProportions(teamIdx) {\n    var teamPlayers = picksByTeam[teamIdx] || [];\n    var positionCounts = {};\n    var totalPicks = 0;\n    teamPlayers.forEach(function (playerName) {\n      if (!playerName) return;\n      var playerData = findPlayerInPool(playerName);\n      if (playerData && playerData.position) {\n        positionCounts[playerData.position] = (positionCounts[playerData.position] || 0) + 1;\n        totalPicks++;\n      }\n    });\n    if (totalPicks === 0) return [];\n    // Always return in order: QB, RB, WR, TE\n    var positions = ['QB', 'RB', 'WR', 'TE'];\n    return positions.map(function (position) {\n      return {\n        position: position,\n        proportion: (positionCounts[position] || 0) / totalPicks,\n        color: getPositionColor(position)\n      };\n    }).filter(function (prop) {\n      return prop.proportion > 0;\n    }); // Optionally, keep this filter to skip zero-width bars\n  };\n\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"mb-8\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"overflow-x-auto w-full\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"table\", {\n    className: \"w-full max-w-none border-collapse text-sm\",\n    style: {\n      border: '6px solid #18181b'\n    }\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"thead\", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"tr\", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"th\", {\n    className: \"p-3 font-bold text-lg\",\n    style: {\n      background: '#18181b',\n      color: '#fff',\n      border: '6px solid #18181b',\n      width: 10,\n      minWidth: 10,\n      maxWidth: 10,\n      height: 80\n    }\n  }), gridParticipants.map(function (team, idx) {\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"th\", {\n      key: team + idx,\n      className: \"p-0 border-2 font-bold text-lg\",\n      style: {\n        background: '#18181b',\n        color: '#fff',\n        border: '6px solid #18181b',\n        padding: 0,\n        width: 72,\n        minWidth: 72,\n        maxWidth: 72,\n        height: 80\n      }\n    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        marginTop: 8,\n        height: '100%'\n      }\n    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        marginBottom: 4\n      }\n    }, function () {\n      if (typeof team !== 'string' || team === '---') return '';\n      // Use animal logo for each team\n      var logoIndex = idx % _team_logos__WEBPACK_IMPORTED_MODULE_1__.logoOptions.length;\n      var LogoComponent = _team_logos__WEBPACK_IMPORTED_MODULE_1__.logoOptions[logoIndex].component;\n      var bgColor = _team_logos__WEBPACK_IMPORTED_MODULE_1__.logoOptions[logoIndex].bgColor;\n      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(LogoComponent, {\n        size: 36,\n        bgColor: bgColor\n      });\n    }()), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n      className: \"text-xs text-center w-full break-words leading-tight\",\n      style: {\n        color: '#fff',\n        fontWeight: 700,\n        textTransform: 'uppercase',\n        letterSpacing: 0.5,\n        fontSize: 10,\n        fontFamily: 'Arial, Helvetica, sans-serif'\n      }\n    }, team), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n      style: {\n        height: 6,\n        width: 90,\n        borderRadius: 3,\n        marginTop: 2,\n        marginBottom: 18,\n        display: 'flex',\n        overflow: 'hidden'\n      }\n    }, function () {\n      var proportions = getTeamPositionProportions(idx);\n      if (proportions.length === 0) {\n        return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n          style: {\n            height: 6,\n            width: 90,\n            background: TEAM_COLORS[idx % TEAM_COLORS.length],\n            borderRadius: 3\n          }\n        });\n      }\n      // Always render in order QB, RB, WR, TE\n      return proportions.map(function (prop, propIdx) {\n        return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n          key: prop.position,\n          style: {\n            height: 6,\n            width: \"\".concat(prop.proportion * 90, \"px\"),\n            background: prop.color,\n            minWidth: prop.proportion > 0 ? '2px' : 0\n          }\n        });\n      });\n    }())));\n  }))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"tbody\", null, rounds.map(function (round, rIdx) {\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"tr\", {\n      key: round\n    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"td\", {\n      className: \"p-3 font-bold text-lg\",\n      style: {\n        background: '#18181b',\n        color: '#fff',\n        border: '6px solid #18181b',\n        width: 10,\n        minWidth: 10,\n        maxWidth: 10,\n        height: 80\n      }\n    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n      className: \"flex flex-col items-center\"\n    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n      className: \"text-xs\",\n      style: {\n        color: '#fff'\n      }\n    }, round))), gridParticipants.map(function (team, tIdx) {\n      var playerName = picksByTeam[tIdx][rIdx];\n      var cellStyle = {\n        background: '#18181b',\n        color: '#fff',\n        border: '6px solid #18181b',\n        padding: 0,\n        width: 72,\n        minWidth: 72,\n        maxWidth: 72,\n        height: 80,\n        minHeight: 80,\n        maxHeight: 80\n      };\n      var playerData = null;\n      var innerBorderColor = null;\n      if (playerName) {\n        playerData = findPlayerInPool(playerName);\n        if (playerData) {\n          innerBorderColor = getPositionColor(playerData.position);\n        }\n      }\n      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"td\", {\n        key: team + tIdx + round,\n        className: \"text-center font-bold\",\n        style: cellStyle\n      }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n        className: \"min-h-full flex items-center justify-center w-full h-full\"\n      }, playerName ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n        className: \"text-sm rounded w-full h-full flex flex-col justify-center items-center\",\n        style: {\n          position: 'relative',\n          overflow: 'visible',\n          background: 'transparent',\n          height: '100%',\n          width: '100%',\n          boxSizing: 'border-box',\n          borderTop: innerBorderColor ? \"18px solid \".concat(innerBorderColor) : undefined,\n          borderLeft: innerBorderColor ? \"4px solid \".concat(innerBorderColor) : undefined,\n          borderRight: innerBorderColor ? \"4px solid \".concat(innerBorderColor) : undefined,\n          borderBottom: innerBorderColor ? \"4px solid \".concat(innerBorderColor) : undefined,\n          borderRadius: 8,\n          margin: 0,\n          padding: 0,\n          textAlign: 'left',\n          alignItems: 'flex-start',\n          paddingLeft: 8\n        }\n      }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"span\", {\n        style: {\n          position: 'absolute',\n          top: -16,\n          left: 6,\n          right: 6,\n          height: 16,\n          width: 'calc(100% - 12px)',\n          display: 'flex',\n          flexDirection: 'row',\n          alignItems: 'center',\n          justifyContent: 'space-between',\n          fontWeight: 700,\n          fontSize: 10,\n          color: '#fff',\n          zIndex: 4,\n          pointerEvents: 'none'\n        }\n      }, function () {\n        var pickObj = picks.find(function (p) {\n          return p.player === playerName && p.round === round;\n        });\n        if (!pickObj) return '';\n        var pickNumber = pickObj.pickNumber;\n        var roundNum = pickObj.round;\n        var pickInRound = (pickNumber - 1) % 12 + 1;\n        var pickInRoundStr = pickInRound < 10 ? \"0\".concat(pickInRound) : \"\".concat(pickInRound);\n        return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"span\", {\n          style: {\n            marginLeft: -2\n          }\n        }, pickNumber), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"span\", {\n          style: {\n            marginRight: -2\n          }\n        }, \"\".concat(roundNum, \".\").concat(pickInRoundStr)));\n      }()), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n        style: {\n          fontSize: 12,\n          letterSpacing: 0.5,\n          color: '#fff',\n          marginTop: 4,\n          fontFamily: 'Arial, Helvetica, sans-serif'\n        }\n      }, function () {\n        if (!playerName) return null;\n        var nameParts = playerName.split(' ');\n        if (nameParts.length === 1) {\n          return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"span\", null, playerName);\n        }\n        var firstName = nameParts[0];\n        var lastName = nameParts.slice(1).join(' ');\n        return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"span\", {\n          style: {\n            display: 'block',\n            marginBottom: 0,\n            lineHeight: 1,\n            marginTop: 5\n          }\n        }, firstName), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"span\", {\n          style: {\n            display: 'block',\n            lineHeight: 1,\n            marginBottom: 2\n          }\n        }, lastName));\n      }()), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n        className: \"text-xs\",\n        style: {\n          color: '#fff',\n          fontWeight: 500,\n          marginBottom: 8,\n          fontSize: 10,\n          fontFamily: 'Futura, Helvetica, Arial, sans-serif'\n        }\n      }, playerData ? \"\".concat(playerData.position, \" \\u2022 \").concat(playerData.team) : '')) :\n      /*#__PURE__*/\n      // FUTURE PICK: Grey outline style matching completed picks\n      react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n        className: \"text-sm rounded w-full h-full flex flex-col justify-center items-center\",\n        style: {\n          position: 'relative',\n          overflow: 'visible',\n          background: 'transparent',\n          height: '100%',\n          width: '100%',\n          boxSizing: 'border-box',\n          borderTop: '18px solid #6b7280',\n          borderLeft: '4px solid #6b7280',\n          borderRight: '4px solid #6b7280',\n          borderBottom: '4px solid #6b7280',\n          borderRadius: 8,\n          margin: 0,\n          padding: 0,\n          textAlign: 'left',\n          alignItems: 'flex-start',\n          paddingLeft: 8\n        }\n      }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"span\", {\n        style: {\n          position: 'absolute',\n          top: -16,\n          left: 6,\n          right: 6,\n          height: 16,\n          width: 'calc(100% - 12px)',\n          display: 'flex',\n          flexDirection: 'row',\n          alignItems: 'center',\n          justifyContent: 'space-between',\n          fontWeight: 700,\n          fontSize: 10,\n          color: '#fff',\n          zIndex: 4,\n          pointerEvents: 'none'\n        }\n      }, function () {\n        // Calculate pick number and round info for future picks\n        var isSnakeRound = round % 2 === 0;\n        var pickPosition;\n        if (isSnakeRound) {\n          pickPosition = effectiveDraftOrder.length - 1 - tIdx;\n        } else {\n          pickPosition = tIdx;\n        }\n        var expectedTeam = effectiveDraftOrder[pickPosition];\n        var pickNumber = (round - 1) * effectiveDraftOrder.length + pickPosition + 1;\n        var pickInRound = pickPosition + 1;\n        var pickInRoundStr = pickInRound < 10 ? \"0\".concat(pickInRound) : \"\".concat(pickInRound);\n        return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"span\", {\n          style: {\n            marginLeft: -2\n          }\n        }, pickNumber), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"span\", {\n          style: {\n            marginRight: -2\n          }\n        }, \"\".concat(round, \".\").concat(pickInRoundStr)));\n      }()))));\n    }));\n  })))));\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-node)/./components/FullDraftBoard.js\n");

/***/ }),

/***/ "(pages-dir-node)/./components/Navbar.js":
/*!******************************!*\
  !*** ./components/Navbar.js ***!
  \******************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Navbar)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/link */ \"(pages-dir-node)/./node_modules/next/link.js\");\n/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_link__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/router */ \"(pages-dir-node)/./node_modules/next/router.js\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _lib_userStats__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../lib/userStats */ \"(pages-dir-node)/./lib/userStats.js\");\n/* harmony import */ var _DepositModal__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./DepositModal */ \"(pages-dir-node)/./components/DepositModal.js\");\n/* harmony import */ var _lib_devAuth__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../lib/devAuth */ \"(pages-dir-node)/./lib/devAuth.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_lib_userStats__WEBPACK_IMPORTED_MODULE_3__, _DepositModal__WEBPACK_IMPORTED_MODULE_4__]);\n([_lib_userStats__WEBPACK_IMPORTED_MODULE_3__, _DepositModal__WEBPACK_IMPORTED_MODULE_4__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw new Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw new Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, \"catch\": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n\n\n\n\n\nfunction Navbar() {\n  var router = (0,next_router__WEBPACK_IMPORTED_MODULE_2__.useRouter)();\n  var _useState = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isOpen = _useState2[0],\n    setIsOpen = _useState2[1];\n  var _useState3 = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    showDepositModal = _useState4[0],\n    setShowDepositModal = _useState4[1];\n  var _useState5 = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    userStats = _useState6[0],\n    setUserStats = _useState6[1];\n  var _useState7 = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    showProfileDropdown = _useState8[0],\n    setShowProfileDropdown = _useState8[1];\n  var _useState9 = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false),\n    _useState10 = _slicedToArray(_useState9, 2),\n    hasDevAccess = _useState10[0],\n    setHasDevAccess = _useState10[1];\n  var dropdownRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n  var userId = 'Not Todd Middleton'; // Replace with real user ID in production\n\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {\n    fetchUserStats();\n    checkDevAccess();\n  }, []);\n  var checkDevAccess = function checkDevAccess() {\n    var accessToken = sessionStorage.getItem('devAccessToken');\n    if ((0,_lib_devAuth__WEBPACK_IMPORTED_MODULE_5__.canAccessDevFeatures)(userId, accessToken)) {\n      setHasDevAccess(true);\n    }\n  };\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {\n    function handleClickOutside(event) {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n        setShowProfileDropdown(false);\n      }\n    }\n    document.addEventListener('mousedown', handleClickOutside);\n    return function () {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []);\n  var fetchUserStats = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var stats, _t;\n      return _regeneratorRuntime().wrap(function (_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 1;\n            return (0,_lib_userStats__WEBPACK_IMPORTED_MODULE_3__.getUserStats)(userId);\n          case 1:\n            stats = _context.sent;\n            setUserStats(stats);\n            _context.next = 3;\n            break;\n          case 2:\n            _context.prev = 2;\n            _t = _context[\"catch\"](0);\n            console.error('Error fetching user stats:', _t);\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee, null, [[0, 2]]);\n    }));\n    return function fetchUserStats() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  // Button label logic\n  var userBalance = (userStats === null || userStats === void 0 ? void 0 : userStats.balance) || 0;\n  var depositButtonLabel = userBalance > 0 ? \"$\".concat(userBalance.toFixed(2)) : 'Deposit';\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"header\", {\n    className: \"w-full z-50\",\n    style: {\n      background: '#59c5bf'\n    }\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"nav\", {\n    className: \"shadow-lg text-black\",\n    style: {\n      background: '#59c5bf'\n    }\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"max-w-7xl mx-auto px-4 sm:px-4 lg:px-4\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"flex justify-between h-16\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"flex items-center\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement((next_link__WEBPACK_IMPORTED_MODULE_1___default()), {\n    href: \"/\",\n    className: \"flex-shrink-0 flex items-center -ml-8\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"img\", {\n    src: \"/logo.png\",\n    alt: \"TopDog.dog Logo\",\n    className: \"h-12 w-auto\"\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"span\", {\n    className: \"ml-6 text-base font-medium\",\n    style: {\n      fontSize: '1.1rem',\n      WebkitTextStroke: '0.12px #18181b',\n      color: '#111827'\n    }\n  }, \"TopDog.dog\"))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"hidden md:flex items-center space-x-8 flex-1 justify-end\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"relative\",\n    ref: dropdownRef\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"button\", {\n    onClick: function onClick() {\n      return setShowProfileDropdown(!showProfileDropdown);\n    },\n    className: \"hover:text-accent px-3 py-2 rounded-md text-base font-medium flex items-center\",\n    style: {\n      fontSize: '1.1rem',\n      WebkitTextStroke: '0.12px #18181b',\n      color: '#111827'\n    }\n  }, \"Profile\", /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"svg\", {\n    className: \"ml-1 h-4 w-4\",\n    fill: \"none\",\n    stroke: \"currentColor\",\n    viewBox: \"0 0 24 24\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 2,\n    d: \"M19 9l-7 7-7-7\"\n  }))), showProfileDropdown && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"absolute right-0 mt-2 w-48 bg-white rounded-md shadow-lg py-1 z-50\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement((next_link__WEBPACK_IMPORTED_MODULE_1___default()), {\n    href: \"/profile\",\n    className: \"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100\"\n  }, \"Profile\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement((next_link__WEBPACK_IMPORTED_MODULE_1___default()), {\n    href: \"/statistics\",\n    className: \"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100\"\n  }, \"Statistics\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement((next_link__WEBPACK_IMPORTED_MODULE_1___default()), {\n    href: \"/rankings\",\n    className: \"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100\"\n  }, \"Rankings\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement((next_link__WEBPACK_IMPORTED_MODULE_1___default()), {\n    href: \"/deposit-history\",\n    className: \"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100\"\n  }, \"Transaction History\"), hasDevAccess && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement((next_link__WEBPACK_IMPORTED_MODULE_1___default()), {\n    href: \"/tournaments/dev\",\n    className: \"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 border-t border-gray-200\"\n  }, \"Development Tournaments\"))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"button\", {\n    onClick: function onClick() {\n      return setShowDepositModal(true);\n    },\n    className: \"bg-gray-900 px-4 py-2 rounded-lg font-bold transition-colors ml-8 -mr-8\",\n    style: {\n      color: '#e5e7eb'\n    },\n    onMouseEnter: function onMouseEnter(e) {\n      e.target.classList.add('blue-marbled-texture');\n      e.target.style.color = '#e5e7eb';\n      e.target.style.border = 'none';\n    },\n    onMouseLeave: function onMouseLeave(e) {\n      e.target.classList.remove('blue-marbled-texture');\n      e.target.style.color = '#e5e7eb';\n      e.target.style.border = 'none';\n    }\n  }, depositButtonLabel)), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"md:hidden flex items-center\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"button\", {\n    onClick: function onClick() {\n      return setIsOpen(!isOpen);\n    },\n    className: \"inline-flex items-center justify-center p-2 rounded-md text-primary hover:text-accent hover:bg-accent/10 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-primary\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"span\", {\n    className: \"sr-only\"\n  }, \"Open main menu\"), !isOpen ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"svg\", {\n    className: \"block h-6 w-6\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    stroke: \"currentColor\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 2,\n    d: \"M4 6h16M4 12h16M4 18h16\"\n  })) : /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"svg\", {\n    className: \"block h-6 w-6\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    stroke: \"currentColor\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 2,\n    d: \"M6 18L18 6M6 6l12 12\"\n  })))))))), isOpen && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"md:hidden\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"px-2 pt-2 pb-3 space-y-1 sm:px-3\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement((next_link__WEBPACK_IMPORTED_MODULE_1___default()), {\n    href: \"/profile\",\n    className: \"hover:text-accent block px-3 py-2 rounded-md text-lg font-medium\",\n    style: {\n      WebkitTextStroke: '0.12px #18181b',\n      color: '#111827'\n    }\n  }, \"Profile\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement((next_link__WEBPACK_IMPORTED_MODULE_1___default()), {\n    href: \"/statistics\",\n    className: \"hover:text-accent block px-3 py-2 rounded-md text-lg font-medium\",\n    style: {\n      WebkitTextStroke: '0.12px #18181b',\n      color: '#111827'\n    }\n  }, \"Statistics\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement((next_link__WEBPACK_IMPORTED_MODULE_1___default()), {\n    href: \"/rankings\",\n    className: \"hover:text-accent block px-3 py-2 rounded-md text-lg font-medium\",\n    style: {\n      WebkitTextStroke: '0.12px #18181b',\n      color: '#111827'\n    }\n  }, \"Rankings\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement((next_link__WEBPACK_IMPORTED_MODULE_1___default()), {\n    href: \"/deposit-history\",\n    className: \"hover:text-accent block px-3 py-2 rounded-md text-lg font-medium\",\n    style: {\n      WebkitTextStroke: '0.12px #18181b',\n      color: '#111827'\n    }\n  }, \"Transaction History\"), hasDevAccess && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement((next_link__WEBPACK_IMPORTED_MODULE_1___default()), {\n    href: \"/tournaments/dev\",\n    className: \"hover:text-accent block px-3 py-2 rounded-md text-lg font-medium\",\n    style: {\n      WebkitTextStroke: '0.12px #18181b',\n      color: '#111827'\n    }\n  }, \"Development Tournaments\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"button\", {\n    onClick: function onClick() {\n      setShowDepositModal(true);\n      setIsOpen(false);\n    },\n    className: \"w-full text-left bg-gray-900 px-3 py-2 rounded-md text-lg font-medium transition-colors\",\n    style: {\n      color: '#e5e7eb'\n    },\n    onMouseEnter: function onMouseEnter(e) {\n      e.target.classList.add('blue-marbled-texture');\n      e.target.style.color = '#e5e7eb';\n      e.target.style.border = 'none';\n    },\n    onMouseLeave: function onMouseLeave(e) {\n      e.target.classList.remove('blue-marbled-texture');\n      e.target.style.color = '#e5e7eb';\n      e.target.style.border = 'none';\n    }\n  }, depositButtonLabel))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_DepositModal__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n    open: showDepositModal,\n    onClose: function onClose() {\n      setShowDepositModal(false);\n      fetchUserStats(); // Refresh stats after deposit\n    },\n\n    userId: userId\n  }));\n}\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1ub2RlKS8uL2NvbXBvbmVudHMvTmF2YmFyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7OytDQUNBLHFKQUFBQSxtQkFBQSxZQUFBQSxvQkFBQSxXQUFBQyxDQUFBLFNBQUFDLENBQUEsRUFBQUQsQ0FBQSxPQUFBRSxDQUFBLEdBQUFDLE1BQUEsQ0FBQUMsU0FBQSxFQUFBQyxDQUFBLEdBQUFILENBQUEsQ0FBQUksY0FBQSxFQUFBQyxDQUFBLEdBQUFKLE1BQUEsQ0FBQUssY0FBQSxjQUFBUCxDQUFBLEVBQUFELENBQUEsRUFBQUUsQ0FBQSxJQUFBRCxDQUFBLENBQUFELENBQUEsSUFBQUUsQ0FBQSxDQUFBTyxLQUFBLEtBQUFDLENBQUEsd0JBQUFDLE1BQUEsR0FBQUEsTUFBQSxPQUFBQyxDQUFBLEdBQUFGLENBQUEsQ0FBQUcsUUFBQSxrQkFBQUMsQ0FBQSxHQUFBSixDQUFBLENBQUFLLGFBQUEsdUJBQUFDLENBQUEsR0FBQU4sQ0FBQSxDQUFBTyxXQUFBLDhCQUFBQyxPQUFBakIsQ0FBQSxFQUFBRCxDQUFBLEVBQUFFLENBQUEsV0FBQUMsTUFBQSxDQUFBSyxjQUFBLENBQUFQLENBQUEsRUFBQUQsQ0FBQSxJQUFBUyxLQUFBLEVBQUFQLENBQUEsRUFBQWlCLFVBQUEsTUFBQUMsWUFBQSxNQUFBQyxRQUFBLFNBQUFwQixDQUFBLENBQUFELENBQUEsV0FBQWtCLE1BQUEsbUJBQUFqQixDQUFBLElBQUFpQixNQUFBLFlBQUFBLE9BQUFqQixDQUFBLEVBQUFELENBQUEsRUFBQUUsQ0FBQSxXQUFBRCxDQUFBLENBQUFELENBQUEsSUFBQUUsQ0FBQSxnQkFBQW9CLEtBQUFyQixDQUFBLEVBQUFELENBQUEsRUFBQUUsQ0FBQSxFQUFBRyxDQUFBLFFBQUFLLENBQUEsR0FBQVYsQ0FBQSxJQUFBQSxDQUFBLENBQUFJLFNBQUEsWUFBQW1CLFNBQUEsR0FBQXZCLENBQUEsR0FBQXVCLFNBQUEsRUFBQVgsQ0FBQSxHQUFBVCxNQUFBLENBQUFx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QUUsR0FFRHpCLGtCQUNLLENBQ0wsQ0FDRixDQUNOLGVBSUh0RCwwREFBQSxDQUFDTyxxREFBWTtJQUNYNEUsSUFBSSxFQUFFbEUsZ0JBQWlCO0lBQ3ZCbUUsT0FBTyxFQUFFLFNBQVRBLE9BQU9BLENBQUEsRUFBUTtNQUNibEUsbUJBQW1CLENBQUMsS0FBSyxDQUFDO01BQzFCZSxjQUFjLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDcEIsQ0FBRTs7SUFDRkQsTUFBTSxFQUFFQTtFQUFPLENBQ2hCLENBQ0QsQ0FBQztBQUVQLEMiLCJzb3VyY2VzIjpbIi9Vc2Vycy90ZWRkeS9iZXN0YmFsbC1zaXRlL2NvbXBvbmVudHMvTmF2YmFyLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyB1c2VTdGF0ZSwgdXNlRWZmZWN0LCB1c2VSZWYgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgTGluayBmcm9tICduZXh0L2xpbmsnXG5pbXBvcnQgeyB1c2VSb3V0ZXIgfSBmcm9tICduZXh0L3JvdXRlcic7XG5pbXBvcnQgeyBnZXRVc2VyU3RhdHMgfSBmcm9tICcuLi9saWIvdXNlclN0YXRzJztcbmltcG9ydCBEZXBvc2l0TW9kYWwgZnJvbSAnLi9EZXBvc2l0TW9kYWwnO1xuaW1wb3J0IHsgY2FuQWNjZXNzRGV2RmVhdHVyZXMgfSBmcm9tICcuLi9saWIvZGV2QXV0aCc7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE5hdmJhcigpIHtcbiAgY29uc3Qgcm91dGVyID0gdXNlUm91dGVyKCk7XG4gIGNvbnN0IFtpc09wZW4sIHNldElzT3Blbl0gPSB1c2VTdGF0ZShmYWxzZSlcbiAgY29uc3QgW3Nob3dEZXBvc2l0TW9kYWwsIHNldFNob3dEZXBvc2l0TW9kYWxdID0gdXNlU3RhdGUoZmFsc2UpXG4gIGNvbnN0IFt1c2VyU3RhdHMsIHNldFVzZXJTdGF0c10gPSB1c2VTdGF0ZShudWxsKVxuICBjb25zdCBbc2hvd1Byb2ZpbGVEcm9wZG93biwgc2V0U2hvd1Byb2ZpbGVEcm9wZG93bl0gPSB1c2VTdGF0ZShmYWxzZSlcbiAgY29uc3QgW2hhc0RldkFjY2Vzcywgc2V0SGFzRGV2QWNjZXNzXSA9IHVzZVN0YXRlKGZhbHNlKVxuICBjb25zdCBkcm9wZG93blJlZiA9IHVzZVJlZihudWxsKVxuICBjb25zdCB1c2VySWQgPSAnTm90IFRvZGQgTWlkZGxldG9uJyAvLyBSZXBsYWNlIHdpdGggcmVhbCB1c2VyIElEIGluIHByb2R1Y3Rpb25cblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGZldGNoVXNlclN0YXRzKClcbiAgICBjaGVja0RldkFjY2VzcygpXG4gIH0sIFtdKVxuXG4gIGNvbnN0IGNoZWNrRGV2QWNjZXNzID0gKCkgPT4ge1xuICAgIGNvbnN0IGFjY2Vzc1Rva2VuID0gc2Vzc2lvblN0b3JhZ2UuZ2V0SXRlbSgnZGV2QWNjZXNzVG9rZW4nKTtcbiAgICBpZiAoY2FuQWNjZXNzRGV2RmVhdHVyZXModXNlcklkLCBhY2Nlc3NUb2tlbikpIHtcbiAgICAgIHNldEhhc0RldkFjY2Vzcyh0cnVlKTtcbiAgICB9XG4gIH07XG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBmdW5jdGlvbiBoYW5kbGVDbGlja091dHNpZGUoZXZlbnQpIHtcbiAgICAgIGlmIChkcm9wZG93blJlZi5jdXJyZW50ICYmICFkcm9wZG93blJlZi5jdXJyZW50LmNvbnRhaW5zKGV2ZW50LnRhcmdldCkpIHtcbiAgICAgICAgc2V0U2hvd1Byb2ZpbGVEcm9wZG93bihmYWxzZSlcbiAgICAgIH1cbiAgICB9XG5cbiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdtb3VzZWRvd24nLCBoYW5kbGVDbGlja091dHNpZGUpXG4gICAgcmV0dXJuICgpID0+IHtcbiAgICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ21vdXNlZG93bicsIGhhbmRsZUNsaWNrT3V0c2lkZSlcbiAgICB9XG4gIH0sIFtdKVxuXG4gIGNvbnN0IGZldGNoVXNlclN0YXRzID0gYXN5bmMgKCkgPT4ge1xuICAgIHRyeSB7XG4gICAgICBjb25zdCBzdGF0cyA9IGF3YWl0IGdldFVzZXJTdGF0cyh1c2VySWQpXG4gICAgICBzZXRVc2VyU3RhdHMoc3RhdHMpXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGZldGNoaW5nIHVzZXIgc3RhdHM6JywgZXJyb3IpXG4gICAgfVxuICB9XG5cbiAgLy8gQnV0dG9uIGxhYmVsIGxvZ2ljXG4gIGNvbnN0IHVzZXJCYWxhbmNlID0gdXNlclN0YXRzPy5iYWxhbmNlIHx8IDBcbiAgY29uc3QgZGVwb3NpdEJ1dHRvbkxhYmVsID0gdXNlckJhbGFuY2UgPiAwXG4gICAgPyBgJCR7dXNlckJhbGFuY2UudG9GaXhlZCgyKX1gXG4gICAgOiAnRGVwb3NpdCdcblxuICByZXR1cm4gKFxuICAgIDw+XG4gICAgICA8aGVhZGVyIGNsYXNzTmFtZT1cInctZnVsbCB6LTUwXCIgc3R5bGU9e3sgYmFja2dyb3VuZDogJyM1OWM1YmYnIH19PlxuICAgICAgICA8bmF2IGNsYXNzTmFtZT1cInNoYWRvdy1sZyB0ZXh0LWJsYWNrXCIgc3R5bGU9e3sgYmFja2dyb3VuZDogJyM1OWM1YmYnIH19PlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIm1heC13LTd4bCBteC1hdXRvIHB4LTQgc206cHgtNCBsZzpweC00XCI+XG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmbGV4IGp1c3RpZnktYmV0d2VlbiBoLTE2XCI+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXggaXRlbXMtY2VudGVyXCI+XG4gICAgICAgICAgICAgIDxMaW5rIGhyZWY9XCIvXCIgY2xhc3NOYW1lPVwiZmxleC1zaHJpbmstMCBmbGV4IGl0ZW1zLWNlbnRlciAtbWwtOFwiPlxuICAgICAgICAgICAgICAgIDxpbWcgc3JjPVwiL2xvZ28ucG5nXCIgYWx0PVwiVG9wRG9nLmRvZyBMb2dvXCIgY2xhc3NOYW1lPVwiaC0xMiB3LWF1dG9cIiAvPlxuICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwibWwtNiB0ZXh0LWJhc2UgZm9udC1tZWRpdW1cIiBzdHlsZT17eyBmb250U2l6ZTogJzEuMXJlbScsIFdlYmtpdFRleHRTdHJva2U6ICcwLjEycHggIzE4MTgxYicsIGNvbG9yOiAnIzExMTgyNycgfX0+VG9wRG9nLmRvZzwvc3Bhbj5cbiAgICAgICAgICAgICAgPC9MaW5rPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIHsvKiBEZXNrdG9wIE5hdmlnYXRpb24gKi99XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImhpZGRlbiBtZDpmbGV4IGl0ZW1zLWNlbnRlciBzcGFjZS14LTggZmxleC0xIGp1c3RpZnktZW5kXCI+XG4gICAgICAgICAgICAgICAgey8qIFByb2ZpbGUgRHJvcGRvd24gKi99XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJyZWxhdGl2ZVwiIHJlZj17ZHJvcGRvd25SZWZ9PlxuICAgICAgICAgICAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiBzZXRTaG93UHJvZmlsZURyb3Bkb3duKCFzaG93UHJvZmlsZURyb3Bkb3duKX1cbiAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiaG92ZXI6dGV4dC1hY2NlbnQgcHgtMyBweS0yIHJvdW5kZWQtbWQgdGV4dC1iYXNlIGZvbnQtbWVkaXVtIGZsZXggaXRlbXMtY2VudGVyXCJcbiAgICAgICAgICAgICAgICAgICAgc3R5bGU9e3sgZm9udFNpemU6ICcxLjFyZW0nLCBXZWJraXRUZXh0U3Ryb2tlOiAnMC4xMnB4ICMxODE4MWInLCBjb2xvcjogJyMxMTE4MjcnIH19XG4gICAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgIFByb2ZpbGVcbiAgICAgICAgICAgICAgICAgICAgPHN2ZyBjbGFzc05hbWU9XCJtbC0xIGgtNCB3LTRcIiBmaWxsPVwibm9uZVwiIHN0cm9rZT1cImN1cnJlbnRDb2xvclwiIHZpZXdCb3g9XCIwIDAgMjQgMjRcIj5cbiAgICAgICAgICAgICAgICAgICAgICA8cGF0aCBzdHJva2VMaW5lY2FwPVwicm91bmRcIiBzdHJva2VMaW5lam9pbj1cInJvdW5kXCIgc3Ryb2tlV2lkdGg9ezJ9IGQ9XCJNMTkgOWwtNyA3LTctN1wiIC8+XG4gICAgICAgICAgICAgICAgICAgIDwvc3ZnPlxuICAgICAgICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgIHtzaG93UHJvZmlsZURyb3Bkb3duICYmIChcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJhYnNvbHV0ZSByaWdodC0wIG10LTIgdy00OCBiZy13aGl0ZSByb3VuZGVkLW1kIHNoYWRvdy1sZyBweS0xIHotNTBcIj5cbiAgICAgICAgICAgICAgICAgICAgICA8TGluayBocmVmPVwiL3Byb2ZpbGVcIiBjbGFzc05hbWU9XCJibG9jayBweC00IHB5LTIgdGV4dC1zbSB0ZXh0LWdyYXktNzAwIGhvdmVyOmJnLWdyYXktMTAwXCI+XG4gICAgICAgICAgICAgICAgUHJvZmlsZVxuICAgICAgICAgICAgICA8L0xpbms+XG5cblxuICAgICAgICAgICAgICAgICAgICAgIDxMaW5rIGhyZWY9XCIvc3RhdGlzdGljc1wiIGNsYXNzTmFtZT1cImJsb2NrIHB4LTQgcHktMiB0ZXh0LXNtIHRleHQtZ3JheS03MDAgaG92ZXI6YmctZ3JheS0xMDBcIj5cbiAgICAgICAgICAgICAgICBTdGF0aXN0aWNzXG4gICAgICAgICAgICAgIDwvTGluaz5cbiAgICAgICAgICAgICAgICAgICAgICA8TGluayBocmVmPVwiL3JhbmtpbmdzXCIgY2xhc3NOYW1lPVwiYmxvY2sgcHgtNCBweS0yIHRleHQtc20gdGV4dC1ncmF5LTcwMCBob3ZlcjpiZy1ncmF5LTEwMFwiPlxuICAgICAgICAgICAgICAgIFJhbmtpbmdzXG4gICAgICAgICAgICAgIDwvTGluaz5cbiAgICAgICAgICAgICAgICAgICAgICA8TGluayBocmVmPVwiL2RlcG9zaXQtaGlzdG9yeVwiIGNsYXNzTmFtZT1cImJsb2NrIHB4LTQgcHktMiB0ZXh0LXNtIHRleHQtZ3JheS03MDAgaG92ZXI6YmctZ3JheS0xMDBcIj5cbiAgICAgICAgICAgICAgICBUcmFuc2FjdGlvbiBIaXN0b3J5XG4gICAgICAgICAgICAgIDwvTGluaz5cbiAgICAgICAgICAgICAgICAgICAgICB7aGFzRGV2QWNjZXNzICYmIChcbiAgICAgICAgICAgICAgICAgICAgICAgIDxMaW5rIGhyZWY9XCIvdG91cm5hbWVudHMvZGV2XCIgY2xhc3NOYW1lPVwiYmxvY2sgcHgtNCBweS0yIHRleHQtc20gdGV4dC1ncmF5LTcwMCBob3ZlcjpiZy1ncmF5LTEwMCBib3JkZXItdCBib3JkZXItZ3JheS0yMDBcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgRGV2ZWxvcG1lbnQgVG91cm5hbWVudHNcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvTGluaz5cbiAgICAgICAgICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICl9XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgey8qIERlcG9zaXQgQnV0dG9uICovfVxuICAgICAgICAgICAgICAgIDxidXR0b25cbiAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IHNldFNob3dEZXBvc2l0TW9kYWwodHJ1ZSl9XG4gICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJiZy1ncmF5LTkwMCBweC00IHB5LTIgcm91bmRlZC1sZyBmb250LWJvbGQgdHJhbnNpdGlvbi1jb2xvcnMgbWwtOCAtbXItOFwiXG4gICAgICAgICAgICAgICAgICBzdHlsZT17eyBjb2xvcjogJyNlNWU3ZWInIH19XG4gICAgICAgICAgICAgICAgICBvbk1vdXNlRW50ZXI9eyhlKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGUudGFyZ2V0LmNsYXNzTGlzdC5hZGQoJ2JsdWUtbWFyYmxlZC10ZXh0dXJlJyk7XG4gICAgICAgICAgICAgICAgICAgIGUudGFyZ2V0LnN0eWxlLmNvbG9yID0gJyNlNWU3ZWInO1xuICAgICAgICAgICAgICAgICAgICBlLnRhcmdldC5zdHlsZS5ib3JkZXIgPSAnbm9uZSc7XG4gICAgICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgICAgICAgb25Nb3VzZUxlYXZlPXsoZSkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBlLnRhcmdldC5jbGFzc0xpc3QucmVtb3ZlKCdibHVlLW1hcmJsZWQtdGV4dHVyZScpO1xuICAgICAgICAgICAgICAgICAgICBlLnRhcmdldC5zdHlsZS5jb2xvciA9ICcjZTVlN2ViJztcbiAgICAgICAgICAgICAgICAgICAgZS50YXJnZXQuc3R5bGUuYm9yZGVyID0gJ25vbmUnO1xuICAgICAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICB7ZGVwb3NpdEJ1dHRvbkxhYmVsfVxuICAgICAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgIHsvKiBNb2JpbGUgbWVudSBidXR0b24gKi99XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIm1kOmhpZGRlbiBmbGV4IGl0ZW1zLWNlbnRlclwiPlxuICAgICAgICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICAgICAgb25DbGljaz17KCkgPT4gc2V0SXNPcGVuKCFpc09wZW4pfVxuICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cImlubGluZS1mbGV4IGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWNlbnRlciBwLTIgcm91bmRlZC1tZCB0ZXh0LXByaW1hcnkgaG92ZXI6dGV4dC1hY2NlbnQgaG92ZXI6YmctYWNjZW50LzEwIGZvY3VzOm91dGxpbmUtbm9uZSBmb2N1czpyaW5nLTIgZm9jdXM6cmluZy1pbnNldCBmb2N1czpyaW5nLXByaW1hcnlcIlxuICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwic3Itb25seVwiPk9wZW4gbWFpbiBtZW51PC9zcGFuPlxuICAgICAgICAgICAgICAgIHshaXNPcGVuID8gKFxuICAgICAgICAgICAgICAgICAgPHN2ZyBjbGFzc05hbWU9XCJibG9jayBoLTYgdy02XCIgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIGZpbGw9XCJub25lXCIgdmlld0JveD1cIjAgMCAyNCAyNFwiIHN0cm9rZT1cImN1cnJlbnRDb2xvclwiPlxuICAgICAgICAgICAgICAgICAgICA8cGF0aCBzdHJva2VMaW5lY2FwPVwicm91bmRcIiBzdHJva2VMaW5lam9pbj1cInJvdW5kXCIgc3Ryb2tlV2lkdGg9ezJ9IGQ9XCJNNCA2aDE2TTQgMTJoMTZNNCAxOGgxNlwiIC8+XG4gICAgICAgICAgICAgICAgICA8L3N2Zz5cbiAgICAgICAgICAgICAgICApIDogKFxuICAgICAgICAgICAgICAgICAgPHN2ZyBjbGFzc05hbWU9XCJibG9jayBoLTYgdy02XCIgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIGZpbGw9XCJub25lXCIgdmlld0JveD1cIjAgMCAyNCAyNFwiIHN0cm9rZT1cImN1cnJlbnRDb2xvclwiPlxuICAgICAgICAgICAgICAgICAgICA8cGF0aCBzdHJva2VMaW5lY2FwPVwicm91bmRcIiBzdHJva2VMaW5lam9pbj1cInJvdW5kXCIgc3Ryb2tlV2lkdGg9ezJ9IGQ9XCJNNiAxOEwxOCA2TTYgNmwxMiAxMlwiIC8+XG4gICAgICAgICAgICAgICAgICA8L3N2Zz5cbiAgICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9uYXY+XG4gICAgICA8L2hlYWRlcj5cblxuICAgICAgICB7LyogTW9iaWxlIE5hdmlnYXRpb24gKi99XG4gICAgICAgIHtpc09wZW4gJiYgKFxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibWQ6aGlkZGVuXCI+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInB4LTIgcHQtMiBwYi0zIHNwYWNlLXktMSBzbTpweC0zXCI+XG4gICAgICAgICAgICA8TGluayBocmVmPVwiL3Byb2ZpbGVcIiBjbGFzc05hbWU9XCJob3Zlcjp0ZXh0LWFjY2VudCBibG9jayBweC0zIHB5LTIgcm91bmRlZC1tZCB0ZXh0LWxnIGZvbnQtbWVkaXVtXCIgc3R5bGU9e3sgV2Via2l0VGV4dFN0cm9rZTogJzAuMTJweCAjMTgxODFiJywgY29sb3I6ICcjMTExODI3JyB9fT5cbiAgICAgICAgICAgICAgICBQcm9maWxlXG4gICAgICAgICAgICAgIDwvTGluaz5cblxuXG4gICAgICAgICAgICA8TGluayBocmVmPVwiL3N0YXRpc3RpY3NcIiBjbGFzc05hbWU9XCJob3Zlcjp0ZXh0LWFjY2VudCBibG9jayBweC0zIHB5LTIgcm91bmRlZC1tZCB0ZXh0LWxnIGZvbnQtbWVkaXVtXCIgc3R5bGU9e3sgV2Via2l0VGV4dFN0cm9rZTogJzAuMTJweCAjMTgxODFiJywgY29sb3I6ICcjMTExODI3JyB9fT5cbiAgICAgICAgICAgICAgICBTdGF0aXN0aWNzXG4gICAgICAgICAgICAgIDwvTGluaz5cbiAgICAgICAgICAgIDxMaW5rIGhyZWY9XCIvcmFua2luZ3NcIiBjbGFzc05hbWU9XCJob3Zlcjp0ZXh0LWFjY2VudCBibG9jayBweC0zIHB5LTIgcm91bmRlZC1tZCB0ZXh0LWxnIGZvbnQtbWVkaXVtXCIgc3R5bGU9e3sgV2Via2l0VGV4dFN0cm9rZTogJzAuMTJweCAjMTgxODFiJywgY29sb3I6ICcjMTExODI3JyB9fT5cbiAgICAgICAgICAgICAgICBSYW5raW5nc1xuICAgICAgICAgICAgICA8L0xpbms+XG4gICAgICAgICAgICA8TGluayBocmVmPVwiL2RlcG9zaXQtaGlzdG9yeVwiIGNsYXNzTmFtZT1cImhvdmVyOnRleHQtYWNjZW50IGJsb2NrIHB4LTMgcHktMiByb3VuZGVkLW1kIHRleHQtbGcgZm9udC1tZWRpdW1cIiBzdHlsZT17eyBXZWJraXRUZXh0U3Ryb2tlOiAnMC4xMnB4ICMxODE4MWInLCBjb2xvcjogJyMxMTE4MjcnIH19PlxuICAgICAgICAgICAgICAgIFRyYW5zYWN0aW9uIEhpc3RvcnlcbiAgICAgICAgICAgICAgPC9MaW5rPlxuICAgICAgICAgICAge2hhc0RldkFjY2VzcyAmJiAoXG4gICAgICAgICAgICAgIDxMaW5rIGhyZWY9XCIvdG91cm5hbWVudHMvZGV2XCIgY2xhc3NOYW1lPVwiaG92ZXI6dGV4dC1hY2NlbnQgYmxvY2sgcHgtMyBweS0yIHJvdW5kZWQtbWQgdGV4dC1sZyBmb250LW1lZGl1bVwiIHN0eWxlPXt7IFdlYmtpdFRleHRTdHJva2U6ICcwLjEycHggIzE4MTgxYicsIGNvbG9yOiAnIzExMTgyNycgfX0+XG4gICAgICAgICAgICAgICAgRGV2ZWxvcG1lbnQgVG91cm5hbWVudHNcbiAgICAgICAgICAgICAgPC9MaW5rPlxuICAgICAgICAgICAgKX1cbiAgICAgICAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IHtcbiAgICAgICAgICAgICAgICAgIHNldFNob3dEZXBvc2l0TW9kYWwodHJ1ZSk7XG4gICAgICAgICAgICAgICAgICBzZXRJc09wZW4oZmFsc2UpO1xuICAgICAgICAgICAgICAgIH19XG4gICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwidy1mdWxsIHRleHQtbGVmdCBiZy1ncmF5LTkwMCBweC0zIHB5LTIgcm91bmRlZC1tZCB0ZXh0LWxnIGZvbnQtbWVkaXVtIHRyYW5zaXRpb24tY29sb3JzXCJcbiAgICAgICAgICAgICAgICBzdHlsZT17eyBjb2xvcjogJyNlNWU3ZWInIH19XG4gICAgICAgICAgICAgICAgb25Nb3VzZUVudGVyPXsoZSkgPT4ge1xuICAgICAgICAgICAgICAgICAgZS50YXJnZXQuY2xhc3NMaXN0LmFkZCgnYmx1ZS1tYXJibGVkLXRleHR1cmUnKTtcbiAgICAgICAgICAgICAgICAgIGUudGFyZ2V0LnN0eWxlLmNvbG9yID0gJyNlNWU3ZWInO1xuICAgICAgICAgICAgICAgICAgZS50YXJnZXQuc3R5bGUuYm9yZGVyID0gJ25vbmUnO1xuICAgICAgICAgICAgICAgIH19XG4gICAgICAgICAgICAgICAgb25Nb3VzZUxlYXZlPXsoZSkgPT4ge1xuICAgICAgICAgICAgICAgICAgZS50YXJnZXQuY2xhc3NMaXN0LnJlbW92ZSgnYmx1ZS1tYXJibGVkLXRleHR1cmUnKTtcbiAgICAgICAgICAgICAgICAgIGUudGFyZ2V0LnN0eWxlLmNvbG9yID0gJyNlNWU3ZWInO1xuICAgICAgICAgICAgICAgICAgZS50YXJnZXQuc3R5bGUuYm9yZGVyID0gJ25vbmUnO1xuICAgICAgICAgICAgICAgIH19XG4gICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICB7ZGVwb3NpdEJ1dHRvbkxhYmVsfVxuICAgICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICApfVxuXG5cblxuICAgICAgPERlcG9zaXRNb2RhbCBcbiAgICAgICAgb3Blbj17c2hvd0RlcG9zaXRNb2RhbH1cbiAgICAgICAgb25DbG9zZT17KCkgPT4ge1xuICAgICAgICAgIHNldFNob3dEZXBvc2l0TW9kYWwoZmFsc2UpO1xuICAgICAgICAgIGZldGNoVXNlclN0YXRzKCk7IC8vIFJlZnJlc2ggc3RhdHMgYWZ0ZXIgZGVwb3NpdFxuICAgICAgICB9fVxuICAgICAgICB1c2VySWQ9e3VzZXJJZH1cbiAgICAgIC8+XG4gICAgPC8+XG4gIClcbn0gIl0sIm5hbWVzIjpbIl9yZWdlbmVyYXRvclJ1bnRpbWUiLCJlIiwidCIsInIiLCJPYmplY3QiLCJwcm90b3R5cGUiLCJuIiwiaGFzT3duUHJvcGVydHkiLCJvIiwiZGVmaW5lUHJvcGVydHkiLCJ2YWx1ZSIsImkiLCJTeW1ib2wiLCJhIiwiaXRlcmF0b3IiLCJjIiwiYXN5bmNJdGVyYXRvciIsInUiLCJ0b1N0cmluZ1RhZyIsImRlZmluZSIsImVudW1lcmFibGUiLCJjb25maWd1cmFibGUiLCJ3cml0YWJsZSIsIndyYXAiLCJHZW5lcmF0b3IiLCJjcmVhdGUiLCJDb250ZXh0IiwibWFrZUludm9rZU1ldGhvZCIsInRyeUNhdGNoIiwidHlwZSIsImFyZyIsImNhbGwiLCJoIiwibCIsImYiLCJzIiwieSIsIkdlbmVyYXRvckZ1bmN0aW9uIiwiR2VuZXJhdG9yRnVuY3Rpb25Qcm90b3R5cGUiLCJwIiwiZCIsImdldFByb3RvdHlwZU9mIiwidiIsInZhbHVlcyIsImciLCJkZWZpbmVJdGVyYXRvck1ldGhvZHMiLCJmb3JFYWNoIiwiX2ludm9rZSIsIkFzeW5jSXRlcmF0b3IiLCJpbnZva2UiLCJfdHlwZW9mIiwicmVzb2x2ZSIsIl9fYXdhaXQiLCJ0aGVuIiwiY2FsbEludm9rZVdpdGhNZXRob2RBbmRBcmciLCJFcnJvciIsImRvbmUiLCJtZXRob2QiLCJkZWxlZ2F0ZSIsIm1heWJlSW52b2tlRGVsZWdhdGUiLCJzZW50IiwiX3NlbnQiLCJkaXNwYXRjaEV4Y2VwdGlvbiIsImFicnVwdCIsIlR5cGVFcnJvciIsInJlc3VsdE5hbWUiLCJuZXh0IiwibmV4dExvYyIsInB1c2hUcnlFbnRyeSIsInRyeUxvYyIsImNhdGNoTG9jIiwiZmluYWxseUxvYyIsImFmdGVyTG9jIiwidHJ5RW50cmllcyIsInB1c2giLCJyZXNldFRyeUVudHJ5IiwiY29tcGxldGlvbiIsInJlc2V0IiwiaXNOYU4iLCJsZW5ndGgiLCJkaXNwbGF5TmFtZSIsImlzR2VuZXJhdG9yRnVuY3Rpb24iLCJjb25zdHJ1Y3RvciIsIm5hbWUiLCJtYXJrIiwic2V0UHJvdG90eXBlT2YiLCJfX3Byb3RvX18iLCJhd3JhcCIsImFzeW5jIiwiUHJvbWlzZSIsImtleXMiLCJyZXZlcnNlIiwicG9wIiwicHJldiIsImNoYXJBdCIsInNsaWNlIiwic3RvcCIsInJ2YWwiLCJoYW5kbGUiLCJjb21wbGV0ZSIsImZpbmlzaCIsIl9jYXRjaCIsImRlbGVnYXRlWWllbGQiLCJhc3luY0dlbmVyYXRvclN0ZXAiLCJnZW4iLCJyZWplY3QiLCJfbmV4dCIsIl90aHJvdyIsImtleSIsImluZm8iLCJlcnJvciIsIl9hc3luY1RvR2VuZXJhdG9yIiwiZm4iLCJzZWxmIiwiYXJncyIsImFyZ3VtZW50cyIsImFwcGx5IiwiZXJyIiwidW5kZWZpbmVkIiwiX3NsaWNlZFRvQXJyYXkiLCJhcnIiLCJfYXJyYXlXaXRoSG9sZXMiLCJfaXRlcmFibGVUb0FycmF5TGltaXQiLCJfdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkiLCJfbm9uSXRlcmFibGVSZXN0IiwibWluTGVuIiwiX2FycmF5TGlrZVRvQXJyYXkiLCJ0b1N0cmluZyIsIkFycmF5IiwiZnJvbSIsInRlc3QiLCJsZW4iLCJhcnIyIiwiaXNBcnJheSIsIlJlYWN0IiwidXNlU3RhdGUiLCJ1c2VFZmZlY3QiLCJ1c2VSZWYiLCJMaW5rIiwidXNlUm91dGVyIiwiZ2V0VXNlclN0YXRzIiwiRGVwb3NpdE1vZGFsIiwiY2FuQWNjZXNzRGV2RmVhdHVyZXMiLCJOYXZiYXIiLCJyb3V0ZXIiLCJfdXNlU3RhdGUiLCJfdXNlU3RhdGUyIiwiaXNPcGVuIiwic2V0SXNPcGVuIiwiX3VzZVN0YXRlMyIsIl91c2VTdGF0ZTQiLCJzaG93RGVwb3NpdE1vZGFsIiwic2V0U2hvd0RlcG9zaXRNb2RhbCIsIl91c2VTdGF0ZTUiLCJfdXNlU3RhdGU2IiwidXNlclN0YXRzIiwic2V0VXNlclN0YXRzIiwiX3VzZVN0YXRlNyIsIl91c2VTdGF0ZTgiLCJzaG93UHJvZmlsZURyb3Bkb3duIiwic2V0U2hvd1Byb2ZpbGVEcm9wZG93biIsIl91c2VTdGF0ZTkiLCJfdXNlU3RhdGUxMCIsImhhc0RldkFjY2VzcyIsInNldEhhc0RldkFjY2VzcyIsImRyb3Bkb3duUmVmIiwidXNlcklkIiwiZmV0Y2hVc2VyU3RhdHMiLCJjaGVja0RldkFjY2VzcyIsImFjY2Vzc1Rva2VuIiwic2Vzc2lvblN0b3JhZ2UiLCJnZXRJdGVtIiwiaGFuZGxlQ2xpY2tPdXRzaWRlIiwiZXZlbnQiLCJjdXJyZW50IiwiY29udGFpbnMiLCJ0YXJnZXQiLCJkb2N1bWVudCIsImFkZEV2ZW50TGlzdGVuZXIiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiX3JlZiIsIl9jYWxsZWUiLCJzdGF0cyIsIl90IiwiX2NvbnRleHQiLCJjb25zb2xlIiwidXNlckJhbGFuY2UiLCJiYWxhbmNlIiwiZGVwb3NpdEJ1dHRvbkxhYmVsIiwiY29uY2F0IiwidG9GaXhlZCIsImNyZWF0ZUVsZW1lbnQiLCJGcmFnbWVudCIsImNsYXNzTmFtZSIsInN0eWxlIiwiYmFja2dyb3VuZCIsImhyZWYiLCJzcmMiLCJhbHQiLCJmb250U2l6ZSIsIldlYmtpdFRleHRTdHJva2UiLCJjb2xvciIsInJlZiIsIm9uQ2xpY2siLCJmaWxsIiwic3Ryb2tlIiwidmlld0JveCIsInN0cm9rZUxpbmVjYXAiLCJzdHJva2VMaW5lam9pbiIsInN0cm9rZVdpZHRoIiwib25Nb3VzZUVudGVyIiwiY2xhc3NMaXN0IiwiYWRkIiwiYm9yZGVyIiwib25Nb3VzZUxlYXZlIiwicmVtb3ZlIiwieG1sbnMiLCJvcGVuIiwib25DbG9zZSJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(pages-dir-node)/./components/Navbar.js\n");

/***/ }),

/***/ "(pages-dir-node)/./components/team-logos/Glyph1.js":
/*!*****************************************!*\
  !*** ./components/team-logos/Glyph1.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Glyph1)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\nfunction Glyph1(_ref) {\n  var _ref$size = _ref.size,\n    size = _ref$size === void 0 ? 64 : _ref$size,\n    _ref$bgColor = _ref.bgColor,\n    bgColor = _ref$bgColor === void 0 ? '#d32f2f' : _ref$bgColor;\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"svg\", {\n    width: size,\n    height: size,\n    viewBox: \"0 0 100 100\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"rect\", {\n    width: \"100\",\n    height: \"100\",\n    fill: bgColor\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"path\", {\n    d: \"M20,80 Q10,60 30,50 Q25,30 50,20 Q75,10 80,40 Q90,60 60,80 Q40,90 20,80 Z M35,60 Q40,55 45,60 Q50,65 55,60 Q60,55 65,60\",\n    fill: \"#ffe600\"\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"circle\", {\n    cx: \"35\",\n    cy: \"40\",\n    r: \"4\",\n    fill: \"#ffe600\"\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"circle\", {\n    cx: \"60\",\n    cy: \"30\",\n    r: \"3\",\n    fill: \"#ffe600\"\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"circle\", {\n    cx: \"70\",\n    cy: \"55\",\n    r: \"2.5\",\n    fill: \"#ffe600\"\n  }));\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1ub2RlKS8uL2NvbXBvbmVudHMvdGVhbS1sb2dvcy9HbHlwaDEuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQTBCO0FBRVgsU0FBU0MsTUFBTUEsQ0FBQUMsSUFBQSxFQUFxQztFQUFBLElBQUFDLFNBQUEsR0FBQUQsSUFBQSxDQUFsQ0UsSUFBSTtJQUFKQSxJQUFJLEdBQUFELFNBQUEsY0FBRyxFQUFFLEdBQUFBLFNBQUE7SUFBQUUsWUFBQSxHQUFBSCxJQUFBLENBQUVJLE9BQU87SUFBUEEsT0FBTyxHQUFBRCxZQUFBLGNBQUcsU0FBUyxHQUFBQSxZQUFBO0VBQzdELG9CQUNFTCwwREFBQTtJQUFLUSxLQUFLLEVBQUVKLElBQUs7SUFBQ0ssTUFBTSxFQUFFTCxJQUFLO0lBQUNNLE9BQU8sRUFBQztFQUFhLGdCQUNuRFYsMERBQUE7SUFBTVEsS0FBSyxFQUFDLEtBQUs7SUFBQ0MsTUFBTSxFQUFDLEtBQUs7SUFBQ0UsSUFBSSxFQUFFTDtFQUFRLENBQUUsQ0FBQyxlQUVoRE4sMERBQUE7SUFBTVksQ0FBQyxFQUFDLHlIQUF5SDtJQUFDRCxJQUFJLEVBQUM7RUFBUyxDQUFFLENBQUMsZUFDbkpYLDBEQUFBO0lBQVFhLEVBQUUsRUFBQyxJQUFJO0lBQUNDLEVBQUUsRUFBQyxJQUFJO0lBQUNDLENBQUMsRUFBQyxHQUFHO0lBQUNKLElBQUksRUFBQztFQUFTLENBQUUsQ0FBQyxlQUMvQ1gsMERBQUE7SUFBUWEsRUFBRSxFQUFDLElBQUk7SUFBQ0MsRUFBRSxFQUFDLElBQUk7SUFBQ0MsQ0FBQyxFQUFDLEdBQUc7SUFBQ0osSUFBSSxFQUFDO0VBQVMsQ0FBRSxDQUFDLGVBQy9DWCwwREFBQTtJQUFRYSxFQUFFLEVBQUMsSUFBSTtJQUFDQyxFQUFFLEVBQUMsSUFBSTtJQUFDQyxDQUFDLEVBQUMsS0FBSztJQUFDSixJQUFJLEVBQUM7RUFBUyxDQUFFLENBQzdDLENBQUM7QUFFViIsInNvdXJjZXMiOlsiL1VzZXJzL3RlZGR5L2Jlc3RiYWxsLXNpdGUvY29tcG9uZW50cy90ZWFtLWxvZ29zL0dseXBoMS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBHbHlwaDEoeyBzaXplID0gNjQsIGJnQ29sb3IgPSAnI2QzMmYyZicgfSkge1xuICByZXR1cm4gKFxuICAgIDxzdmcgd2lkdGg9e3NpemV9IGhlaWdodD17c2l6ZX0gdmlld0JveD1cIjAgMCAxMDAgMTAwXCI+XG4gICAgICA8cmVjdCB3aWR0aD1cIjEwMFwiIGhlaWdodD1cIjEwMFwiIGZpbGw9e2JnQ29sb3J9IC8+XG4gICAgICB7LyogU3R5bGl6ZWQgZG9nIGdseXBoICovfVxuICAgICAgPHBhdGggZD1cIk0yMCw4MCBRMTAsNjAgMzAsNTAgUTI1LDMwIDUwLDIwIFE3NSwxMCA4MCw0MCBROTAsNjAgNjAsODAgUTQwLDkwIDIwLDgwIFogTTM1LDYwIFE0MCw1NSA0NSw2MCBRNTAsNjUgNTUsNjAgUTYwLDU1IDY1LDYwXCIgZmlsbD1cIiNmZmU2MDBcIiAvPlxuICAgICAgPGNpcmNsZSBjeD1cIjM1XCIgY3k9XCI0MFwiIHI9XCI0XCIgZmlsbD1cIiNmZmU2MDBcIiAvPlxuICAgICAgPGNpcmNsZSBjeD1cIjYwXCIgY3k9XCIzMFwiIHI9XCIzXCIgZmlsbD1cIiNmZmU2MDBcIiAvPlxuICAgICAgPGNpcmNsZSBjeD1cIjcwXCIgY3k9XCI1NVwiIHI9XCIyLjVcIiBmaWxsPVwiI2ZmZTYwMFwiIC8+XG4gICAgPC9zdmc+XG4gICk7XG59ICJdLCJuYW1lcyI6WyJSZWFjdCIsIkdseXBoMSIsIl9yZWYiLCJfcmVmJHNpemUiLCJzaXplIiwiX3JlZiRiZ0NvbG9yIiwiYmdDb2xvciIsImNyZWF0ZUVsZW1lbnQiLCJ3aWR0aCIsImhlaWdodCIsInZpZXdCb3giLCJmaWxsIiwiZCIsImN4IiwiY3kiLCJyIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(pages-dir-node)/./components/team-logos/Glyph1.js\n");

/***/ }),

/***/ "(pages-dir-node)/./components/team-logos/Glyph2.js":
/*!*****************************************!*\
  !*** ./components/team-logos/Glyph2.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Glyph2)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\nfunction Glyph2(_ref) {\n  var _ref$size = _ref.size,\n    size = _ref$size === void 0 ? 64 : _ref$size,\n    _ref$bgColor = _ref.bgColor,\n    bgColor = _ref$bgColor === void 0 ? '#2563eb' : _ref$bgColor;\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"svg\", {\n    width: size,\n    height: size,\n    viewBox: \"0 0 100 100\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"rect\", {\n    width: \"100\",\n    height: \"100\",\n    fill: bgColor\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"g\", {\n    fill: \"#ffe600\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"path\", {\n    d: \"M20,30 Q40,20 70,30 Q80,35 70,40 Q40,50 20,40 Q10,35 20,30 Z\"\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"circle\", {\n    cx: \"65\",\n    cy: \"32\",\n    r: \"2\"\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"path\", {\n    d: \"M20,60 Q40,50 70,60 Q80,65 70,70 Q40,80 20,70 Q10,65 20,60 Z\"\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"circle\", {\n    cx: \"65\",\n    cy: \"62\",\n    r: \"2\"\n  })));\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1ub2RlKS8uL2NvbXBvbmVudHMvdGVhbS1sb2dvcy9HbHlwaDIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQTBCO0FBRVgsU0FBU0MsTUFBTUEsQ0FBQUMsSUFBQSxFQUFxQztFQUFBLElBQUFDLFNBQUEsR0FBQUQsSUFBQSxDQUFsQ0UsSUFBSTtJQUFKQSxJQUFJLEdBQUFELFNBQUEsY0FBRyxFQUFFLEdBQUFBLFNBQUE7SUFBQUUsWUFBQSxHQUFBSCxJQUFBLENBQUVJLE9BQU87SUFBUEEsT0FBTyxHQUFBRCxZQUFBLGNBQUcsU0FBUyxHQUFBQSxZQUFBO0VBQzdELG9CQUNFTCwwREFBQTtJQUFLUSxLQUFLLEVBQUVKLElBQUs7SUFBQ0ssTUFBTSxFQUFFTCxJQUFLO0lBQUNNLE9BQU8sRUFBQztFQUFhLGdCQUNuRFYsMERBQUE7SUFBTVEsS0FBSyxFQUFDLEtBQUs7SUFBQ0MsTUFBTSxFQUFDLEtBQUs7SUFBQ0UsSUFBSSxFQUFFTDtFQUFRLENBQUUsQ0FBQyxlQUVoRE4sMERBQUE7SUFBR1csSUFBSSxFQUFDO0VBQVMsZ0JBQ2ZYLDBEQUFBO0lBQU1ZLENBQUMsRUFBQztFQUE4RCxDQUFFLENBQUMsZUFDekVaLDBEQUFBO0lBQVFhLEVBQUUsRUFBQyxJQUFJO0lBQUNDLEVBQUUsRUFBQyxJQUFJO0lBQUNDLENBQUMsRUFBQztFQUFHLENBQUUsQ0FBQyxlQUNoQ2YsMERBQUE7SUFBTVksQ0FBQyxFQUFDO0VBQThELENBQUUsQ0FBQyxlQUN6RVosMERBQUE7SUFBUWEsRUFBRSxFQUFDLElBQUk7SUFBQ0MsRUFBRSxFQUFDLElBQUk7SUFBQ0MsQ0FBQyxFQUFDO0VBQUcsQ0FBRSxDQUM5QixDQUNBLENBQUM7QUFFViIsInNvdXJjZXMiOlsiL1VzZXJzL3RlZGR5L2Jlc3RiYWxsLXNpdGUvY29tcG9uZW50cy90ZWFtLWxvZ29zL0dseXBoMi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBHbHlwaDIoeyBzaXplID0gNjQsIGJnQ29sb3IgPSAnIzI1NjNlYicgfSkge1xuICByZXR1cm4gKFxuICAgIDxzdmcgd2lkdGg9e3NpemV9IGhlaWdodD17c2l6ZX0gdmlld0JveD1cIjAgMCAxMDAgMTAwXCI+XG4gICAgICA8cmVjdCB3aWR0aD1cIjEwMFwiIGhlaWdodD1cIjEwMFwiIGZpbGw9e2JnQ29sb3J9IC8+XG4gICAgICB7LyogU3R5bGl6ZWQgZmlzaCBnbHlwaHMgKi99XG4gICAgICA8ZyBmaWxsPVwiI2ZmZTYwMFwiPlxuICAgICAgICA8cGF0aCBkPVwiTTIwLDMwIFE0MCwyMCA3MCwzMCBRODAsMzUgNzAsNDAgUTQwLDUwIDIwLDQwIFExMCwzNSAyMCwzMCBaXCIgLz5cbiAgICAgICAgPGNpcmNsZSBjeD1cIjY1XCIgY3k9XCIzMlwiIHI9XCIyXCIgLz5cbiAgICAgICAgPHBhdGggZD1cIk0yMCw2MCBRNDAsNTAgNzAsNjAgUTgwLDY1IDcwLDcwIFE0MCw4MCAyMCw3MCBRMTAsNjUgMjAsNjAgWlwiIC8+XG4gICAgICAgIDxjaXJjbGUgY3g9XCI2NVwiIGN5PVwiNjJcIiByPVwiMlwiIC8+XG4gICAgICA8L2c+XG4gICAgPC9zdmc+XG4gICk7XG59ICJdLCJuYW1lcyI6WyJSZWFjdCIsIkdseXBoMiIsIl9yZWYiLCJfcmVmJHNpemUiLCJzaXplIiwiX3JlZiRiZ0NvbG9yIiwiYmdDb2xvciIsImNyZWF0ZUVsZW1lbnQiLCJ3aWR0aCIsImhlaWdodCIsInZpZXdCb3giLCJmaWxsIiwiZCIsImN4IiwiY3kiLCJyIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(pages-dir-node)/./components/team-logos/Glyph2.js\n");

/***/ }),

/***/ "(pages-dir-node)/./components/team-logos/Glyph3.js":
/*!*****************************************!*\
  !*** ./components/team-logos/Glyph3.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Glyph3)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\nfunction Glyph3(_ref) {\n  var _ref$size = _ref.size,\n    size = _ref$size === void 0 ? 64 : _ref$size,\n    _ref$bgColor = _ref.bgColor,\n    bgColor = _ref$bgColor === void 0 ? '#388e3c' : _ref$bgColor;\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"svg\", {\n    width: size,\n    height: size,\n    viewBox: \"0 0 100 100\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"rect\", {\n    width: \"100\",\n    height: \"100\",\n    fill: bgColor\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"path\", {\n    d: \"M30,70 Q20,50 40,40 Q35,25 55,25 Q75,30 70,50 Q90,60 60,80 Q50,90 30,70 Z M60,40 Q65,35 70,40 Q75,45 70,50 Q65,55 60,50 Q55,45 60,40 Z\",\n    fill: \"#ffe600\"\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"circle\", {\n    cx: \"50\",\n    cy: \"35\",\n    r: \"4\",\n    fill: \"#ffe600\"\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"circle\", {\n    cx: \"65\",\n    cy: \"55\",\n    r: \"2.5\",\n    fill: \"#ffe600\"\n  }));\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1ub2RlKS8uL2NvbXBvbmVudHMvdGVhbS1sb2dvcy9HbHlwaDMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQTBCO0FBRVgsU0FBU0MsTUFBTUEsQ0FBQUMsSUFBQSxFQUFxQztFQUFBLElBQUFDLFNBQUEsR0FBQUQsSUFBQSxDQUFsQ0UsSUFBSTtJQUFKQSxJQUFJLEdBQUFELFNBQUEsY0FBRyxFQUFFLEdBQUFBLFNBQUE7SUFBQUUsWUFBQSxHQUFBSCxJQUFBLENBQUVJLE9BQU87SUFBUEEsT0FBTyxHQUFBRCxZQUFBLGNBQUcsU0FBUyxHQUFBQSxZQUFBO0VBQzdELG9CQUNFTCwwREFBQTtJQUFLUSxLQUFLLEVBQUVKLElBQUs7SUFBQ0ssTUFBTSxFQUFFTCxJQUFLO0lBQUNNLE9BQU8sRUFBQztFQUFhLGdCQUNuRFYsMERBQUE7SUFBTVEsS0FBSyxFQUFDLEtBQUs7SUFBQ0MsTUFBTSxFQUFDLEtBQUs7SUFBQ0UsSUFBSSxFQUFFTDtFQUFRLENBQUUsQ0FBQyxlQUVoRE4sMERBQUE7SUFBTVksQ0FBQyxFQUFDLHdJQUF3STtJQUFDRCxJQUFJLEVBQUM7RUFBUyxDQUFFLENBQUMsZUFDbEtYLDBEQUFBO0lBQVFhLEVBQUUsRUFBQyxJQUFJO0lBQUNDLEVBQUUsRUFBQyxJQUFJO0lBQUNDLENBQUMsRUFBQyxHQUFHO0lBQUNKLElBQUksRUFBQztFQUFTLENBQUUsQ0FBQyxlQUMvQ1gsMERBQUE7SUFBUWEsRUFBRSxFQUFDLElBQUk7SUFBQ0MsRUFBRSxFQUFDLElBQUk7SUFBQ0MsQ0FBQyxFQUFDLEtBQUs7SUFBQ0osSUFBSSxFQUFDO0VBQVMsQ0FBRSxDQUM3QyxDQUFDO0FBRVYiLCJzb3VyY2VzIjpbIi9Vc2Vycy90ZWRkeS9iZXN0YmFsbC1zaXRlL2NvbXBvbmVudHMvdGVhbS1sb2dvcy9HbHlwaDMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gR2x5cGgzKHsgc2l6ZSA9IDY0LCBiZ0NvbG9yID0gJyMzODhlM2MnIH0pIHtcbiAgcmV0dXJuIChcbiAgICA8c3ZnIHdpZHRoPXtzaXplfSBoZWlnaHQ9e3NpemV9IHZpZXdCb3g9XCIwIDAgMTAwIDEwMFwiPlxuICAgICAgPHJlY3Qgd2lkdGg9XCIxMDBcIiBoZWlnaHQ9XCIxMDBcIiBmaWxsPXtiZ0NvbG9yfSAvPlxuICAgICAgey8qIFN0eWxpemVkIG1vbmtleSBnbHlwaCAqL31cbiAgICAgIDxwYXRoIGQ9XCJNMzAsNzAgUTIwLDUwIDQwLDQwIFEzNSwyNSA1NSwyNSBRNzUsMzAgNzAsNTAgUTkwLDYwIDYwLDgwIFE1MCw5MCAzMCw3MCBaIE02MCw0MCBRNjUsMzUgNzAsNDAgUTc1LDQ1IDcwLDUwIFE2NSw1NSA2MCw1MCBRNTUsNDUgNjAsNDAgWlwiIGZpbGw9XCIjZmZlNjAwXCIgLz5cbiAgICAgIDxjaXJjbGUgY3g9XCI1MFwiIGN5PVwiMzVcIiByPVwiNFwiIGZpbGw9XCIjZmZlNjAwXCIgLz5cbiAgICAgIDxjaXJjbGUgY3g9XCI2NVwiIGN5PVwiNTVcIiByPVwiMi41XCIgZmlsbD1cIiNmZmU2MDBcIiAvPlxuICAgIDwvc3ZnPlxuICApO1xufSAiXSwibmFtZXMiOlsiUmVhY3QiLCJHbHlwaDMiLCJfcmVmIiwiX3JlZiRzaXplIiwic2l6ZSIsIl9yZWYkYmdDb2xvciIsImJnQ29sb3IiLCJjcmVhdGVFbGVtZW50Iiwid2lkdGgiLCJoZWlnaHQiLCJ2aWV3Qm94IiwiZmlsbCIsImQiLCJjeCIsImN5IiwiciJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(pages-dir-node)/./components/team-logos/Glyph3.js\n");

/***/ }),

/***/ "(pages-dir-node)/./components/team-logos/Glyph4.js":
/*!*****************************************!*\
  !*** ./components/team-logos/Glyph4.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Glyph4)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\nfunction Glyph4(_ref) {\n  var _ref$size = _ref.size,\n    size = _ref$size === void 0 ? 64 : _ref$size,\n    _ref$bgColor = _ref.bgColor,\n    bgColor = _ref$bgColor === void 0 ? '#f57c00' : _ref$bgColor;\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"svg\", {\n    width: size,\n    height: size,\n    viewBox: \"0 0 100 100\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"rect\", {\n    width: \"100\",\n    height: \"100\",\n    fill: bgColor\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"circle\", {\n    cx: \"50\",\n    cy: \"50\",\n    r: \"38\",\n    fill: \"none\",\n    stroke: \"#ffe600\",\n    strokeWidth: \"6\"\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"path\", {\n    d: \"M35,70 Q25,50 45,40 Q40,25 60,30 Q80,40 70,60 Q90,70 60,80 Q50,90 35,70 Z\",\n    fill: \"#ffe600\"\n  }));\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1ub2RlKS8uL2NvbXBvbmVudHMvdGVhbS1sb2dvcy9HbHlwaDQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQTBCO0FBRVgsU0FBU0MsTUFBTUEsQ0FBQUMsSUFBQSxFQUFxQztFQUFBLElBQUFDLFNBQUEsR0FBQUQsSUFBQSxDQUFsQ0UsSUFBSTtJQUFKQSxJQUFJLEdBQUFELFNBQUEsY0FBRyxFQUFFLEdBQUFBLFNBQUE7SUFBQUUsWUFBQSxHQUFBSCxJQUFBLENBQUVJLE9BQU87SUFBUEEsT0FBTyxHQUFBRCxZQUFBLGNBQUcsU0FBUyxHQUFBQSxZQUFBO0VBQzdELG9CQUNFTCwwREFBQTtJQUFLUSxLQUFLLEVBQUVKLElBQUs7SUFBQ0ssTUFBTSxFQUFFTCxJQUFLO0lBQUNNLE9BQU8sRUFBQztFQUFhLGdCQUNuRFYsMERBQUE7SUFBTVEsS0FBSyxFQUFDLEtBQUs7SUFBQ0MsTUFBTSxFQUFDLEtBQUs7SUFBQ0UsSUFBSSxFQUFFTDtFQUFRLENBQUUsQ0FBQyxlQUVoRE4sMERBQUE7SUFBUVksRUFBRSxFQUFDLElBQUk7SUFBQ0MsRUFBRSxFQUFDLElBQUk7SUFBQ0MsQ0FBQyxFQUFDLElBQUk7SUFBQ0gsSUFBSSxFQUFDLE1BQU07SUFBQ0ksTUFBTSxFQUFDLFNBQVM7SUFBQ0MsV0FBVyxFQUFDO0VBQUcsQ0FBRSxDQUFDLGVBQzlFaEIsMERBQUE7SUFBTWlCLENBQUMsRUFBQywyRUFBMkU7SUFBQ04sSUFBSSxFQUFDO0VBQVMsQ0FBRSxDQUNqRyxDQUFDO0FBRVYiLCJzb3VyY2VzIjpbIi9Vc2Vycy90ZWRkeS9iZXN0YmFsbC1zaXRlL2NvbXBvbmVudHMvdGVhbS1sb2dvcy9HbHlwaDQuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gR2x5cGg0KHsgc2l6ZSA9IDY0LCBiZ0NvbG9yID0gJyNmNTdjMDAnIH0pIHtcbiAgcmV0dXJuIChcbiAgICA8c3ZnIHdpZHRoPXtzaXplfSBoZWlnaHQ9e3NpemV9IHZpZXdCb3g9XCIwIDAgMTAwIDEwMFwiPlxuICAgICAgPHJlY3Qgd2lkdGg9XCIxMDBcIiBoZWlnaHQ9XCIxMDBcIiBmaWxsPXtiZ0NvbG9yfSAvPlxuICAgICAgey8qIFN0eWxpemVkIGxpemFyZCBnbHlwaCBpbiBhIGNpcmNsZSAqL31cbiAgICAgIDxjaXJjbGUgY3g9XCI1MFwiIGN5PVwiNTBcIiByPVwiMzhcIiBmaWxsPVwibm9uZVwiIHN0cm9rZT1cIiNmZmU2MDBcIiBzdHJva2VXaWR0aD1cIjZcIiAvPlxuICAgICAgPHBhdGggZD1cIk0zNSw3MCBRMjUsNTAgNDUsNDAgUTQwLDI1IDYwLDMwIFE4MCw0MCA3MCw2MCBROTAsNzAgNjAsODAgUTUwLDkwIDM1LDcwIFpcIiBmaWxsPVwiI2ZmZTYwMFwiIC8+XG4gICAgPC9zdmc+XG4gICk7XG59ICJdLCJuYW1lcyI6WyJSZWFjdCIsIkdseXBoNCIsIl9yZWYiLCJfcmVmJHNpemUiLCJzaXplIiwiX3JlZiRiZ0NvbG9yIiwiYmdDb2xvciIsImNyZWF0ZUVsZW1lbnQiLCJ3aWR0aCIsImhlaWdodCIsInZpZXdCb3giLCJmaWxsIiwiY3giLCJjeSIsInIiLCJzdHJva2UiLCJzdHJva2VXaWR0aCIsImQiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(pages-dir-node)/./components/team-logos/Glyph4.js\n");

/***/ }),

/***/ "(pages-dir-node)/./components/team-logos/Glyph5.js":
/*!*****************************************!*\
  !*** ./components/team-logos/Glyph5.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Glyph5)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\nfunction Glyph5(_ref) {\n  var _ref$size = _ref.size,\n    size = _ref$size === void 0 ? 64 : _ref$size,\n    _ref$bgColor = _ref.bgColor,\n    bgColor = _ref$bgColor === void 0 ? '#6d28d9' : _ref$bgColor;\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"svg\", {\n    width: size,\n    height: size,\n    viewBox: \"0 0 100 100\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"rect\", {\n    width: \"100\",\n    height: \"100\",\n    fill: bgColor\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"path\", {\n    d: \"M30,80 Q20,60 40,50 Q35,35 55,35 Q75,40 70,60 Q90,70 60,80 Q50,90 30,80 Z M60,50 Q65,45 70,50 Q75,55 70,60 Q65,65 60,60 Q55,55 60,50 Z\",\n    fill: \"#ffe600\"\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"circle\", {\n    cx: \"50\",\n    cy: \"45\",\n    r: \"6\",\n    fill: \"#ffe600\"\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"rect\", {\n    x: \"60\",\n    y: \"60\",\n    width: \"18\",\n    height: \"6\",\n    rx: \"3\",\n    fill: \"#ffe600\"\n  }));\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1ub2RlKS8uL2NvbXBvbmVudHMvdGVhbS1sb2dvcy9HbHlwaDUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQTBCO0FBRVgsU0FBU0MsTUFBTUEsQ0FBQUMsSUFBQSxFQUFxQztFQUFBLElBQUFDLFNBQUEsR0FBQUQsSUFBQSxDQUFsQ0UsSUFBSTtJQUFKQSxJQUFJLEdBQUFELFNBQUEsY0FBRyxFQUFFLEdBQUFBLFNBQUE7SUFBQUUsWUFBQSxHQUFBSCxJQUFBLENBQUVJLE9BQU87SUFBUEEsT0FBTyxHQUFBRCxZQUFBLGNBQUcsU0FBUyxHQUFBQSxZQUFBO0VBQzdELG9CQUNFTCwwREFBQTtJQUFLUSxLQUFLLEVBQUVKLElBQUs7SUFBQ0ssTUFBTSxFQUFFTCxJQUFLO0lBQUNNLE9BQU8sRUFBQztFQUFhLGdCQUNuRFYsMERBQUE7SUFBTVEsS0FBSyxFQUFDLEtBQUs7SUFBQ0MsTUFBTSxFQUFDLEtBQUs7SUFBQ0UsSUFBSSxFQUFFTDtFQUFRLENBQUUsQ0FBQyxlQUVoRE4sMERBQUE7SUFBTVksQ0FBQyxFQUFDLHdJQUF3STtJQUFDRCxJQUFJLEVBQUM7RUFBUyxDQUFFLENBQUMsZUFDbEtYLDBEQUFBO0lBQVFhLEVBQUUsRUFBQyxJQUFJO0lBQUNDLEVBQUUsRUFBQyxJQUFJO0lBQUNDLENBQUMsRUFBQyxHQUFHO0lBQUNKLElBQUksRUFBQztFQUFTLENBQUUsQ0FBQyxlQUMvQ1gsMERBQUE7SUFBTWdCLENBQUMsRUFBQyxJQUFJO0lBQUNDLENBQUMsRUFBQyxJQUFJO0lBQUNULEtBQUssRUFBQyxJQUFJO0lBQUNDLE1BQU0sRUFBQyxHQUFHO0lBQUNTLEVBQUUsRUFBQyxHQUFHO0lBQUNQLElBQUksRUFBQztFQUFTLENBQUUsQ0FDOUQsQ0FBQztBQUVWIiwic291cmNlcyI6WyIvVXNlcnMvdGVkZHkvYmVzdGJhbGwtc2l0ZS9jb21wb25lbnRzL3RlYW0tbG9nb3MvR2x5cGg1LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIEdseXBoNSh7IHNpemUgPSA2NCwgYmdDb2xvciA9ICcjNmQyOGQ5JyB9KSB7XG4gIHJldHVybiAoXG4gICAgPHN2ZyB3aWR0aD17c2l6ZX0gaGVpZ2h0PXtzaXplfSB2aWV3Qm94PVwiMCAwIDEwMCAxMDBcIj5cbiAgICAgIDxyZWN0IHdpZHRoPVwiMTAwXCIgaGVpZ2h0PVwiMTAwXCIgZmlsbD17YmdDb2xvcn0gLz5cbiAgICAgIHsvKiBTdHlsaXplZCBiaXJkIGdseXBoICovfVxuICAgICAgPHBhdGggZD1cIk0zMCw4MCBRMjAsNjAgNDAsNTAgUTM1LDM1IDU1LDM1IFE3NSw0MCA3MCw2MCBROTAsNzAgNjAsODAgUTUwLDkwIDMwLDgwIFogTTYwLDUwIFE2NSw0NSA3MCw1MCBRNzUsNTUgNzAsNjAgUTY1LDY1IDYwLDYwIFE1NSw1NSA2MCw1MCBaXCIgZmlsbD1cIiNmZmU2MDBcIiAvPlxuICAgICAgPGNpcmNsZSBjeD1cIjUwXCIgY3k9XCI0NVwiIHI9XCI2XCIgZmlsbD1cIiNmZmU2MDBcIiAvPlxuICAgICAgPHJlY3QgeD1cIjYwXCIgeT1cIjYwXCIgd2lkdGg9XCIxOFwiIGhlaWdodD1cIjZcIiByeD1cIjNcIiBmaWxsPVwiI2ZmZTYwMFwiIC8+XG4gICAgPC9zdmc+XG4gICk7XG59ICJdLCJuYW1lcyI6WyJSZWFjdCIsIkdseXBoNSIsIl9yZWYiLCJfcmVmJHNpemUiLCJzaXplIiwiX3JlZiRiZ0NvbG9yIiwiYmdDb2xvciIsImNyZWF0ZUVsZW1lbnQiLCJ3aWR0aCIsImhlaWdodCIsInZpZXdCb3giLCJmaWxsIiwiZCIsImN4IiwiY3kiLCJyIiwieCIsInkiLCJyeCJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(pages-dir-node)/./components/team-logos/Glyph5.js\n");

/***/ }),

/***/ "(pages-dir-node)/./components/team-logos/Glyph6.js":
/*!*****************************************!*\
  !*** ./components/team-logos/Glyph6.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Glyph6)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\nfunction Glyph6(_ref) {\n  var _ref$size = _ref.size,\n    size = _ref$size === void 0 ? 64 : _ref$size,\n    _ref$bgColor = _ref.bgColor,\n    bgColor = _ref$bgColor === void 0 ? '#bdbdbd' : _ref$bgColor;\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"svg\", {\n    width: size,\n    height: size,\n    viewBox: \"0 0 100 100\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"rect\", {\n    width: \"100\",\n    height: \"100\",\n    fill: bgColor\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"path\", {\n    d: \"M20,60 Q30,40 50,50 Q70,60 60,80 Q50,90 30,80 Q10,70 20,60 Z M60,40 Q80,30 80,60 Q80,90 60,80\",\n    fill: \"#ffe600\"\n  }));\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1ub2RlKS8uL2NvbXBvbmVudHMvdGVhbS1sb2dvcy9HbHlwaDYuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQTBCO0FBRVgsU0FBU0MsTUFBTUEsQ0FBQUMsSUFBQSxFQUFxQztFQUFBLElBQUFDLFNBQUEsR0FBQUQsSUFBQSxDQUFsQ0UsSUFBSTtJQUFKQSxJQUFJLEdBQUFELFNBQUEsY0FBRyxFQUFFLEdBQUFBLFNBQUE7SUFBQUUsWUFBQSxHQUFBSCxJQUFBLENBQUVJLE9BQU87SUFBUEEsT0FBTyxHQUFBRCxZQUFBLGNBQUcsU0FBUyxHQUFBQSxZQUFBO0VBQzdELG9CQUNFTCwwREFBQTtJQUFLUSxLQUFLLEVBQUVKLElBQUs7SUFBQ0ssTUFBTSxFQUFFTCxJQUFLO0lBQUNNLE9BQU8sRUFBQztFQUFhLGdCQUNuRFYsMERBQUE7SUFBTVEsS0FBSyxFQUFDLEtBQUs7SUFBQ0MsTUFBTSxFQUFDLEtBQUs7SUFBQ0UsSUFBSSxFQUFFTDtFQUFRLENBQUUsQ0FBQyxlQUVoRE4sMERBQUE7SUFBTVksQ0FBQyxFQUFDLCtGQUErRjtJQUFDRCxJQUFJLEVBQUM7RUFBUyxDQUFFLENBQ3JILENBQUM7QUFFViIsInNvdXJjZXMiOlsiL1VzZXJzL3RlZGR5L2Jlc3RiYWxsLXNpdGUvY29tcG9uZW50cy90ZWFtLWxvZ29zL0dseXBoNi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBHbHlwaDYoeyBzaXplID0gNjQsIGJnQ29sb3IgPSAnI2JkYmRiZCcgfSkge1xuICByZXR1cm4gKFxuICAgIDxzdmcgd2lkdGg9e3NpemV9IGhlaWdodD17c2l6ZX0gdmlld0JveD1cIjAgMCAxMDAgMTAwXCI+XG4gICAgICA8cmVjdCB3aWR0aD1cIjEwMFwiIGhlaWdodD1cIjEwMFwiIGZpbGw9e2JnQ29sb3J9IC8+XG4gICAgICB7LyogU3R5bGl6ZWQgc25ha2UgZ2x5cGggKi99XG4gICAgICA8cGF0aCBkPVwiTTIwLDYwIFEzMCw0MCA1MCw1MCBRNzAsNjAgNjAsODAgUTUwLDkwIDMwLDgwIFExMCw3MCAyMCw2MCBaIE02MCw0MCBRODAsMzAgODAsNjAgUTgwLDkwIDYwLDgwXCIgZmlsbD1cIiNmZmU2MDBcIiAvPlxuICAgIDwvc3ZnPlxuICApO1xufSAiXSwibmFtZXMiOlsiUmVhY3QiLCJHbHlwaDYiLCJfcmVmIiwiX3JlZiRzaXplIiwic2l6ZSIsIl9yZWYkYmdDb2xvciIsImJnQ29sb3IiLCJjcmVhdGVFbGVtZW50Iiwid2lkdGgiLCJoZWlnaHQiLCJ2aWV3Qm94IiwiZmlsbCIsImQiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(pages-dir-node)/./components/team-logos/Glyph6.js\n");

/***/ }),

/***/ "(pages-dir-node)/./components/team-logos/index.js":
/*!****************************************!*\
  !*** ./components/team-logos/index.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   logoOptions: () => (/* binding */ logoOptions)\n/* harmony export */ });\n/* harmony import */ var _Glyph1__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Glyph1 */ \"(pages-dir-node)/./components/team-logos/Glyph1.js\");\n/* harmony import */ var _Glyph2__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Glyph2 */ \"(pages-dir-node)/./components/team-logos/Glyph2.js\");\n/* harmony import */ var _Glyph3__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Glyph3 */ \"(pages-dir-node)/./components/team-logos/Glyph3.js\");\n/* harmony import */ var _Glyph4__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Glyph4 */ \"(pages-dir-node)/./components/team-logos/Glyph4.js\");\n/* harmony import */ var _Glyph5__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Glyph5 */ \"(pages-dir-node)/./components/team-logos/Glyph5.js\");\n/* harmony import */ var _Glyph6__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Glyph6 */ \"(pages-dir-node)/./components/team-logos/Glyph6.js\");\n\n\n\n\n\n\nvar logoOptions = [{\n  component: _Glyph1__WEBPACK_IMPORTED_MODULE_0__[\"default\"],\n  bgColor: '#d32f2f',\n  label: 'Dog'\n}, {\n  component: _Glyph2__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n  bgColor: '#2563eb',\n  label: 'Fish'\n}, {\n  component: _Glyph3__WEBPACK_IMPORTED_MODULE_2__[\"default\"],\n  bgColor: '#388e3c',\n  label: 'Monkey'\n}, {\n  component: _Glyph4__WEBPACK_IMPORTED_MODULE_3__[\"default\"],\n  bgColor: '#f57c00',\n  label: 'Lizard'\n}, {\n  component: _Glyph5__WEBPACK_IMPORTED_MODULE_4__[\"default\"],\n  bgColor: '#6d28d9',\n  label: 'Bird'\n}, {\n  component: _Glyph6__WEBPACK_IMPORTED_MODULE_5__[\"default\"],\n  bgColor: '#bdbdbd',\n  label: 'Snake'\n}];//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1ub2RlKS8uL2NvbXBvbmVudHMvdGVhbS1sb2dvcy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQThCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUV2QixJQUFNTSxXQUFXLEdBQUcsQ0FDekI7RUFBRUMsU0FBUyxFQUFFUCwrQ0FBTTtFQUFFUSxPQUFPLEVBQUUsU0FBUztFQUFFQyxLQUFLLEVBQUU7QUFBTSxDQUFDLEVBQ3ZEO0VBQUVGLFNBQVMsRUFBRU4sK0NBQU07RUFBRU8sT0FBTyxFQUFFLFNBQVM7RUFBRUMsS0FBSyxFQUFFO0FBQU8sQ0FBQyxFQUN4RDtFQUFFRixTQUFTLEVBQUVMLCtDQUFNO0VBQUVNLE9BQU8sRUFBRSxTQUFTO0VBQUVDLEtBQUssRUFBRTtBQUFTLENBQUMsRUFDMUQ7RUFBRUYsU0FBUyxFQUFFSiwrQ0FBTTtFQUFFSyxPQUFPLEVBQUUsU0FBUztFQUFFQyxLQUFLLEVBQUU7QUFBUyxDQUFDLEVBQzFEO0VBQUVGLFNBQVMsRUFBRUgsK0NBQU07RUFBRUksT0FBTyxFQUFFLFNBQVM7RUFBRUMsS0FBSyxFQUFFO0FBQU8sQ0FBQyxFQUN4RDtFQUFFRixTQUFTLEVBQUVGLCtDQUFNO0VBQUVHLE9BQU8sRUFBRSxTQUFTO0VBQUVDLEtBQUssRUFBRTtBQUFRLENBQUMsQ0FDMUQiLCJzb3VyY2VzIjpbIi9Vc2Vycy90ZWRkeS9iZXN0YmFsbC1zaXRlL2NvbXBvbmVudHMvdGVhbS1sb2dvcy9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgR2x5cGgxIGZyb20gJy4vR2x5cGgxJztcbmltcG9ydCBHbHlwaDIgZnJvbSAnLi9HbHlwaDInO1xuaW1wb3J0IEdseXBoMyBmcm9tICcuL0dseXBoMyc7XG5pbXBvcnQgR2x5cGg0IGZyb20gJy4vR2x5cGg0JztcbmltcG9ydCBHbHlwaDUgZnJvbSAnLi9HbHlwaDUnO1xuaW1wb3J0IEdseXBoNiBmcm9tICcuL0dseXBoNic7XG5cbmV4cG9ydCBjb25zdCBsb2dvT3B0aW9ucyA9IFtcbiAgeyBjb21wb25lbnQ6IEdseXBoMSwgYmdDb2xvcjogJyNkMzJmMmYnLCBsYWJlbDogJ0RvZycgfSxcbiAgeyBjb21wb25lbnQ6IEdseXBoMiwgYmdDb2xvcjogJyMyNTYzZWInLCBsYWJlbDogJ0Zpc2gnIH0sXG4gIHsgY29tcG9uZW50OiBHbHlwaDMsIGJnQ29sb3I6ICcjMzg4ZTNjJywgbGFiZWw6ICdNb25rZXknIH0sXG4gIHsgY29tcG9uZW50OiBHbHlwaDQsIGJnQ29sb3I6ICcjZjU3YzAwJywgbGFiZWw6ICdMaXphcmQnIH0sXG4gIHsgY29tcG9uZW50OiBHbHlwaDUsIGJnQ29sb3I6ICcjNmQyOGQ5JywgbGFiZWw6ICdCaXJkJyB9LFxuICB7IGNvbXBvbmVudDogR2x5cGg2LCBiZ0NvbG9yOiAnI2JkYmRiZCcsIGxhYmVsOiAnU25ha2UnIH0sXG5dOyAiXSwibmFtZXMiOlsiR2x5cGgxIiwiR2x5cGgyIiwiR2x5cGgzIiwiR2x5cGg0IiwiR2x5cGg1IiwiR2x5cGg2IiwibG9nb09wdGlvbnMiLCJjb21wb25lbnQiLCJiZ0NvbG9yIiwibGFiZWwiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(pages-dir-node)/./components/team-logos/index.js\n");

/***/ }),

/***/ "(pages-dir-node)/./lib/devAuth.js":
/*!************************!*\
  !*** ./lib/devAuth.js ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   canAccessDevFeatures: () => (/* binding */ canAccessDevFeatures),\n/* harmony export */   getDevAccessToken: () => (/* binding */ getDevAccessToken),\n/* harmony export */   hasDevAccess: () => (/* binding */ hasDevAccess),\n/* harmony export */   isDeveloper: () => (/* binding */ isDeveloper),\n/* harmony export */   isDevelopmentEnvironment: () => (/* binding */ isDevelopmentEnvironment),\n/* harmony export */   validateDevAccess: () => (/* binding */ validateDevAccess)\n/* harmony export */ });\n// Development authentication and access control\n// This file handles developer-only access to development features\n\n// List of authorized developer user IDs\nvar AUTHORIZED_DEVELOPERS = ['Not Todd Middleton',\n// Current user ID from the codebase\n'developer1', 'developer2', 'admin'];\n\n// Development access token (in production, this would be more secure)\nvar DEV_ACCESS_TOKEN = 'dev_access_2024';\n\n// Check if user is authorized for development access\nvar isDeveloper = function isDeveloper(userId) {\n  return AUTHORIZED_DEVELOPERS.includes(userId);\n};\n\n// Check if user has development access token\nvar hasDevAccess = function hasDevAccess(accessToken) {\n  return accessToken === DEV_ACCESS_TOKEN;\n};\n\n// Get development access token (for testing purposes)\nvar getDevAccessToken = function getDevAccessToken() {\n  return DEV_ACCESS_TOKEN;\n};\n\n// Validate development access\nvar validateDevAccess = function validateDevAccess(userId) {\n  var accessToken = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  // Check if user is in authorized developers list\n  if (isDeveloper(userId)) {\n    return true;\n  }\n\n  // Check if user has valid access token\n  if (accessToken && hasDevAccess(accessToken)) {\n    return true;\n  }\n  return false;\n};\n\n// Development environment check\nvar isDevelopmentEnvironment = function isDevelopmentEnvironment() {\n  return true;\n};\n\n// Combined access check for development features\nvar canAccessDevFeatures = function canAccessDevFeatures(userId) {\n  var accessToken = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  // In development environment, allow access with proper credentials\n  if (isDevelopmentEnvironment()) {\n    return validateDevAccess(userId, accessToken);\n  }\n\n  // In production, only allow authorized developers\n  return isDeveloper(userId);\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1ub2RlKS8uL2xpYi9kZXZBdXRoLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBO0FBQ0E7O0FBRUE7QUFDQSxJQUFNQSxxQkFBcUIsR0FBRyxDQUM1QixvQkFBb0I7QUFBRTtBQUN0QixZQUFZLEVBQ1osWUFBWSxFQUNaLE9BQU8sQ0FDUjs7QUFFRDtBQUNBLElBQU1DLGdCQUFnQixHQUFHLGlCQUFpQjs7QUFFMUM7QUFDTyxJQUFNQyxXQUFXLEdBQUcsU0FBZEEsV0FBV0EsQ0FBSUMsTUFBTSxFQUFLO0VBQ3JDLE9BQU9ILHFCQUFxQixDQUFDSSxRQUFRLENBQUNELE1BQU0sQ0FBQztBQUMvQyxDQUFDOztBQUVEO0FBQ08sSUFBTUUsWUFBWSxHQUFHLFNBQWZBLFlBQVlBLENBQUlDLFdBQVcsRUFBSztFQUMzQyxPQUFPQSxXQUFXLEtBQUtMLGdCQUFnQjtBQUN6QyxDQUFDOztBQUVEO0FBQ08sSUFBTU0saUJBQWlCLEdBQUcsU0FBcEJBLGlCQUFpQkEsQ0FBQSxFQUFTO0VBQ3JDLE9BQU9OLGdCQUFnQjtBQUN6QixDQUFDOztBQUVEO0FBQ08sSUFBTU8saUJBQWlCLEdBQUcsU0FBcEJBLGlCQUFpQkEsQ0FBSUwsTUFBTSxFQUF5QjtFQUFBLElBQXZCRyxXQUFXLEdBQUFHLFNBQUEsQ0FBQUMsTUFBQSxRQUFBRCxTQUFBLFFBQUFFLFNBQUEsR0FBQUYsU0FBQSxNQUFHLElBQUk7RUFDMUQ7RUFDQSxJQUFJUCxXQUFXLENBQUNDLE1BQU0sQ0FBQyxFQUFFO0lBQ3ZCLE9BQU8sSUFBSTtFQUNiOztFQUVBO0VBQ0EsSUFBSUcsV0FBVyxJQUFJRCxZQUFZLENBQUNDLFdBQVcsQ0FBQyxFQUFFO0lBQzVDLE9BQU8sSUFBSTtFQUNiO0VBRUEsT0FBTyxLQUFLO0FBQ2QsQ0FBQzs7QUFFRDtBQUNPLElBQU1NLHdCQUF3QixHQUFHLFNBQTNCQSx3QkFBd0JBLENBQUEsRUFBUztFQUM1QztBQUNGLENBQUM7O0FBRUQ7QUFDTyxJQUFNQyxvQkFBb0IsR0FBRyxTQUF2QkEsb0JBQW9CQSxDQUFJVixNQUFNLEVBQXlCO0VBQUEsSUFBdkJHLFdBQVcsR0FBQUcsU0FBQSxDQUFBQyxNQUFBLFFBQUFELFNBQUEsUUFBQUUsU0FBQSxHQUFBRixTQUFBLE1BQUcsSUFBSTtFQUM3RDtFQUNBLElBQUlHLHdCQUF3QixDQUFDLENBQUMsRUFBRTtJQUM5QixPQUFPSixpQkFBaUIsQ0FBQ0wsTUFBTSxFQUFFRyxXQUFXLENBQUM7RUFDL0M7O0VBRUE7RUFDQSxPQUFPSixXQUFXLENBQUNDLE1BQU0sQ0FBQztBQUM1QixDQUFDIiwic291cmNlcyI6WyIvVXNlcnMvdGVkZHkvYmVzdGJhbGwtc2l0ZS9saWIvZGV2QXV0aC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBEZXZlbG9wbWVudCBhdXRoZW50aWNhdGlvbiBhbmQgYWNjZXNzIGNvbnRyb2xcbi8vIFRoaXMgZmlsZSBoYW5kbGVzIGRldmVsb3Blci1vbmx5IGFjY2VzcyB0byBkZXZlbG9wbWVudCBmZWF0dXJlc1xuXG4vLyBMaXN0IG9mIGF1dGhvcml6ZWQgZGV2ZWxvcGVyIHVzZXIgSURzXG5jb25zdCBBVVRIT1JJWkVEX0RFVkVMT1BFUlMgPSBbXG4gICdOb3QgVG9kZCBNaWRkbGV0b24nLCAvLyBDdXJyZW50IHVzZXIgSUQgZnJvbSB0aGUgY29kZWJhc2VcbiAgJ2RldmVsb3BlcjEnLFxuICAnZGV2ZWxvcGVyMicsXG4gICdhZG1pbidcbl07XG5cbi8vIERldmVsb3BtZW50IGFjY2VzcyB0b2tlbiAoaW4gcHJvZHVjdGlvbiwgdGhpcyB3b3VsZCBiZSBtb3JlIHNlY3VyZSlcbmNvbnN0IERFVl9BQ0NFU1NfVE9LRU4gPSAnZGV2X2FjY2Vzc18yMDI0JztcblxuLy8gQ2hlY2sgaWYgdXNlciBpcyBhdXRob3JpemVkIGZvciBkZXZlbG9wbWVudCBhY2Nlc3NcbmV4cG9ydCBjb25zdCBpc0RldmVsb3BlciA9ICh1c2VySWQpID0+IHtcbiAgcmV0dXJuIEFVVEhPUklaRURfREVWRUxPUEVSUy5pbmNsdWRlcyh1c2VySWQpO1xufTtcblxuLy8gQ2hlY2sgaWYgdXNlciBoYXMgZGV2ZWxvcG1lbnQgYWNjZXNzIHRva2VuXG5leHBvcnQgY29uc3QgaGFzRGV2QWNjZXNzID0gKGFjY2Vzc1Rva2VuKSA9PiB7XG4gIHJldHVybiBhY2Nlc3NUb2tlbiA9PT0gREVWX0FDQ0VTU19UT0tFTjtcbn07XG5cbi8vIEdldCBkZXZlbG9wbWVudCBhY2Nlc3MgdG9rZW4gKGZvciB0ZXN0aW5nIHB1cnBvc2VzKVxuZXhwb3J0IGNvbnN0IGdldERldkFjY2Vzc1Rva2VuID0gKCkgPT4ge1xuICByZXR1cm4gREVWX0FDQ0VTU19UT0tFTjtcbn07XG5cbi8vIFZhbGlkYXRlIGRldmVsb3BtZW50IGFjY2Vzc1xuZXhwb3J0IGNvbnN0IHZhbGlkYXRlRGV2QWNjZXNzID0gKHVzZXJJZCwgYWNjZXNzVG9rZW4gPSBudWxsKSA9PiB7XG4gIC8vIENoZWNrIGlmIHVzZXIgaXMgaW4gYXV0aG9yaXplZCBkZXZlbG9wZXJzIGxpc3RcbiAgaWYgKGlzRGV2ZWxvcGVyKHVzZXJJZCkpIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuICBcbiAgLy8gQ2hlY2sgaWYgdXNlciBoYXMgdmFsaWQgYWNjZXNzIHRva2VuXG4gIGlmIChhY2Nlc3NUb2tlbiAmJiBoYXNEZXZBY2Nlc3MoYWNjZXNzVG9rZW4pKSB7XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cbiAgXG4gIHJldHVybiBmYWxzZTtcbn07XG5cbi8vIERldmVsb3BtZW50IGVudmlyb25tZW50IGNoZWNrXG5leHBvcnQgY29uc3QgaXNEZXZlbG9wbWVudEVudmlyb25tZW50ID0gKCkgPT4ge1xuICByZXR1cm4gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdkZXZlbG9wbWVudCc7XG59O1xuXG4vLyBDb21iaW5lZCBhY2Nlc3MgY2hlY2sgZm9yIGRldmVsb3BtZW50IGZlYXR1cmVzXG5leHBvcnQgY29uc3QgY2FuQWNjZXNzRGV2RmVhdHVyZXMgPSAodXNlcklkLCBhY2Nlc3NUb2tlbiA9IG51bGwpID0+IHtcbiAgLy8gSW4gZGV2ZWxvcG1lbnQgZW52aXJvbm1lbnQsIGFsbG93IGFjY2VzcyB3aXRoIHByb3BlciBjcmVkZW50aWFsc1xuICBpZiAoaXNEZXZlbG9wbWVudEVudmlyb25tZW50KCkpIHtcbiAgICByZXR1cm4gdmFsaWRhdGVEZXZBY2Nlc3ModXNlcklkLCBhY2Nlc3NUb2tlbik7XG4gIH1cbiAgXG4gIC8vIEluIHByb2R1Y3Rpb24sIG9ubHkgYWxsb3cgYXV0aG9yaXplZCBkZXZlbG9wZXJzXG4gIHJldHVybiBpc0RldmVsb3Blcih1c2VySWQpO1xufTsgIl0sIm5hbWVzIjpbIkFVVEhPUklaRURfREVWRUxPUEVSUyIsIkRFVl9BQ0NFU1NfVE9LRU4iLCJpc0RldmVsb3BlciIsInVzZXJJZCIsImluY2x1ZGVzIiwiaGFzRGV2QWNjZXNzIiwiYWNjZXNzVG9rZW4iLCJnZXREZXZBY2Nlc3NUb2tlbiIsInZhbGlkYXRlRGV2QWNjZXNzIiwiYXJndW1lbnRzIiwibGVuZ3RoIiwidW5kZWZpbmVkIiwiaXNEZXZlbG9wbWVudEVudmlyb25tZW50IiwiY2FuQWNjZXNzRGV2RmVhdHVyZXMiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(pages-dir-node)/./lib/devAuth.js\n");

/***/ }),

/***/ "(pages-dir-node)/./lib/firebase.js":
/*!*************************!*\
  !*** ./lib/firebase.js ***!
  \*************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   app: () => (/* binding */ app),\n/* harmony export */   auth: () => (/* binding */ auth),\n/* harmony export */   db: () => (/* binding */ db),\n/* harmony export */   initializeAuth: () => (/* binding */ initializeAuth),\n/* harmony export */   isAuthEnabled: () => (/* binding */ isAuthEnabled),\n/* harmony export */   safeFirebaseOperation: () => (/* binding */ safeFirebaseOperation)\n/* harmony export */ });\n/* harmony import */ var firebase_app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! firebase/app */ \"firebase/app\");\n/* harmony import */ var firebase_firestore__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! firebase/firestore */ \"firebase/firestore\");\n/* harmony import */ var firebase_auth__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! firebase/auth */ \"firebase/auth\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([firebase_app__WEBPACK_IMPORTED_MODULE_0__, firebase_firestore__WEBPACK_IMPORTED_MODULE_1__, firebase_auth__WEBPACK_IMPORTED_MODULE_2__]);\n([firebase_app__WEBPACK_IMPORTED_MODULE_0__, firebase_firestore__WEBPACK_IMPORTED_MODULE_1__, firebase_auth__WEBPACK_IMPORTED_MODULE_2__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw new Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw new Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, \"catch\": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n\n\nvar firebaseConfig = {\n  apiKey: process.env.NEXT_PUBLIC_FIREBASE_API_KEY || \"AIzaSyD3FtIzbb1HwEa1juMYk1XSWB4tvbd6oBg\",\n  authDomain: process.env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN || \"topdog-e9d48.firebaseapp.com\",\n  projectId: process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID || \"topdog-e9d48\",\n  storageBucket: process.env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET || \"topdog-e9d48.firebasestorage.app\",\n  messagingSenderId: process.env.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID || \"410904939799\",\n  appId: process.env.NEXT_PUBLIC_FIREBASE_APP_ID || \"1:410904939799:web:352b9748425c9274f3fb52\",\n  measurementId: process.env.NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID || \"G-86BL4QJX5K\"\n};\nvar app = !(0,firebase_app__WEBPACK_IMPORTED_MODULE_0__.getApps)().length ? (0,firebase_app__WEBPACK_IMPORTED_MODULE_0__.initializeApp)(firebaseConfig) : (0,firebase_app__WEBPACK_IMPORTED_MODULE_0__.getApps)()[0];\nvar db = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.getFirestore)(app);\nvar auth = (0,firebase_auth__WEBPACK_IMPORTED_MODULE_2__.getAuth)(app);\n\n// Track authentication status\nvar authInitialized = false;\nvar authEnabled = false;\n\n// Initialize anonymous authentication for development\nvar initializeAuth = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n    var currentUser, userCredential, _t;\n    return _regeneratorRuntime().wrap(function (_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          if (false) {}\n          console.log('🔄 Server-side rendering - skipping Firebase auth');\n          return _context.abrupt(\"return\", null);\n        case 1:\n          _context.prev = 1;\n          // Check if user is already signed in\n          currentUser = auth.currentUser;\n          if (!currentUser) {\n            _context.next = 2;\n            break;\n          }\n          console.log('User already authenticated:', currentUser.uid);\n          authInitialized = true;\n          authEnabled = true;\n          return _context.abrupt(\"return\", currentUser);\n        case 2:\n          _context.next = 3;\n          return (0,firebase_auth__WEBPACK_IMPORTED_MODULE_2__.signInAnonymously)(auth);\n        case 3:\n          userCredential = _context.sent;\n          console.log('Anonymous authentication successful:', userCredential.user.uid);\n          authInitialized = true;\n          authEnabled = true;\n          return _context.abrupt(\"return\", userCredential.user);\n        case 4:\n          _context.prev = 4;\n          _t = _context[\"catch\"](1);\n          console.error('Anonymous authentication failed:', _t);\n          if (_t.code === 'auth/admin-restricted-operation') {\n            console.log('⚠️  Anonymous Authentication is not enabled in Firebase Console');\n            console.log('📋 To enable it:');\n            console.log('   1. Go to https://console.firebase.google.com/');\n            console.log('   2. Select your project: topdog-e9d48');\n            console.log('   3. Click \"Authentication\" → \"Sign-in method\"');\n            console.log('   4. Enable \"Anonymous\" authentication');\n            console.log('   5. Click \"Save\"');\n            console.log('');\n            console.log('🔄 The app will continue to work with mock data for now');\n          } else {\n            console.log('❌ Authentication error:', _t.message);\n          }\n          authInitialized = true;\n          authEnabled = false;\n          return _context.abrupt(\"return\", null);\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee, null, [[1, 4]]);\n  }));\n  return function initializeAuth() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\n// Safe initialization wrapper\nvar safeInitializeAuth = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n    var _t2;\n    return _regeneratorRuntime().wrap(function (_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          if (false) {}\n          return _context2.abrupt(\"return\");\n        case 1:\n          _context2.prev = 1;\n          _context2.next = 2;\n          return initializeAuth();\n        case 2:\n          _context2.next = 4;\n          break;\n        case 3:\n          _context2.prev = 3;\n          _t2 = _context2[\"catch\"](1);\n          console.log('🔄 Firebase authentication disabled - using mock data');\n          authInitialized = true;\n          authEnabled = false;\n        case 4:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2, null, [[1, 3]]);\n  }));\n  return function safeInitializeAuth() {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\n// Set up auth state listener only if we're in the browser\nif (false) {}\n\n// Helper function to handle Firebase operations with error handling\nvar safeFirebaseOperation = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(operation) {\n    var fallback,\n      _args3 = arguments,\n      _t3;\n    return _regeneratorRuntime().wrap(function (_context3) {\n      while (1) switch (_context3.prev = _context3.next) {\n        case 0:\n          fallback = _args3.length > 1 && _args3[1] !== undefined ? _args3[1] : null;\n          if (false) {}\n          return _context3.abrupt(\"return\", fallback);\n        case 1:\n          _context3.prev = 1;\n          _context3.next = 2;\n          return operation();\n        case 2:\n          return _context3.abrupt(\"return\", _context3.sent);\n        case 3:\n          _context3.prev = 3;\n          _t3 = _context3[\"catch\"](1);\n          if (!(_t3.code === 'permission-denied' || _t3.message.includes('Missing or insufficient permissions') || _t3.code === 'auth/admin-restricted-operation')) {\n            _context3.next = 4;\n            break;\n          }\n          console.error('Firebase permission error:', _t3.message);\n          console.log('📋 To fix this:');\n          console.log('   1. Enable Anonymous Authentication in Firebase Console');\n          console.log('   2. Update Firestore security rules to allow read/write');\n          console.log('   3. Use the rules from firestore.rules file');\n          console.log('');\n          console.log('🔄 Using fallback data for now');\n          return _context3.abrupt(\"return\", fallback);\n        case 4:\n          throw _t3;\n        case 5:\n        case \"end\":\n          return _context3.stop();\n      }\n    }, _callee3, null, [[1, 3]]);\n  }));\n  return function safeFirebaseOperation(_x) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\n// Check if authentication is available\nvar isAuthEnabled = function isAuthEnabled() {\n  // Always return false on server side\n  if (true) {\n    return false;\n  }\n  return authEnabled;\n};\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-node)/./lib/firebase.js\n");

/***/ }),

/***/ "(pages-dir-node)/./lib/mockDrafters.js":
/*!*****************************!*\
  !*** ./lib/mockDrafters.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MOCK_DRAFTER_NAMES: () => (/* binding */ MOCK_DRAFTER_NAMES),\n/* harmony export */   getAllMockDrafters: () => (/* binding */ getAllMockDrafters),\n/* harmony export */   getRandomMockDrafters: () => (/* binding */ getRandomMockDrafters)\n/* harmony export */ });\n// Mock Drafter Names Index\n// This file contains an array of mock drafter names that can be randomly selected from\n// for creating mock drafts with simulated participants\n\nvar MOCK_DRAFTER_NAMES = [\n// Epstein-related names\n'Little Saint James', 'Epstein Didn\\'t Kill Himself', 'Free Ghislaine Maxwell', 'Lolita Express', 'Flight Logs', 'Black Book', 'Palm Beach', 'Upper East Side', 'Zorro Ranch', 'Virgin Islands', 'jet fuel doesn\\'t melt steel',\n// TWA Flight 800 related names\n'TWA 800', 'Flight 800', 'Long Island Sound', 'Center Fuel Tank', 'Missile Strike', 'Friendly Fire', 'Navy Exercise', 'Explosive Residue', 'Witness Testimony', 'Radar Anomaly',\n// Pro-Mangione names\n'Mangione Supporters', 'Team Mangione', 'Mangione Fans', 'Mangione Believers', 'Mangione Defenders',\n// Pro-Palestine names\n'Free Palestine', 'Palestine Supporters', 'Team Palestine', 'Palestine Defenders', 'Palestine Advocates',\n// Titan sub implosion names\n'Titan Implosion Fans', 'OceanGate Critics', 'Submarine Schadenfreude',\n// Obama gymkhana name\n'Obama can\\'t gymkhana',\n// Kanye West defense names\n'Kanye Defenders', 'Ye Supporters', 'Kanye Apologists',\n// Pro-abortion names\n'Pro-Choice Advocates', 'Reproductive Rights', 'Bodily Autonomy', 'Women\\'s Rights', 'Choice Defenders',\n// Moon landing conspiracy names\n'Moon Landing Deniers', 'Stanley Kubrick Studios', 'Flag Waving', 'No Stars in Sky', 'Van Allen Belts',\n// COVID conspiracy names\n'5G Conspiracy', 'Bill Gates Microchip', 'Plandemic Believers', 'Vaccine Shedding', 'Magnetic Arms', 'PCR Test Fraud', 'Hydroxychloroquine', 'Ivermectin Warriors', 'Natural Immunity', 'Fauci Critics', 'Great Reset', 'Depopulation Agenda', 'Vaccine Passports', 'Lockdown Protesters', 'Mask Mandate Critics',\n// JFK conspiracy names\n'Magic Bullet Theory', 'Grassy Knoll', 'Umbrella Man', 'Badge Man', 'CIA Involvement', 'Cuban Connection', 'Mafia Hit',\n// Chemtrail names\n'Chemtrail Watchers', 'Sky Spraying', 'Weather Modification',\n// CIA crack names\n'CIA Crack Dealers', 'Contra Connection', 'Freeway Ricky Ross', 'Crack Epidemic', 'Drug War Conspiracy',\n// Princess Diana conspiracy names\n'Diana Assassination', 'Tunnel Crash', 'Royal Cover-Up',\n// Obama birth certificate names\n'Birther Movement', 'Kenya Birth', 'Fake Certificate', 'Hawaii Cover-Up', 'Constitutional Crisis',\n// Reptilian government names\n'Lizard People', 'Reptilian Overlords', 'Shape-Shifting Elite', 'Cold-Blooded Rulers', 'Scaly Government',\n// Denver airport names\n'Blue Horse', 'Underground Bunkers', 'Illuminati Airport',\n// Flat earth names\n'Flat Earth Society', 'Ice Wall', 'Antarctica Guard', 'NASA Lies', 'Globe Deniers',\n// Weather conspiracy names\n'HAARP Weather Control', 'Hurricane Manipulation', 'Climate Engineering',\n// Harvey Weinstein defense names\n'Weinstein Was Framed', 'Harvey Defenders', 'MeToo Backlash', 'False Allegations', 'Cancel Culture', 'Trial by Media', 'Innocent Until Proven', 'Due Process Denied', 'Hollywood Witch Hunt', 'Weinstein Supporters',\n// Trust but verify names\n'Trust But Verify', 'Verify Everything', 'Independent Verification',\n// Capitol riot conspiracy names\n'Antifa Infiltrators', 'False Flag Riot', 'FBI Plants', 'Inside Job', 'Government Staged',\n// Antifa themed names\n'Anti-Fascist Action', 'Black Bloc', 'Direct Action', 'No Platform', 'Punch Nazis',\n// QAnon themed names\n'Q Followers', 'Great Awakening', 'Storm Coming', 'Trust the Plan', 'Where We Go One',\n// Kamala 2024 name\n'Kamala 2024',\n// Exxon Valdez names\n'Exxon Valdez Fans', 'Oil Spill Enthusiasts',\n// BP oil spill support names\n'BP Defenders', 'Deepwater Horizon Supporters', 'BP Apologists', 'Oil Industry Backers', 'BP Was Framed',\n// Climate change questioning names\n'Climate Change Deniers', 'Global Warming Hoax', 'Climate Science Critics', 'Temperature Data Skeptics', 'Climate Alarmism',\n// Erin Hernandez name\n'Erin Hernandez',\n// Justin Jefferson Epstein name\n'Justin Jefferson Epstein',\n// Brett Favre Mississippi money names\n'Favre Should\\'ve Stolen More', 'Mississippi Has Enough Welfare',\n// Free Brett Favre name\n'Free Brett Favre',\n// Favre was Framed name\n'Favre was Framed',\n// Anti-recycling names\n'Recycling is a Scam', 'Landfill Enthusiasts', 'Single-Use Plastic Fans',\n// Sex Work is Work name\n'Sex Work is Work',\n// Diddy support names\n'Diddy Defenders', 'Puff Daddy Supporters', 'Diddy Was Framed', 'Bad Boy Records',\n// Diddy Didn't Do It name\n'Diddy Didn\\'t Do It',\n// R. Kelly support names\n'R. Kelly Defenders', 'Trapped in the Closet', 'R. Kelly Supporters',\n// I Don't Care if Diddy Did It name\n'I Don\\'t Care if Diddy Did It',\n// 9/11 themed names\n'Building 7', 'Thermite Residue', 'Controlled Demolition', 'Free Fall Speed', 'Nano Thermite', 'Molten Steel', 'Dustification', 'Explosive Residue', 'Squibs', 'Pancake Theory', 'Fireproof Steel', 'WTC 1 & 2', 'Pentagon Hole', 'Flight 93', 'Shanksville', 'No Plane Theory', 'Hologram Planes', 'Remote Control', 'False Flag', 'CIA Operation', 'Mossad Involvement', 'Bush Did 9/11', 'Cheney\\'s Bunker', 'NORAD Stand Down', 'Put Options', 'Gold Vault', 'Silver Recovery', 'Insurance Fraud', 'Architects & Engineers', 'Firefighters for Truth', 'Pilots for 9/11 Truth', 'Scholars for 9/11 Truth', 'Veterans for 9/11 Truth', 'Medical Professionals for 9/11 Truth', 'Lawyers for 9/11 Truth', 'Scientists for 9/11 Truth', 'Engineers for 9/11 Truth', 'Architects for 9/11 Truth', 'Family Members for 9/11 Truth', 'Survivors for 9/11 Truth'];\n\n// Function to get a random subset of mock drafter names\nvar getRandomMockDrafters = function getRandomMockDrafters() {\n  var count = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 11;\n  if (MOCK_DRAFTER_NAMES.length === 0) {\n    console.warn('No mock drafter names available in index');\n    return [];\n  }\n\n  // Shuffle the array and take the first 'count' elements\n  var shuffled = [].concat(MOCK_DRAFTER_NAMES).sort(function () {\n    return Math.random() - 0.5;\n  });\n  return shuffled.slice(0, Math.min(count, MOCK_DRAFTER_NAMES.length));\n};\n\n// Function to get all available mock drafter names\nvar getAllMockDrafters = function getAllMockDrafters() {\n  return [].concat(MOCK_DRAFTER_NAMES);\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-node)/./lib/mockDrafters.js\n");

/***/ }),

/***/ "(pages-dir-node)/./lib/playerPool.js":
/*!***************************!*\
  !*** ./lib/playerPool.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PLAYER_POOL: () => (/* binding */ PLAYER_POOL),\n/* harmony export */   groupPicksByPosition: () => (/* binding */ groupPicksByPosition)\n/* harmony export */ });\nvar PLAYER_POOL = [{\n  \"name\": \"Ja'Marr Chase\",\n  \"position\": \"WR\",\n  \"team\": \"CIN\",\n  \"bye\": 10,\n  \"adp\": 1.1\n}, {\n  \"name\": \"Justin Jefferson\",\n  \"position\": \"WR\",\n  \"team\": \"MIN\",\n  \"bye\": 6,\n  \"adp\": 3.1\n}, {\n  \"name\": \"Saquon Barkley\",\n  \"position\": \"RB\",\n  \"team\": \"PHI\",\n  \"bye\": 9,\n  \"adp\": 2.8\n}, {\n  \"name\": \"CeeDee Lamb\",\n  \"position\": \"WR\",\n  \"team\": \"DAL\",\n  \"bye\": 10,\n  \"adp\": 5.6\n}, {\n  \"name\": \"Bijan Robinson\",\n  \"position\": \"RB\",\n  \"team\": \"ATL\",\n  \"bye\": 5,\n  \"adp\": 3.7\n}, {\n  \"name\": \"Jahmyr Gibbs\",\n  \"position\": \"RB\",\n  \"team\": \"DET\",\n  \"bye\": 8,\n  \"adp\": 5.4\n}, {\n  \"name\": \"Puka Nacua\",\n  \"position\": \"WR\",\n  \"team\": \"LAR\",\n  \"bye\": 8,\n  \"adp\": 7.8\n}, {\n  \"name\": \"Malik Nabers\",\n  \"position\": \"WR\",\n  \"team\": \"NYG\",\n  \"bye\": 14,\n  \"adp\": 10.2\n}, {\n  \"name\": \"Christian McCaffrey\",\n  \"position\": \"RB\",\n  \"team\": \"SF\",\n  \"bye\": 14,\n  \"adp\": 8.2\n}, {\n  \"name\": \"Ashton Jeanty\",\n  \"position\": \"RB\",\n  \"team\": \"LV\",\n  \"bye\": 8,\n  \"adp\": 10.5\n}, {\n  \"name\": \"Amon-Ra St. Brown\",\n  \"position\": \"WR\",\n  \"team\": \"DET\",\n  \"bye\": 8,\n  \"adp\": 10.8\n}, {\n  \"name\": \"Nico Collins\",\n  \"position\": \"WR\",\n  \"team\": \"HOU\",\n  \"bye\": 6,\n  \"adp\": 12\n}, {\n  \"name\": \"Brian Thomas Jr.\",\n  \"position\": \"WR\",\n  \"team\": \"JAX\",\n  \"bye\": 8,\n  \"adp\": 13.9\n}, {\n  \"name\": \"Brock Bowers\",\n  \"position\": \"TE\",\n  \"team\": \"LV\",\n  \"bye\": 8,\n  \"adp\": 16.8\n}, {\n  \"name\": \"Drake London\",\n  \"position\": \"WR\",\n  \"team\": \"ATL\",\n  \"bye\": 5,\n  \"adp\": 15.7\n}, {\n  \"name\": \"Ladd McConkey\",\n  \"position\": \"WR\",\n  \"team\": \"LAC\",\n  \"bye\": 12,\n  \"adp\": 17.5\n}, {\n  \"name\": \"De'Von Achane\",\n  \"position\": \"RB\",\n  \"team\": \"MIA\",\n  \"bye\": 12,\n  \"adp\": 17.7\n}, {\n  \"name\": \"Derrick Henry\",\n  \"position\": \"RB\",\n  \"team\": \"BAL\",\n  \"bye\": 7,\n  \"adp\": 12.5\n}, {\n  \"name\": \"A.J. Brown\",\n  \"position\": \"WR\",\n  \"team\": \"PHI\",\n  \"bye\": 9,\n  \"adp\": 19.4\n}, {\n  \"name\": \"Bucky Irving\",\n  \"position\": \"RB\",\n  \"team\": \"TB\",\n  \"bye\": 9,\n  \"adp\": 22.4\n}, {\n  \"name\": \"Rashee Rice\",\n  \"position\": \"WR\",\n  \"team\": \"KC\",\n  \"bye\": 10,\n  \"adp\": 22.3\n}, {\n  \"name\": \"Jonathan Taylor\",\n  \"position\": \"RB\",\n  \"team\": \"IND\",\n  \"bye\": 11,\n  \"adp\": 19.9\n}, {\n  \"name\": \"Josh Jacobs\",\n  \"position\": \"RB\",\n  \"team\": \"GB\",\n  \"bye\": 5,\n  \"adp\": 24\n}, {\n  \"name\": \"Trey McBride\",\n  \"position\": \"TE\",\n  \"team\": \"ARI\",\n  \"bye\": 8,\n  \"adp\": 24.6\n}, {\n  \"name\": \"Tee Higgins\",\n  \"position\": \"WR\",\n  \"team\": \"CIN\",\n  \"bye\": 10,\n  \"adp\": 25.4\n}, {\n  \"name\": \"Garrett Wilson\",\n  \"position\": \"WR\",\n  \"team\": \"NYJ\",\n  \"bye\": 9,\n  \"adp\": 27\n}, {\n  \"name\": \"Chase Brown\",\n  \"position\": \"RB\",\n  \"team\": \"CIN\",\n  \"bye\": 10,\n  \"adp\": 28.3\n}, {\n  \"name\": \"Marvin Harrison Jr.\",\n  \"position\": \"WR\",\n  \"team\": \"ARI\",\n  \"bye\": 8,\n  \"adp\": 29.8\n}, {\n  \"name\": \"Tyreek Hill\",\n  \"position\": \"WR\",\n  \"team\": \"MIA\",\n  \"bye\": 12,\n  \"adp\": 33.3\n}, {\n  \"name\": \"Jaxon Smith-Njigba\",\n  \"position\": \"WR\",\n  \"team\": \"SEA\",\n  \"bye\": 8,\n  \"adp\": 32.3\n}, {\n  \"name\": \"Breece Hall\",\n  \"position\": \"RB\",\n  \"team\": \"NYJ\",\n  \"bye\": 9,\n  \"adp\": 35.8\n}, {\n  \"name\": \"Terry McLaurin\",\n  \"position\": \"WR\",\n  \"team\": \"WAS\",\n  \"bye\": 12,\n  \"adp\": 31.8\n}, {\n  \"name\": \"Davante Adams\",\n  \"position\": \"WR\",\n  \"team\": \"LAR\",\n  \"bye\": 8,\n  \"adp\": 32.8\n}, {\n  \"name\": \"Kyren Williams\",\n  \"position\": \"RB\",\n  \"team\": \"LAR\",\n  \"bye\": 8,\n  \"adp\": 32.7\n}, {\n  \"name\": \"Tetairoa Mcmillan\",\n  \"position\": \"WR\",\n  \"team\": \"CAR\",\n  \"bye\": 14,\n  \"adp\": 47.1\n}, {\n  \"name\": \"Mike Evans\",\n  \"position\": \"WR\",\n  \"team\": \"TB\",\n  \"bye\": 9,\n  \"adp\": 37\n}, {\n  \"name\": \"Josh Allen\",\n  \"position\": \"QB\",\n  \"team\": \"BUF\",\n  \"bye\": 7,\n  \"adp\": 28.1\n}, {\n  \"name\": \"Lamar Jackson\",\n  \"position\": \"QB\",\n  \"team\": \"BAL\",\n  \"bye\": 7,\n  \"adp\": 29.8\n}, {\n  \"name\": \"Jayden Daniels\",\n  \"position\": \"QB\",\n  \"team\": \"WAS\",\n  \"bye\": 12,\n  \"adp\": 38.4\n}, {\n  \"name\": \"Jalen Hurts\",\n  \"position\": \"QB\",\n  \"team\": \"PHI\",\n  \"bye\": 9,\n  \"adp\": 46.5\n}, {\n  \"name\": \"DJ Moore\",\n  \"position\": \"WR\",\n  \"team\": \"CHI\",\n  \"bye\": 5,\n  \"adp\": 41.1\n}, {\n  \"name\": \"Omarion Hampton\",\n  \"position\": \"RB\",\n  \"team\": \"LAC\",\n  \"bye\": 12,\n  \"adp\": 48.1\n}, {\n  \"name\": \"George Kittle\",\n  \"position\": \"TE\",\n  \"team\": \"SF\",\n  \"bye\": 14,\n  \"adp\": 40.9\n}, {\n  \"name\": \"Xavier Worthy\",\n  \"position\": \"WR\",\n  \"team\": \"KC\",\n  \"bye\": 10,\n  \"adp\": 44.9\n}, {\n  \"name\": \"DeVonta Smith\",\n  \"position\": \"WR\",\n  \"team\": \"PHI\",\n  \"bye\": 9,\n  \"adp\": 50.4\n}, {\n  \"name\": \"Courtland Sutton\",\n  \"position\": \"WR\",\n  \"team\": \"DEN\",\n  \"bye\": 12,\n  \"adp\": 48.8\n}, {\n  \"name\": \"James Cook\",\n  \"position\": \"RB\",\n  \"team\": \"BUF\",\n  \"bye\": 7,\n  \"adp\": 39.2\n}, {\n  \"name\": \"Zay Flowers\",\n  \"position\": \"WR\",\n  \"team\": \"BAL\",\n  \"bye\": 7,\n  \"adp\": 53\n}, {\n  \"name\": \"George Pickens\",\n  \"position\": \"WR\",\n  \"team\": \"DAL\",\n  \"bye\": 10,\n  \"adp\": 53.2\n}, {\n  \"name\": \"Travis Hunter\",\n  \"position\": \"WR\",\n  \"team\": \"JAX\",\n  \"bye\": 8,\n  \"adp\": 55.4\n}, {\n  \"name\": \"DK Metcalf\",\n  \"position\": \"WR\",\n  \"team\": \"PIT\",\n  \"bye\": 5,\n  \"adp\": 42.3\n}, {\n  \"name\": \"Chuba Hubbard\",\n  \"position\": \"RB\",\n  \"team\": \"CAR\",\n  \"bye\": 14,\n  \"adp\": 51.3\n}, {\n  \"name\": \"Jameson Williams\",\n  \"position\": \"WR\",\n  \"team\": \"DET\",\n  \"bye\": 8,\n  \"adp\": 45.1\n}, {\n  \"name\": \"Calvin Ridley\",\n  \"position\": \"WR\",\n  \"team\": \"TEN\",\n  \"bye\": 10,\n  \"adp\": 59.1\n}, {\n  \"name\": \"Kenneth Walker III\",\n  \"position\": \"RB\",\n  \"team\": \"SEA\",\n  \"bye\": 8,\n  \"adp\": 55.6\n}, {\n  \"name\": \"Joe Burrow\",\n  \"position\": \"QB\",\n  \"team\": \"CIN\",\n  \"bye\": 10,\n  \"adp\": 46.3\n}, {\n  \"name\": \"Joe Mixon\",\n  \"position\": \"RB\",\n  \"team\": \"HOU\",\n  \"bye\": 6,\n  \"adp\": 57.2\n}, {\n  \"name\": \"TreVeyon Henderson\",\n  \"position\": \"RB\",\n  \"team\": \"NE\",\n  \"bye\": 14,\n  \"adp\": 63.7\n}, {\n  \"name\": \"RJ Harvey\",\n  \"position\": \"RB\",\n  \"team\": \"DEN\",\n  \"bye\": 12,\n  \"adp\": 64.3\n}, {\n  \"name\": \"Chris Godwin\",\n  \"position\": \"WR\",\n  \"team\": \"TB\",\n  \"bye\": 9,\n  \"adp\": 65.1\n}, {\n  \"name\": \"Jaylen Waddle\",\n  \"position\": \"WR\",\n  \"team\": \"MIA\",\n  \"bye\": 12,\n  \"adp\": 58.6\n}, {\n  \"name\": \"Alvin Kamara\",\n  \"position\": \"RB\",\n  \"team\": \"NO\",\n  \"bye\": 11,\n  \"adp\": 51.4\n}, {\n  \"name\": \"Jauan Jennings\",\n  \"position\": \"WR\",\n  \"team\": \"SF\",\n  \"bye\": 14,\n  \"adp\": 67.4\n}, {\n  \"name\": \"James Conner\",\n  \"position\": \"RB\",\n  \"team\": \"ARI\",\n  \"bye\": 8,\n  \"adp\": 60.2\n}, {\n  \"name\": \"Rome Odunze\",\n  \"position\": \"WR\",\n  \"team\": \"CHI\",\n  \"bye\": 5,\n  \"adp\": 68.4\n}, {\n  \"name\": \"Chris Olave\",\n  \"position\": \"WR\",\n  \"team\": \"NO\",\n  \"bye\": 11,\n  \"adp\": 71.8\n}, {\n  \"name\": \"David Montgomery\",\n  \"position\": \"RB\",\n  \"team\": \"DET\",\n  \"bye\": 8,\n  \"adp\": 69.3\n}, {\n  \"name\": \"Jordan Addison\",\n  \"position\": \"WR\",\n  \"team\": \"MIN\",\n  \"bye\": 6,\n  \"adp\": 72.7\n}, {\n  \"name\": \"Quinshon Judkins\",\n  \"position\": \"RB\",\n  \"team\": \"CLE\",\n  \"bye\": 9,\n  \"adp\": 75.5\n}, {\n  \"name\": \"Sam LaPorta\",\n  \"position\": \"TE\",\n  \"team\": \"DET\",\n  \"bye\": 8,\n  \"adp\": 62.8\n}, {\n  \"name\": \"Jakobi Meyers\",\n  \"position\": \"WR\",\n  \"team\": \"LV\",\n  \"bye\": 8,\n  \"adp\": 73.4\n}, {\n  \"name\": \"D'Andre Swift\",\n  \"position\": \"RB\",\n  \"team\": \"CHI\",\n  \"bye\": 5,\n  \"adp\": 71.8\n}, {\n  \"name\": \"Deebo Samuel Sr.\",\n  \"position\": \"WR\",\n  \"team\": \"WAS\",\n  \"bye\": 12,\n  \"adp\": 66.1\n}, {\n  \"name\": \"Patrick Mahomes\",\n  \"position\": \"QB\",\n  \"team\": \"KC\",\n  \"bye\": 10,\n  \"adp\": 70.9\n}, {\n  \"name\": \"Tony Pollard\",\n  \"position\": \"RB\",\n  \"team\": \"TEN\",\n  \"bye\": 10,\n  \"adp\": 85.7\n}, {\n  \"name\": \"Jerry Jeudy\",\n  \"position\": \"WR\",\n  \"team\": \"CLE\",\n  \"bye\": 9,\n  \"adp\": 67.7\n}, {\n  \"name\": \"Stefon Diggs\",\n  \"position\": \"WR\",\n  \"team\": \"NE\",\n  \"bye\": 14,\n  \"adp\": 80.7\n}, {\n  \"name\": \"Kaleb Johnson\",\n  \"position\": \"RB\",\n  \"team\": \"PIT\",\n  \"bye\": 5,\n  \"adp\": 80.1\n}, {\n  \"name\": \"Khalil Shakir\",\n  \"position\": \"WR\",\n  \"team\": \"BUF\",\n  \"bye\": 7,\n  \"adp\": 76.5\n}, {\n  \"name\": \"Matthew Golden\",\n  \"position\": \"WR\",\n  \"team\": \"GB\",\n  \"bye\": 5,\n  \"adp\": 87.8\n}, {\n  \"name\": \"Aaron Jones\",\n  \"position\": \"RB\",\n  \"team\": \"MIN\",\n  \"bye\": 6,\n  \"adp\": 77.5\n}, {\n  \"name\": \"Jayden Reed\",\n  \"position\": \"WR\",\n  \"team\": \"GB\",\n  \"bye\": 5,\n  \"adp\": 88.8\n}, {\n  \"name\": \"Isiah Pacheco\",\n  \"position\": \"RB\",\n  \"team\": \"KC\",\n  \"bye\": 10,\n  \"adp\": 79.8\n}, {\n  \"name\": \"Josh Downs\",\n  \"position\": \"WR\",\n  \"team\": \"IND\",\n  \"bye\": 11,\n  \"adp\": 88.8\n}, {\n  \"name\": \"Ricky Pearsall\",\n  \"position\": \"WR\",\n  \"team\": \"SF\",\n  \"bye\": 14,\n  \"adp\": 83.3\n}, {\n  \"name\": \"Travis Kelce\",\n  \"position\": \"TE\",\n  \"team\": \"KC\",\n  \"bye\": 10,\n  \"adp\": 78.9\n}, {\n  \"name\": \"Kyler Murray\",\n  \"position\": \"QB\",\n  \"team\": \"ARI\",\n  \"bye\": 8,\n  \"adp\": 93.4\n}, {\n  \"name\": \"T.J. Hockenson\",\n  \"position\": \"TE\",\n  \"team\": \"MIN\",\n  \"bye\": 6,\n  \"adp\": 86.3\n}, {\n  \"name\": \"Baker Mayfield\",\n  \"position\": \"QB\",\n  \"team\": \"TB\",\n  \"bye\": 9,\n  \"adp\": 81.7\n}, {\n  \"name\": \"Emeka Egbuka\",\n  \"position\": \"WR\",\n  \"team\": \"TB\",\n  \"bye\": 9,\n  \"adp\": 98\n}, {\n  \"name\": \"Cooper Kupp\",\n  \"position\": \"WR\",\n  \"team\": \"SEA\",\n  \"bye\": 8,\n  \"adp\": 83.5\n}, {\n  \"name\": \"Justin Fields\",\n  \"position\": \"QB\",\n  \"team\": \"NYJ\",\n  \"bye\": 9,\n  \"adp\": 98.3\n}, {\n  \"name\": \"Brandon Aiyuk\",\n  \"position\": \"WR\",\n  \"team\": \"SF\",\n  \"bye\": 14,\n  \"adp\": 98.7\n}, {\n  \"name\": \"Brian Robinson Jr.\",\n  \"position\": \"RB\",\n  \"team\": \"WAS\",\n  \"bye\": 12,\n  \"adp\": 86.5\n}, {\n  \"name\": \"Darnell Mooney\",\n  \"position\": \"WR\",\n  \"team\": \"ATL\",\n  \"bye\": 5,\n  \"adp\": 94.5\n}, {\n  \"name\": \"Caleb Williams\",\n  \"position\": \"QB\",\n  \"team\": \"CHI\",\n  \"bye\": 5,\n  \"adp\": 104.2\n}, {\n  \"name\": \"Bo Nix\",\n  \"position\": \"QB\",\n  \"team\": \"DEN\",\n  \"bye\": 12,\n  \"adp\": 91.7\n}, {\n  \"name\": \"Brock Purdy\",\n  \"position\": \"QB\",\n  \"team\": \"SF\",\n  \"bye\": 14,\n  \"adp\": 104.4\n}, {\n  \"name\": \"Michael Pittman Jr.\",\n  \"position\": \"WR\",\n  \"team\": \"IND\",\n  \"bye\": 11,\n  \"adp\": 104.8\n}, {\n  \"name\": \"Evan Engram\",\n  \"position\": \"TE\",\n  \"team\": \"DEN\",\n  \"bye\": 12,\n  \"adp\": 95.5\n}, {\n  \"name\": \"Jaylen Warren\",\n  \"position\": \"RB\",\n  \"team\": \"PIT\",\n  \"bye\": 5,\n  \"adp\": 96.3\n}, {\n  \"name\": \"Jayden Higgins\",\n  \"position\": \"WR\",\n  \"team\": \"HOU\",\n  \"bye\": 6,\n  \"adp\": 108.4\n}, {\n  \"name\": \"Dak Prescott\",\n  \"position\": \"QB\",\n  \"team\": \"DAL\",\n  \"bye\": 10,\n  \"adp\": 107.9\n}, {\n  \"name\": \"Jared Goff\",\n  \"position\": \"QB\",\n  \"team\": \"DET\",\n  \"bye\": 8,\n  \"adp\": 101\n}, {\n  \"name\": \"Jonnu Smith\",\n  \"position\": \"TE\",\n  \"team\": \"MIA\",\n  \"bye\": 12,\n  \"adp\": 106.6\n}, {\n  \"name\": \"Drake Maye\",\n  \"position\": \"QB\",\n  \"team\": \"NE\",\n  \"bye\": 14,\n  \"adp\": 118.6\n}, {\n  \"name\": \"Mark Andrews\",\n  \"position\": \"TE\",\n  \"team\": \"BAL\",\n  \"bye\": 7,\n  \"adp\": 102.9\n}, {\n  \"name\": \"Cam Skattebo\",\n  \"position\": \"RB\",\n  \"team\": \"NYG\",\n  \"bye\": 14,\n  \"adp\": 114.1\n}, {\n  \"name\": \"Tre Harris\",\n  \"position\": \"WR\",\n  \"team\": \"LAC\",\n  \"bye\": 12,\n  \"adp\": 121.1\n}, {\n  \"name\": \"Justin Herbert\",\n  \"position\": \"QB\",\n  \"team\": \"LAC\",\n  \"bye\": 12,\n  \"adp\": 117.2\n}, {\n  \"name\": \"Jordan Mason\",\n  \"position\": \"RB\",\n  \"team\": \"MIN\",\n  \"bye\": 6,\n  \"adp\": 105.3\n}, {\n  \"name\": \"Tyrone Tracy Jr.\",\n  \"position\": \"RB\",\n  \"team\": \"NYG\",\n  \"bye\": 14,\n  \"adp\": 101.1\n}, {\n  \"name\": \"Trevor Lawrence\",\n  \"position\": \"QB\",\n  \"team\": \"JAX\",\n  \"bye\": 8,\n  \"adp\": 132.2\n}, {\n  \"name\": \"Jordan Love\",\n  \"position\": \"QB\",\n  \"team\": \"GB\",\n  \"bye\": 5,\n  \"adp\": 124.3\n}, {\n  \"name\": \"Travis Etienne Jr.\",\n  \"position\": \"RB\",\n  \"team\": \"JAX\",\n  \"bye\": 8,\n  \"adp\": 107.1\n}, {\n  \"name\": \"Kyle Williams\",\n  \"position\": \"WR\",\n  \"team\": \"NE\",\n  \"bye\": 14,\n  \"adp\": 141.5\n}, {\n  \"name\": \"C.J. Stroud\",\n  \"position\": \"QB\",\n  \"team\": \"HOU\",\n  \"bye\": 6,\n  \"adp\": 126.6\n}, {\n  \"name\": \"Tyler Warren\",\n  \"position\": \"TE\",\n  \"team\": \"IND\",\n  \"bye\": 11,\n  \"adp\": 115\n}, {\n  \"name\": \"Keon Coleman\",\n  \"position\": \"WR\",\n  \"team\": \"BUF\",\n  \"bye\": 7,\n  \"adp\": 110.8\n}, {\n  \"name\": \"Christian Kirk\",\n  \"position\": \"WR\",\n  \"team\": \"HOU\",\n  \"bye\": 6,\n  \"adp\": 129.7\n}, {\n  \"name\": \"Colston Loveland\",\n  \"position\": \"TE\",\n  \"team\": \"CHI\",\n  \"bye\": 5,\n  \"adp\": 131\n}, {\n  \"name\": \"Bhayshul Tuten\",\n  \"position\": \"RB\",\n  \"team\": \"JAX\",\n  \"bye\": 8,\n  \"adp\": 137.8\n}, {\n  \"name\": \"J.J. McCarthy\",\n  \"position\": \"QB\",\n  \"team\": \"MIN\",\n  \"bye\": 6,\n  \"adp\": 118.8\n}, {\n  \"name\": \"Rashod Bateman\",\n  \"position\": \"WR\",\n  \"team\": \"BAL\",\n  \"bye\": 7,\n  \"adp\": 113.1\n}, {\n  \"name\": \"Luther Burden III\",\n  \"position\": \"WR\",\n  \"team\": \"CHI\",\n  \"bye\": 5,\n  \"adp\": 138.8\n}, {\n  \"name\": \"Najee Harris\",\n  \"position\": \"RB\",\n  \"team\": \"LAC\",\n  \"bye\": 12,\n  \"adp\": 106.1\n}, {\n  \"name\": \"Dallas Goedert\",\n  \"position\": \"TE\",\n  \"team\": \"PHI\",\n  \"bye\": 9,\n  \"adp\": 139\n}, {\n  \"name\": \"David Njoku\",\n  \"position\": \"TE\",\n  \"team\": \"CLE\",\n  \"bye\": 9,\n  \"adp\": 116.7\n}, {\n  \"name\": \"Tyjae Spears\",\n  \"position\": \"RB\",\n  \"team\": \"TEN\",\n  \"bye\": 10,\n  \"adp\": 128.8\n}, {\n  \"name\": \"Zach Charbonnet\",\n  \"position\": \"RB\",\n  \"team\": \"SEA\",\n  \"bye\": 8,\n  \"adp\": 115.4\n}, {\n  \"name\": \"Rashid Shaheed\",\n  \"position\": \"WR\",\n  \"team\": \"NO\",\n  \"bye\": 11,\n  \"adp\": 120.1\n}, {\n  \"name\": \"J.K. Dobbins\",\n  \"position\": \"RB\",\n  \"team\": \"DEN\",\n  \"bye\": 12,\n  \"adp\": 122.7\n}, {\n  \"name\": \"Michael Penix Jr.\",\n  \"position\": \"QB\",\n  \"team\": \"ATL\",\n  \"bye\": 5,\n  \"adp\": 137.2\n}, {\n  \"name\": \"Rhamondre Stevenson\",\n  \"position\": \"RB\",\n  \"team\": \"NE\",\n  \"bye\": 14,\n  \"adp\": 125.5\n}, {\n  \"name\": \"Jack Bech\",\n  \"position\": \"WR\",\n  \"team\": \"LV\",\n  \"bye\": 8,\n  \"adp\": 151.7\n}, {\n  \"name\": \"Tucker Kraft\",\n  \"position\": \"TE\",\n  \"team\": \"GB\",\n  \"bye\": 5,\n  \"adp\": 131.1\n}, {\n  \"name\": \"Dalton Kincaid\",\n  \"position\": \"TE\",\n  \"team\": \"BUF\",\n  \"bye\": 7,\n  \"adp\": 133.3\n}, {\n  \"name\": \"Matthew Stafford\",\n  \"position\": \"QB\",\n  \"team\": \"LAR\",\n  \"bye\": 8,\n  \"adp\": 143.6\n}, {\n  \"name\": \"Jake Ferguson\",\n  \"position\": \"TE\",\n  \"team\": \"DAL\",\n  \"bye\": 10,\n  \"adp\": 147.3\n}, {\n  \"name\": \"Javonte Williams\",\n  \"position\": \"RB\",\n  \"team\": \"DAL\",\n  \"bye\": 10,\n  \"adp\": 119.7\n}, {\n  \"name\": \"Quentin Johnston\",\n  \"position\": \"WR\",\n  \"team\": \"LAC\",\n  \"bye\": 12,\n  \"adp\": 152.7\n}, {\n  \"name\": \"Rachaad White\",\n  \"position\": \"RB\",\n  \"team\": \"TB\",\n  \"bye\": 9,\n  \"adp\": 139.5\n}, {\n  \"name\": \"Bryce Young\",\n  \"position\": \"QB\",\n  \"team\": \"CAR\",\n  \"bye\": 14,\n  \"adp\": 147.5\n}, {\n  \"name\": \"Cam Ward\",\n  \"position\": \"QB\",\n  \"team\": \"TEN\",\n  \"bye\": 10,\n  \"adp\": 154.4\n}, {\n  \"name\": \"Ray Davis\",\n  \"position\": \"RB\",\n  \"team\": \"BUF\",\n  \"bye\": 7,\n  \"adp\": 145.1\n}, {\n  \"name\": \"Kyle Pitts\",\n  \"position\": \"TE\",\n  \"team\": \"ATL\",\n  \"bye\": 5,\n  \"adp\": 157.8\n}, {\n  \"name\": \"Geno Smith\",\n  \"position\": \"QB\",\n  \"team\": \"LV\",\n  \"bye\": 8,\n  \"adp\": 153.7\n}, {\n  \"name\": \"Romeo Doubs\",\n  \"position\": \"WR\",\n  \"team\": \"GB\",\n  \"bye\": 5,\n  \"adp\": 164.9\n}, {\n  \"name\": \"Brenton Strange\",\n  \"position\": \"TE\",\n  \"team\": \"JAX\",\n  \"bye\": 8,\n  \"adp\": 167.3\n}, {\n  \"name\": \"Jaydon Blue\",\n  \"position\": \"RB\",\n  \"team\": \"DAL\",\n  \"bye\": 10,\n  \"adp\": 141\n}, {\n  \"name\": \"Marvin Mims Jr.\",\n  \"position\": \"WR\",\n  \"team\": \"DEN\",\n  \"bye\": 12,\n  \"adp\": 128.1\n}, {\n  \"name\": \"Hollywood Brown\",\n  \"position\": \"WR\",\n  \"team\": \"KC\",\n  \"bye\": 10,\n  \"adp\": 145.8\n}, {\n  \"name\": \"Trey Benson\",\n  \"position\": \"RB\",\n  \"team\": \"ARI\",\n  \"bye\": 8,\n  \"adp\": 150.3\n}, {\n  \"name\": \"Hunter Henry\",\n  \"position\": \"TE\",\n  \"team\": \"NE\",\n  \"bye\": 14,\n  \"adp\": 173.1\n}, {\n  \"name\": \"Wan'Dale Robinson\",\n  \"position\": \"WR\",\n  \"team\": \"NYG\",\n  \"bye\": 14,\n  \"adp\": 163.5\n}, {\n  \"name\": \"Tyler Allgeier\",\n  \"position\": \"RB\",\n  \"team\": \"ATL\",\n  \"bye\": 5,\n  \"adp\": 163.2\n}, {\n  \"name\": \"Tua Tagovailoa\",\n  \"position\": \"QB\",\n  \"team\": \"MIA\",\n  \"bye\": 12,\n  \"adp\": 139.4\n}, {\n  \"name\": \"Aaron Rodgers\",\n  \"position\": \"QB\",\n  \"team\": \"PIT\",\n  \"bye\": 5,\n  \"adp\": 168.6\n}, {\n  \"name\": \"Isaiah Likely\",\n  \"position\": \"TE\",\n  \"team\": \"BAL\",\n  \"bye\": 7,\n  \"adp\": 136.1\n}, {\n  \"name\": \"Austin Ekeler\",\n  \"position\": \"RB\",\n  \"team\": \"WAS\",\n  \"bye\": 12,\n  \"adp\": 152.4\n}, {\n  \"name\": \"Joshua Palmer\",\n  \"position\": \"WR\",\n  \"team\": \"BUF\",\n  \"bye\": 7,\n  \"adp\": 177.7\n}, {\n  \"name\": \"Pat Freiermuth\",\n  \"position\": \"TE\",\n  \"team\": \"PIT\",\n  \"bye\": 5,\n  \"adp\": 161.5\n}, {\n  \"name\": \"Pat Bryant\",\n  \"position\": \"WR\",\n  \"team\": \"DEN\",\n  \"bye\": 12,\n  \"adp\": 181.8\n}, {\n  \"name\": \"Zach Ertz\",\n  \"position\": \"TE\",\n  \"team\": \"WAS\",\n  \"bye\": 12,\n  \"adp\": 154.5\n}, {\n  \"name\": \"Demario Douglas\",\n  \"position\": \"WR\",\n  \"team\": \"NE\",\n  \"bye\": 14,\n  \"adp\": 182.5\n}, {\n  \"name\": \"Roschon Johnson\",\n  \"position\": \"RB\",\n  \"team\": \"CHI\",\n  \"bye\": 5,\n  \"adp\": 174.1\n}, {\n  \"name\": \"Cade Otton\",\n  \"position\": \"TE\",\n  \"team\": \"TB\",\n  \"bye\": 9,\n  \"adp\": 179\n}, {\n  \"name\": \"Adam Thielen\",\n  \"position\": \"WR\",\n  \"team\": \"CAR\",\n  \"bye\": 14,\n  \"adp\": 143.2\n}, {\n  \"name\": \"Jaylin Noel\",\n  \"position\": \"WR\",\n  \"team\": \"HOU\",\n  \"bye\": 6,\n  \"adp\": 190\n}, {\n  \"name\": \"Mike Gesicki\",\n  \"position\": \"TE\",\n  \"team\": \"CIN\",\n  \"bye\": 10,\n  \"adp\": 170.1\n}, {\n  \"name\": \"Isaac Guerendo\",\n  \"position\": \"RB\",\n  \"team\": \"SF\",\n  \"bye\": 14,\n  \"adp\": 148.4\n}, {\n  \"name\": \"Jalen McMillan\",\n  \"position\": \"WR\",\n  \"team\": \"TB\",\n  \"bye\": 9,\n  \"adp\": 157.4\n}, {\n  \"name\": \"Rico Dowdle\",\n  \"position\": \"RB\",\n  \"team\": \"CAR\",\n  \"bye\": 14,\n  \"adp\": 170\n}, {\n  \"name\": \"Xavier Legette\",\n  \"position\": \"WR\",\n  \"team\": \"CAR\",\n  \"bye\": 14,\n  \"adp\": 158.6\n}, {\n  \"name\": \"Dylan Sampson\",\n  \"position\": \"RB\",\n  \"team\": \"CLE\",\n  \"bye\": 9,\n  \"adp\": 196.3\n}, {\n  \"name\": \"Cedric Tillman\",\n  \"position\": \"WR\",\n  \"team\": \"CLE\",\n  \"bye\": 9,\n  \"adp\": 165.9\n}, {\n  \"name\": \"Jaylen Wright\",\n  \"position\": \"RB\",\n  \"team\": \"MIA\",\n  \"bye\": 12,\n  \"adp\": 170.6\n}, {\n  \"name\": \"Braelon Allen\",\n  \"position\": \"RB\",\n  \"team\": \"NYJ\",\n  \"bye\": 9,\n  \"adp\": 176.5\n}, {\n  \"name\": \"Will Shipley\",\n  \"position\": \"RB\",\n  \"team\": \"PHI\",\n  \"bye\": 9,\n  \"adp\": 188.3\n}, {\n  \"name\": \"Miles Sanders\",\n  \"position\": \"RB\",\n  \"team\": \"DAL\",\n  \"bye\": 10,\n  \"adp\": 198.1\n}, {\n  \"name\": \"DeAndre Hopkins\",\n  \"position\": \"WR\",\n  \"team\": \"BAL\",\n  \"bye\": 7,\n  \"adp\": 176.3\n}, {\n  \"name\": \"Michael Wilson\",\n  \"position\": \"WR\",\n  \"team\": \"ARI\",\n  \"bye\": 8,\n  \"adp\": 190.4\n}, {\n  \"name\": \"Tank Bigsby\",\n  \"position\": \"RB\",\n  \"team\": \"JAX\",\n  \"bye\": 8,\n  \"adp\": 160.2\n}, {\n  \"name\": \"Sam Darnold\",\n  \"position\": \"QB\",\n  \"team\": \"SEA\",\n  \"bye\": 8,\n  \"adp\": 163.7\n}, {\n  \"name\": \"MarShawn Lloyd\",\n  \"position\": \"RB\",\n  \"team\": \"GB\",\n  \"bye\": 5,\n  \"adp\": 196.4\n}, {\n  \"name\": \"Alec Pierce\",\n  \"position\": \"WR\",\n  \"team\": \"IND\",\n  \"bye\": 11,\n  \"adp\": 174.9\n}, {\n  \"name\": \"Dyami Brown\",\n  \"position\": \"WR\",\n  \"team\": \"JAX\",\n  \"bye\": 8,\n  \"adp\": 204.5\n}, {\n  \"name\": \"Jarquez Hunter\",\n  \"position\": \"RB\",\n  \"team\": \"LAR\",\n  \"bye\": 8,\n  \"adp\": 206.2\n}, {\n  \"name\": \"Darius Slayton\",\n  \"position\": \"WR\",\n  \"team\": \"NYG\",\n  \"bye\": 14,\n  \"adp\": 206.2\n}, {\n  \"name\": \"DJ Giddens\",\n  \"position\": \"RB\",\n  \"team\": \"IND\",\n  \"bye\": 11,\n  \"adp\": 207\n}, {\n  \"name\": \"Mason Taylor\",\n  \"position\": \"TE\",\n  \"team\": \"NYJ\",\n  \"bye\": 9,\n  \"adp\": 184\n}, {\n  \"name\": \"Chig Okonkwo\",\n  \"position\": \"TE\",\n  \"team\": \"TEN\",\n  \"bye\": 10,\n  \"adp\": 186.9\n}, {\n  \"name\": \"Dalton Schultz\",\n  \"position\": \"TE\",\n  \"team\": \"HOU\",\n  \"bye\": 6,\n  \"adp\": 196.4\n}, {\n  \"name\": \"Daniel Jones\",\n  \"position\": \"QB\",\n  \"team\": \"IND\",\n  \"bye\": 11,\n  \"adp\": 185.5\n}, {\n  \"name\": \"Elic Ayomanor\",\n  \"position\": \"WR\",\n  \"team\": \"TEN\",\n  \"bye\": 10,\n  \"adp\": 210\n}, {\n  \"name\": \"Nick Chubb\",\n  \"position\": \"RB\",\n  \"team\": \"HOU\",\n  \"bye\": 6,\n  \"adp\": 172.3\n}, {\n  \"name\": \"Brashard Smith\",\n  \"position\": \"RB\",\n  \"team\": \"KC\",\n  \"bye\": 10,\n  \"adp\": 217.4\n}, {\n  \"name\": \"Jalen Coker\",\n  \"position\": \"WR\",\n  \"team\": \"CAR\",\n  \"bye\": 14,\n  \"adp\": 216.8\n}, {\n  \"name\": \"Kareem Hunt\",\n  \"position\": \"RB\",\n  \"team\": \"KC\",\n  \"bye\": 10,\n  \"adp\": 182.7\n}, {\n  \"name\": \"Ja'Tavion Sanders\",\n  \"position\": \"TE\",\n  \"team\": \"CAR\",\n  \"bye\": 14,\n  \"adp\": 217.3\n}, {\n  \"name\": \"Jalen Milroe\",\n  \"position\": \"QB\",\n  \"team\": \"SEA\",\n  \"bye\": 8,\n  \"adp\": 226.2\n}, {\n  \"name\": \"Tahj Brooks\",\n  \"position\": \"RB\",\n  \"team\": \"CIN\",\n  \"bye\": 10,\n  \"adp\": 224.1\n}, {\n  \"name\": \"Adonai Mitchell\",\n  \"position\": \"WR\",\n  \"team\": \"IND\",\n  \"bye\": 11,\n  \"adp\": 227.2\n}, {\n  \"name\": \"Troy Franklin\",\n  \"position\": \"WR\",\n  \"team\": \"DEN\",\n  \"bye\": 12,\n  \"adp\": 229.1\n}, {\n  \"name\": \"Blake Corum\",\n  \"position\": \"RB\",\n  \"team\": \"LAR\",\n  \"bye\": 8,\n  \"adp\": 213.1\n}, {\n  \"name\": \"Harold Fannin Jr.\",\n  \"position\": \"TE\",\n  \"team\": \"CLE\",\n  \"bye\": 9,\n  \"adp\": 228.6\n}, {\n  \"name\": \"Tyler Shough\",\n  \"position\": \"QB\",\n  \"team\": \"NO\",\n  \"bye\": 11,\n  \"adp\": 199.8\n}, {\n  \"name\": \"Justice Hill\",\n  \"position\": \"RB\",\n  \"team\": \"BAL\",\n  \"bye\": 7,\n  \"adp\": 185.1\n}, {\n  \"name\": \"Theo Johnson\",\n  \"position\": \"TE\",\n  \"team\": \"NYG\",\n  \"bye\": 14,\n  \"adp\": 212.3\n}, {\n  \"name\": \"Savion Williams\",\n  \"position\": \"WR\",\n  \"team\": \"GB\",\n  \"bye\": 5,\n  \"adp\": 229.3\n}, {\n  \"name\": \"Arian Smith\",\n  \"position\": \"WR\",\n  \"team\": \"NYJ\",\n  \"bye\": 9,\n  \"adp\": 229.7\n}, {\n  \"name\": \"Dont'e Thornton Jr.\",\n  \"position\": \"WR\",\n  \"team\": \"LV\",\n  \"bye\": 8,\n  \"adp\": 199.1\n}, {\n  \"name\": \"Dontayvion Wicks\",\n  \"position\": \"WR\",\n  \"team\": \"GB\",\n  \"bye\": 5,\n  \"adp\": 219.1\n}, {\n  \"name\": \"Jaxson Dart\",\n  \"position\": \"QB\",\n  \"team\": \"NYG\",\n  \"bye\": 14,\n  \"adp\": 209.2\n}, {\n  \"name\": \"Devaughn Vele\",\n  \"position\": \"WR\",\n  \"team\": \"DEN\",\n  \"bye\": 12,\n  \"adp\": 225.5\n}, {\n  \"name\": \"Tyler Lockett\",\n  \"position\": \"WR\",\n  \"team\": \"TEN\",\n  \"bye\": 10,\n  \"adp\": 203.9\n}, {\n  \"name\": \"Raheem Mostert\",\n  \"position\": \"RB\",\n  \"team\": \"LV\",\n  \"bye\": 8,\n  \"adp\": 215.2\n}, {\n  \"name\": \"Calvin Austin III\",\n  \"position\": \"WR\",\n  \"team\": \"PIT\",\n  \"bye\": 5,\n  \"adp\": 193.4\n}, {\n  \"name\": \"Tre Tucker\",\n  \"position\": \"WR\",\n  \"team\": \"LV\",\n  \"bye\": 8,\n  \"adp\": 227.7\n}, {\n  \"name\": \"Jordan James\",\n  \"position\": \"RB\",\n  \"team\": \"SF\",\n  \"bye\": 14,\n  \"adp\": 228.7\n}, {\n  \"name\": \"Tutu Atwell\",\n  \"position\": \"WR\",\n  \"team\": \"LAR\",\n  \"bye\": 8,\n  \"adp\": 222.6\n}, {\n  \"name\": \"Keenan Allen\",\n  \"position\": \"WR\",\n  \"team\": \"FA\",\n  \"bye\": null,\n  \"adp\": 191.4\n}, {\n  \"name\": \"Juwan Johnson\",\n  \"position\": \"TE\",\n  \"team\": \"NO\",\n  \"bye\": 11,\n  \"adp\": 202.6\n}, {\n  \"name\": \"Ollie Gordon II\",\n  \"position\": \"RB\",\n  \"team\": \"MIA\",\n  \"bye\": 12,\n  \"adp\": 228.2\n}, {\n  \"name\": \"Sean Tucker\",\n  \"position\": \"RB\",\n  \"team\": \"TB\",\n  \"bye\": 9,\n  \"adp\": 229.9\n}, {\n  \"name\": \"Isaac TeSlaa\",\n  \"position\": \"WR\",\n  \"team\": \"DET\",\n  \"bye\": 8,\n  \"adp\": 223.7\n}, {\n  \"name\": \"Elijah Moore\",\n  \"position\": \"WR\",\n  \"team\": \"BUF\",\n  \"bye\": 7,\n  \"adp\": 225.1\n}, {\n  \"name\": \"Andrei Iosivas\",\n  \"position\": \"WR\",\n  \"team\": \"CIN\",\n  \"bye\": 10,\n  \"adp\": 198\n}, {\n  \"name\": \"Will Dissly\",\n  \"position\": \"TE\",\n  \"team\": \"LAC\",\n  \"bye\": 12,\n  \"adp\": 230.6\n}, {\n  \"name\": \"Kayshon Boutte\",\n  \"position\": \"WR\",\n  \"team\": \"NE\",\n  \"bye\": 14,\n  \"adp\": 228.2\n}, {\n  \"name\": \"Devin Neal\",\n  \"position\": \"RB\",\n  \"team\": \"NO\",\n  \"bye\": 11,\n  \"adp\": 219.9\n}, {\n  \"name\": \"Noah Fant\",\n  \"position\": \"TE\",\n  \"team\": \"SEA\",\n  \"bye\": 8,\n  \"adp\": 232.2\n}, {\n  \"name\": \"Russell Wilson\",\n  \"position\": \"QB\",\n  \"team\": \"NYG\",\n  \"bye\": 14,\n  \"adp\": 200.6\n}, {\n  \"name\": \"Joe Flacco\",\n  \"position\": \"QB\",\n  \"team\": \"CLE\",\n  \"bye\": 9,\n  \"adp\": 222.4\n}, {\n  \"name\": \"Keaton Mitchell\",\n  \"position\": \"RB\",\n  \"team\": \"BAL\",\n  \"bye\": 7,\n  \"adp\": 211\n}, {\n  \"name\": \"Jerome Ford\",\n  \"position\": \"RB\",\n  \"team\": \"CLE\",\n  \"bye\": 9,\n  \"adp\": 203.3\n}, {\n  \"name\": \"Tyler Higbee\",\n  \"position\": \"TE\",\n  \"team\": \"LAR\",\n  \"bye\": 8,\n  \"adp\": 221.8\n}, {\n  \"name\": \"Trevor Etienne\",\n  \"position\": \"RB\",\n  \"team\": \"CAR\",\n  \"bye\": 14,\n  \"adp\": 227.4\n}, {\n  \"name\": \"Isaiah Davis\",\n  \"position\": \"RB\",\n  \"team\": \"NYJ\",\n  \"bye\": 9,\n  \"adp\": 228.2\n}, {\n  \"name\": \"Jalen Royals\",\n  \"position\": \"WR\",\n  \"team\": \"KC\",\n  \"bye\": 10,\n  \"adp\": 223.2\n}];\n\n// Utility function to group picks by position\nvar groupPicksByPosition = function groupPicksByPosition(picks, playerPool) {\n  var grouped = {\n    QB: [],\n    RB: [],\n    WR: [],\n    TE: [],\n    FLEX: []\n  };\n  picks.forEach(function (pick) {\n    var playerData = playerPool.find(function (p) {\n      return p.name === pick;\n    });\n    if (playerData && grouped[playerData.position]) {\n      var playerInfo = {\n        name: pick,\n        position: playerData.position,\n        team: playerData.team,\n        bye: playerData.bye,\n        adp: playerData.adp\n      };\n\n      // Add to position-specific group\n      grouped[playerData.position].push(playerInfo);\n\n      // Add RB, WR, and TE players to FLEX group\n      if (['RB', 'WR', 'TE'].includes(playerData.position)) {\n        grouped.FLEX.push(playerInfo);\n      }\n    }\n  });\n\n  // Sort each position by ADP\n  Object.keys(grouped).forEach(function (pos) {\n    grouped[pos].sort(function (a, b) {\n      return (a.adp || 999) - (b.adp || 999);\n    });\n  });\n  return grouped;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUNJLFFBQVEsQ0FBQyxFQUFFO1FBQ3BEWixPQUFPLENBQUNLLElBQUksQ0FBQ1ksSUFBSSxDQUFDSixVQUFVLENBQUM7TUFDL0I7SUFDRjtFQUNGLENBQUMsQ0FBQzs7RUFFRjtFQUNBTSxNQUFNLENBQUNDLElBQUksQ0FBQ3BCLE9BQU8sQ0FBQyxDQUFDTSxPQUFPLENBQUMsVUFBQWUsR0FBRyxFQUFJO0lBQ2xDckIsT0FBTyxDQUFDcUIsR0FBRyxDQUFDLENBQUNDLElBQUksQ0FBQyxVQUFDQyxDQUFDLEVBQUVDLENBQUM7TUFBQSxPQUFLLENBQUNELENBQUMsQ0FBQ1AsR0FBRyxJQUFJLEdBQUcsS0FBS1EsQ0FBQyxDQUFDUixHQUFHLElBQUksR0FBRyxDQUFDO0lBQUEsRUFBQztFQUM5RCxDQUFDLENBQUM7RUFFRixPQUFPaEIsT0FBTztBQUNoQixDQUFDIiwic291cmNlcyI6WyIvVXNlcnMvdGVkZHkvYmVzdGJhbGwtc2l0ZS9saWIvcGxheWVyUG9vbC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgUExBWUVSX1BPT0wgPSBbXG4gIHtcbiAgICBcIm5hbWVcIjogXCJKYSdNYXJyIENoYXNlXCIsXG4gICAgXCJwb3NpdGlvblwiOiBcIldSXCIsXG4gICAgXCJ0ZWFtXCI6IFwiQ0lOXCIsXG4gICAgXCJieWVcIjogMTAsXG4gICAgXCJhZHBcIjogMS4xXG4gIH0sXG4gIHtcbiAgICBcIm5hbWVcIjogXCJKdXN0aW4gSmVmZmVyc29uXCIsXG4gICAgXCJwb3NpdGlvblwiOiBcIldSXCIsXG4gICAgXCJ0ZWFtXCI6IFwiTUlOXCIsXG4gICAgXCJieWVcIjogNixcbiAgICBcImFkcFwiOiAzLjFcbiAgfSxcbiAge1xuICAgIFwibmFtZVwiOiBcIlNhcXVvbiBCYXJrbGV5XCIsXG4gICAgXCJwb3NpdGlvblwiOiBcIlJCXCIsXG4gICAgXCJ0ZWFtXCI6IFwiUEhJXCIsXG4gICAgXCJieWVcIjogOSxcbiAgICBcImFkcFwiOiAyLjhcbiAgfSxcbiAge1xuICAgIFwibmFtZVwiOiBcIkNlZURlZSBMYW1iXCIsXG4gICAgXCJwb3NpdGlvblwiOiBcIldSXCIsXG4gICAgXCJ0ZWFtXCI6IFwiREFMXCIsXG4gICAgXCJieWVcIjogMTAsXG4gICAgXCJhZHBcIjogNS42XG4gIH0sXG4gIHtcbiAgICBcIm5hbWVcIjogXCJCaWphbiBSb2JpbnNvblwiLFxuICAgIFwicG9zaXRpb25cIjogXCJSQlwiLFxuICAgIFwidGVhbVwiOiBcIkFUTFwiLFxuICAgIFwiYnllXCI6IDUsXG4gICAgXCJhZHBcIjogMy43XG4gIH0sXG4gIHtcbiAgICBcIm5hbWVcIjogXCJKYWhteXIgR2liYnNcIixcbiAgICBcInBvc2l0aW9uXCI6IFwiUkJcIixcbiAgICBcInRlYW1cIjogXCJERVRcIixcbiAgICBcImJ5ZVwiOiA4LFxuICAgIFwiYWRwXCI6IDUuNFxuICB9LFxuICB7XG4gICAgXCJuYW1lXCI6IFwiUHVrYSBOYWN1YVwiLFxuICAgIFwicG9zaXRpb25cIjogXCJXUlwiLFxuICAgIFwidGVhbVwiOiBcIkxBUlwiLFxuICAgIFwiYnllXCI6IDgsXG4gICAgXCJhZHBcIjogNy44XG4gIH0sXG4gIHtcbiAgICBcIm5hbWVcIjogXCJNYWxpayBOYWJlcnNcIixcbiAgICBcInBvc2l0aW9uXCI6IFwiV1JcIixcbiAgICBcInRlYW1cIjogXCJOWUdcIixcbiAgICBcImJ5ZVwiOiAxNCxcbiAgICBcImFkcFwiOiAxMC4yXG4gIH0sXG4gIHtcbiAgICBcIm5hbWVcIjogXCJDaHJpc3RpYW4gTWNDYWZmcmV5XCIsXG4gICAgXCJwb3NpdGlvblwiOiBcIlJCXCIsXG4gICAgXCJ0ZWFtXCI6IFwiU0ZcIixcbiAgICBcImJ5ZVwiOiAxNCxcbiAgICBcImFkcFwiOiA4LjJcbiAgfSxcbiAge1xuICAgIFwibmFtZVwiOiBcIkFzaHRvbiBKZWFudHlcIixcbiAgICBcInBvc2l0aW9uXCI6IFwiUkJcIixcbiAgICBcInRlYW1cIjogXCJMVlwiLFxuICAgIFwiYnllXCI6IDgsXG4gICAgXCJhZHBcIjogMTAuNVxuICB9LFxuICB7XG4gICAgXCJuYW1lXCI6IFwiQW1vbi1SYSBTdC4gQnJvd25cIixcbiAgICBcInBvc2l0aW9uXCI6IFwiV1JcIixcbiAgICBcInRlYW1cIjogXCJERVRcIixcbiAgICBcImJ5ZVwiOiA4LFxuICAgIFwiYWRwXCI6IDEwLjhcbiAgfSxcbiAge1xuICAgIFwibmFtZVwiOiBcIk5pY28gQ29sbGluc1wiLFxuICAgIFwicG9zaXRpb25cIjogXCJXUlwiLFxuICAgIFwidGVhbVwiOiBcIkhPVVwiLFxuICAgIFwiYnllXCI6IDYsXG4gICAgXCJhZHBcIjogMTJcbiAgfSxcbiAge1xuICAgIFwibmFtZVwiOiBcIkJyaWFuIFRob21hcyBKci5cIixcbiAgICBcInBvc2l0aW9uXCI6IFwiV1JcIixcbiAgICBcInRlYW1cIjogXCJKQVhcIixcbiAgICBcImJ5ZVwiOiA4LFxuICAgIFwiYWRwXCI6IDEzLjlcbiAgfSxcbiAge1xuICAgIFwibmFtZVwiOiBcIkJyb2NrIEJvd2Vyc1wiLFxuICAgIFwicG9zaXRpb25cIjogXCJURVwiLFxuICAgIFwidGVhbVwiOiBcIkxWXCIsXG4gICAgXCJieWVcIjogOCxcbiAgICBcImFkcFwiOiAxNi44XG4gIH0sXG4gIHtcbiAgICBcIm5hbWVcIjogXCJEcmFrZSBMb25kb25cIixcbiAgICBcInBvc2l0aW9uXCI6IFwiV1JcIixcbiAgICBcInRlYW1cIjogXCJBVExcIixcbiAgICBcImJ5ZVwiOiA1LFxuICAgIFwiYWRwXCI6IDE1LjdcbiAgfSxcbiAge1xuICAgIFwibmFtZVwiOiBcIkxhZGQgTWNDb25rZXlcIixcbiAgICBcInBvc2l0aW9uXCI6IFwiV1JcIixcbiAgICBcInRlYW1cIjogXCJMQUNcIixcbiAgICBcImJ5ZVwiOiAxMixcbiAgICBcImFkcFwiOiAxNy41XG4gIH0sXG4gIHtcbiAgICBcIm5hbWVcIjogXCJEZSdWb24gQWNoYW5lXCIsXG4gICAgXCJwb3NpdGlvblwiOiBcIlJCXCIsXG4gICAgXCJ0ZWFtXCI6IFwiTUlBXCIsXG4gICAgXCJieWVcIjogMTIsXG4gICAgXCJhZHBcIjogMTcuN1xuICB9LFxuICB7XG4gICAgXCJuYW1lXCI6IFwiRGVycmljayBIZW5yeVwiLFxuICAgIFwicG9zaXRpb25cIjogXCJSQlwiLFxuICAgIFwidGVhbVwiOiBcIkJBTFwiLFxuICAgIFwiYnllXCI6IDcsXG4gICAgXCJhZHBcIjogMTIuNVxuICB9LFxuICB7XG4gICAgXCJuYW1lXCI6IFwiQS5KLiBCcm93blwiLFxuICAgIFwicG9zaXRpb25cIjogXCJXUlwiLFxuICAgIFwidGVhbVwiOiBcIlBISVwiLFxuICAgIFwiYnllXCI6IDksXG4gICAgXCJhZHBcIjogMTkuNFxuICB9LFxuICB7XG4gICAgXCJuYW1lXCI6IFwiQnVja3kgSXJ2aW5nXCIsXG4gICAgXCJwb3NpdGlvblwiOiBcIlJCXCIsXG4gICAgXCJ0ZWFtXCI6IFwiVEJcIixcbiAgICBcImJ5ZVwiOiA5LFxuICAgIFwiYWRwXCI6IDIyLjRcbiAgfSxcbiAge1xuICAgIFwibmFtZVwiOiBcIlJhc2hlZSBSaWNlXCIsXG4gICAgXCJwb3NpdGlvblwiOiBcIldSXCIsXG4gICAgXCJ0ZWFtXCI6IFwiS0NcIixcbiAgICBcImJ5ZVwiOiAxMCxcbiAgICBcImFkcFwiOiAyMi4zXG4gIH0sXG4gIHtcbiAgICBcIm5hbWVcIjogXCJKb25hdGhhbiBUYXlsb3JcIixcbiAgICBcInBvc2l0aW9uXCI6IFwiUkJcIixcbiAgICBcInRlYW1cIjogXCJJTkRcIixcbiAgICBcImJ5ZVwiOiAxMSxcbiAgICBcImFkcFwiOiAxOS45XG4gIH0sXG4gIHtcbiAgICBcIm5hbWVcIjogXCJKb3NoIEphY29ic1wiLFxuICAgIFwicG9zaXRpb25cIjogXCJSQlwiLFxuICAgIFwidGVhbVwiOiBcIkdCXCIsXG4gICAgXCJieWVcIjogNSxcbiAgICBcImFkcFwiOiAyNFxuICB9LFxuICB7XG4gICAgXCJuYW1lXCI6IFwiVHJleSBNY0JyaWRlXCIsXG4gICAgXCJwb3NpdGlvblwiOiBcIlRFXCIsXG4gICAgXCJ0ZWFtXCI6IFwiQVJJXCIsXG4gICAgXCJieWVcIjogOCxcbiAgICBcImFkcFwiOiAyNC42XG4gIH0sXG4gIHtcbiAgICBcIm5hbWVcIjogXCJUZWUgSGlnZ2luc1wiLFxuICAgIFwicG9zaXRpb25cIjogXCJXUlwiLFxuICAgIFwidGVhbVwiOiBcIkNJTlwiLFxuICAgIFwiYnllXCI6IDEwLFxuICAgIFwiYWRwXCI6IDI1LjRcbiAgfSxcbiAge1xuICAgIFwibmFtZVwiOiBcIkdhcnJldHQgV2lsc29uXCIsXG4gICAgXCJwb3NpdGlvblwiOiBcIldSXCIsXG4gICAgXCJ0ZWFtXCI6IFwiTllKXCIsXG4gICAgXCJieWVcIjogOSxcbiAgICBcImFkcFwiOiAyN1xuICB9LFxuICB7XG4gICAgXCJuYW1lXCI6IFwiQ2hhc2UgQnJvd25cIixcbiAgICBcInBvc2l0aW9uXCI6IFwiUkJcIixcbiAgICBcInRlYW1cIjogXCJDSU5cIixcbiAgICBcImJ5ZVwiOiAxMCxcbiAgICBcImFkcFwiOiAyOC4zXG4gIH0sXG4gIHtcbiAgICBcIm5hbWVcIjogXCJNYXJ2aW4gSGFycmlzb24gSnIuXCIsXG4gICAgXCJwb3NpdGlvblwiOiBcIldSXCIsXG4gICAgXCJ0ZWFtXCI6IFwiQVJJXCIsXG4gICAgXCJieWVcIjogOCxcbiAgICBcImFkcFwiOiAyOS44XG4gIH0sXG4gIHtcbiAgICBcIm5hbWVcIjogXCJUeXJlZWsgSGlsbFwiLFxuICAgIFwicG9zaXRpb25cIjogXCJXUlwiLFxuICAgIFwidGVhbVwiOiBcIk1JQVwiLFxuICAgIFwiYnllXCI6IDEyLFxuICAgIFwiYWRwXCI6IDMzLjNcbiAgfSxcbiAge1xuICAgIFwibmFtZVwiOiBcIkpheG9uIFNtaXRoLU5qaWdiYVwiLFxuICAgIFwicG9zaXRpb25cIjogXCJXUlwiLFxuICAgIFwidGVhbVwiOiBcIlNFQVwiLFxuICAgIFwiYnllXCI6IDgsXG4gICAgXCJhZHBcIjogMzIuM1xuICB9LFxuICB7XG4gICAgXCJuYW1lXCI6IFwiQnJlZWNlIEhhbGxcIixcbiAgICBcInBvc2l0aW9uXCI6IFwiUkJcIixcbiAgICBcInRlYW1cIjogXCJOWUpcIixcbiAgICBcImJ5ZVwiOiA5LFxuICAgIFwiYWRwXCI6IDM1LjhcbiAgfSxcbiAge1xuICAgIFwibmFtZVwiOiBcIlRlcnJ5IE1jTGF1cmluXCIsXG4gICAgXCJwb3NpdGlvblwiOiBcIldSXCIsXG4gICAgXCJ0ZWFtXCI6IFwiV0FTXCIsXG4gICAgXCJieWVcIjogMTIsXG4gICAgXCJhZHBcIjogMzEuOFxuICB9LFxuICB7XG4gICAgXCJuYW1lXCI6IFwiRGF2YW50ZSBBZGFtc1wiLFxuICAgIFwicG9zaXRpb25cIjogXCJXUlwiLFxuICAgIFwidGVhbVwiOiBcIkxBUlwiLFxuICAgIFwiYnllXCI6IDgsXG4gICAgXCJhZHBcIjogMzIuOFxuICB9LFxuICB7XG4gICAgXCJuYW1lXCI6IFwiS3lyZW4gV2lsbGlhbXNcIixcbiAgICBcInBvc2l0aW9uXCI6IFwiUkJcIixcbiAgICBcInRlYW1cIjogXCJMQVJcIixcbiAgICBcImJ5ZVwiOiA4LFxuICAgIFwiYWRwXCI6IDMyLjdcbiAgfSxcbiAge1xuICAgIFwibmFtZVwiOiBcIlRldGFpcm9hIE1jbWlsbGFuXCIsXG4gICAgXCJwb3NpdGlvblwiOiBcIldSXCIsXG4gICAgXCJ0ZWFtXCI6IFwiQ0FSXCIsXG4gICAgXCJieWVcIjogMTQsXG4gICAgXCJhZHBcIjogNDcuMVxuICB9LFxuICB7XG4gICAgXCJuYW1lXCI6IFwiTWlrZSBFdmFuc1wiLFxuICAgIFwicG9zaXRpb25cIjogXCJXUlwiLFxuICAgIFwidGVhbVwiOiBcIlRCXCIsXG4gICAgXCJieWVcIjogOSxcbiAgICBcImFkcFwiOiAzN1xuICB9LFxuICB7XG4gICAgXCJuYW1lXCI6IFwiSm9zaCBBbGxlblwiLFxuICAgIFwicG9zaXRpb25cIjogXCJRQlwiLFxuICAgIFwidGVhbVwiOiBcIkJVRlwiLFxuICAgIFwiYnllXCI6IDcsXG4gICAgXCJhZHBcIjogMjguMVxuICB9LFxuICB7XG4gICAgXCJuYW1lXCI6IFwiTGFtYXIgSmFja3NvblwiLFxuICAgIFwicG9zaXRpb25cIjogXCJRQlwiLFxuICAgIFwidGVhbVwiOiBcIkJBTFwiLFxuICAgIFwiYnllXCI6IDcsXG4gICAgXCJhZHBcIjogMjkuOFxuICB9LFxuICB7XG4gICAgXCJuYW1lXCI6IFwiSmF5ZGVuIERhbmllbHNcIixcbiAgICBcInBvc2l0aW9uXCI6IFwiUUJcIixcbiAgICBcInRlYW1cIjogXCJXQVNcIixcbiAgICBcImJ5ZVwiOiAxMixcbiAgICBcImFkcFwiOiAzOC40XG4gIH0sXG4gIHtcbiAgICBcIm5hbWVcIjogXCJKYWxlbiBIdXJ0c1wiLFxuICAgIFwicG9zaXRpb25cIjogXCJRQlwiLFxuICAgIFwidGVhbVwiOiBcIlBISVwiLFxuICAgIFwiYnllXCI6IDksXG4gICAgXCJhZHBcIjogNDYuNVxuICB9LFxuICB7XG4gICAgXCJuYW1lXCI6IFwiREogTW9vcmVcIixcbiAgICBcInBvc2l0aW9uXCI6IFwiV1JcIixcbiAgICBcInRlYW1cIjogXCJDSElcIixcbiAgICBcImJ5ZVwiOiA1LFxuICAgIFwiYWRwXCI6IDQxLjFcbiAgfSxcbiAge1xuICAgIFwibmFtZVwiOiBcIk9tYXJpb24gSGFtcHRvblwiLFxuICAgIFwicG9zaXRpb25cIjogXCJSQlwiLFxuICAgIFwidGVhbVwiOiBcIkxBQ1wiLFxuICAgIFwiYnllXCI6IDEyLFxuICAgIFwiYWRwXCI6IDQ4LjFcbiAgfSxcbiAge1xuICAgIFwibmFtZVwiOiBcIkdlb3JnZSBLaXR0bGVcIixcbiAgICBcInBvc2l0aW9uXCI6IFwiVEVcIixcbiAgICBcInRlYW1cIjogXCJTRlwiLFxuICAgIFwiYnllXCI6IDE0LFxuICAgIFwiYWRwXCI6IDQwLjlcbiAgfSxcbiAge1xuICAgIFwibmFtZVwiOiBcIlhhdmllciBXb3J0aHlcIixcbiAgICBcInBvc2l0aW9uXCI6IFwiV1JcIixcbiAgICBcInRlYW1cIjogXCJLQ1wiLFxuICAgIFwiYnllXCI6IDEwLFxuICAgIFwiYWRwXCI6IDQ0LjlcbiAgfSxcbiAge1xuICAgIFwibmFtZVwiOiBcIkRlVm9udGEgU21pdGhcIixcbiAgICBcInBvc2l0aW9uXCI6IFwiV1JcIixcbiAgICBcInRlYW1cIjogXCJQSElcIixcbiAgICBcImJ5ZVwiOiA5LFxuICAgIFwiYWRwXCI6IDUwLjRcbiAgfSxcbiAge1xuICAgIFwibmFtZVwiOiBcIkNvdXJ0bGFuZCBTdXR0b25cIixcbiAgICBcInBvc2l0aW9uXCI6IFwiV1JcIixcbiAgICBcInRlYW1cIjogXCJERU5cIixcbiAgICBcImJ5ZVwiOiAxMixcbiAgICBcImFkcFwiOiA0OC44XG4gIH0sXG4gIHtcbiAgICBcIm5hbWVcIjogXCJKYW1lcyBDb29rXCIsXG4gICAgXCJwb3NpdGlvblwiOiBcIlJCXCIsXG4gICAgXCJ0ZWFtXCI6IFwiQlVGXCIsXG4gICAgXCJieWVcIjogNyxcbiAgICBcImFkcFwiOiAzOS4yXG4gIH0sXG4gIHtcbiAgICBcIm5hbWVcIjogXCJaYXkgRmxvd2Vyc1wiLFxuICAgIFwicG9zaXRpb25cIjogXCJXUlwiLFxuICAgIFwidGVhbVwiOiBcIkJBTFwiLFxuICAgIFwiYnllXCI6IDcsXG4gICAgXCJhZHBcIjogNTNcbiAgfSxcbiAge1xuICAgIFwibmFtZVwiOiBcIkdlb3JnZSBQaWNrZW5zXCIsXG4gICAgXCJwb3NpdGlvblwiOiBcIldSXCIsXG4gICAgXCJ0ZWFtXCI6IFwiREFMXCIsXG4gICAgXCJieWVcIjogMTAsXG4gICAgXCJhZHBcIjogNTMuMlxuICB9LFxuICB7XG4gICAgXCJuYW1lXCI6IFwiVHJhdmlzIEh1bnRlclwiLFxuICAgIFwicG9zaXRpb25cIjogXCJXUlwiLFxuICAgIFwidGVhbVwiOiBcIkpBWFwiLFxuICAgIFwiYnllXCI6IDgsXG4gICAgXCJhZHBcIjogNTUuNFxuICB9LFxuICB7XG4gICAgXCJuYW1lXCI6IFwiREsgTWV0Y2FsZlwiLFxuICAgIFwicG9zaXRpb25cIjogXCJXUlwiLFxuICAgIFwidGVhbVwiOiBcIlBJVFwiLFxuICAgIFwiYnllXCI6IDUsXG4gICAgXCJhZHBcIjogNDIuM1xuICB9LFxuICB7XG4gICAgXCJuYW1lXCI6IFwiQ2h1YmEgSHViYmFyZFwiLFxuICAgIFwicG9zaXRpb25cIjogXCJSQlwiLFxuICAgIFwidGVhbVwiOiBcIkNBUlwiLFxuICAgIFwiYnllXCI6IDE0LFxuICAgIFwiYWRwXCI6IDUxLjNcbiAgfSxcbiAge1xuICAgIFwibmFtZVwiOiBcIkphbWVzb24gV2lsbGlhbXNcIixcbiAgICBcInBvc2l0aW9uXCI6IFwiV1JcIixcbiAgICBcInRlYW1cIjogXCJERVRcIixcbiAgICBcImJ5ZVwiOiA4LFxuICAgIFwiYWRwXCI6IDQ1LjFcbiAgfSxcbiAge1xuICAgIFwibmFtZVwiOiBcIkNhbHZpbiBSaWRsZXlcIixcbiAgICBcInBvc2l0aW9uXCI6IFwiV1JcIixcbiAgICBcInRlYW1cIjogXCJURU5cIixcbiAgICBcImJ5ZVwiOiAxMCxcbiAgICBcImFkcFwiOiA1OS4xXG4gIH0sXG4gIHtcbiAgICBcIm5hbWVcIjogXCJLZW5uZXRoIFdhbGtlciBJSUlcIixcbiAgICBcInBvc2l0aW9uXCI6IFwiUkJcIixcbiAgICBcInRlYW1cIjogXCJTRUFcIixcbiAgICBcImJ5ZVwiOiA4LFxuICAgIFwiYWRwXCI6IDU1LjZcbiAgfSxcbiAge1xuICAgIFwibmFtZVwiOiBcIkpvZSBCdXJyb3dcIixcbiAgICBcInBvc2l0aW9uXCI6IFwiUUJcIixcbiAgICBcInRlYW1cIjogXCJDSU5cIixcbiAgICBcImJ5ZVwiOiAxMCxcbiAgICBcImFkcFwiOiA0Ni4zXG4gIH0sXG4gIHtcbiAgICBcIm5hbWVcIjogXCJKb2UgTWl4b25cIixcbiAgICBcInBvc2l0aW9uXCI6IFwiUkJcIixcbiAgICBcInRlYW1cIjogXCJIT1VcIixcbiAgICBcImJ5ZVwiOiA2LFxuICAgIFwiYWRwXCI6IDU3LjJcbiAgfSxcbiAge1xuICAgIFwibmFtZVwiOiBcIlRyZVZleW9uIEhlbmRlcnNvblwiLFxuICAgIFwicG9zaXRpb25cIjogXCJSQlwiLFxuICAgIFwidGVhbVwiOiBcIk5FXCIsXG4gICAgXCJieWVcIjogMTQsXG4gICAgXCJhZHBcIjogNjMuN1xuICB9LFxuICB7XG4gICAgXCJuYW1lXCI6IFwiUkogSGFydmV5XCIsXG4gICAgXCJwb3NpdGlvblwiOiBcIlJCXCIsXG4gICAgXCJ0ZWFtXCI6IFwiREVOXCIsXG4gICAgXCJieWVcIjogMTIsXG4gICAgXCJhZHBcIjogNjQuM1xuICB9LFxuICB7XG4gICAgXCJuYW1lXCI6IFwiQ2hyaXMgR29kd2luXCIsXG4gICAgXCJwb3NpdGlvblwiOiBcIldSXCIsXG4gICAgXCJ0ZWFtXCI6IFwiVEJcIixcbiAgICBcImJ5ZVwiOiA5LFxuICAgIFwiYWRwXCI6IDY1LjFcbiAgfSxcbiAge1xuICAgIFwibmFtZVwiOiBcIkpheWxlbiBXYWRkbGVcIixcbiAgICBcInBvc2l0aW9uXCI6IFwiV1JcIixcbiAgICBcInRlYW1cIjogXCJNSUFcIixcbiAgICBcImJ5ZVwiOiAxMixcbiAgICBcImFkcFwiOiA1OC42XG4gIH0sXG4gIHtcbiAgICBcIm5hbWVcIjogXCJBbHZpbiBLYW1hcmFcIixcbiAgICBcInBvc2l0aW9uXCI6IFwiUkJcIixcbiAgICBcInRlYW1cIjogXCJOT1wiLFxuICAgIFwiYnllXCI6IDExLFxuICAgIFwiYWRwXCI6IDUxLjRcbiAgfSxcbiAge1xuICAgIFwibmFtZVwiOiBcIkphdWFuIEplbm5pbmdzXCIsXG4gICAgXCJwb3NpdGlvblwiOiBcIldSXCIsXG4gICAgXCJ0ZWFtXCI6IFwiU0ZcIixcbiAgICBcImJ5ZVwiOiAxNCxcbiAgICBcImFkcFwiOiA2Ny40XG4gIH0sXG4gIHtcbiAgICBcIm5hbWVcIjogXCJKYW1lcyBDb25uZXJcIixcbiAgICBcInBvc2l0aW9uXCI6IFwiUkJcIixcbiAgICBcInRlYW1cIjogXCJBUklcIixcbiAgICBcImJ5ZVwiOiA4LFxuICAgIFwiYWRwXCI6IDYwLjJcbiAgfSxcbiAge1xuICAgIFwibmFtZVwiOiBcIlJvbWUgT2R1bnplXCIsXG4gICAgXCJwb3NpdGlvblwiOiBcIldSXCIsXG4gICAgXCJ0ZWFtXCI6IFwiQ0hJXCIsXG4gICAgXCJieWVcIjogNSxcbiAgICBcImFkcFwiOiA2OC40XG4gIH0sXG4gIHtcbiAgICBcIm5hbWVcIjogXCJDaHJpcyBPbGF2ZVwiLFxuICAgIFwicG9zaXRpb25cIjogXCJXUlwiLFxuICAgIFwidGVhbVwiOiBcIk5PXCIsXG4gICAgXCJieWVcIjogMTEsXG4gICAgXCJhZHBcIjogNzEuOFxuICB9LFxuICB7XG4gICAgXCJuYW1lXCI6IFwiRGF2aWQgTW9udGdvbWVyeVwiLFxuICAgIFwicG9zaXRpb25cIjogXCJSQlwiLFxuICAgIFwidGVhbVwiOiBcIkRFVFwiLFxuICAgIFwiYnllXCI6IDgsXG4gICAgXCJhZHBcIjogNjkuM1xuICB9LFxuICB7XG4gICAgXCJuYW1lXCI6IFwiSm9yZGFuIEFkZGlzb25cIixcbiAgICBcInBvc2l0aW9uXCI6IFwiV1JcIixcbiAgICBcInRlYW1cIjogXCJNSU5cIixcbiAgICBcImJ5ZVwiOiA2LFxuICAgIFwiYWRwXCI6IDcyLjdcbiAgfSxcbiAge1xuICAgIFwibmFtZVwiOiBcIlF1aW5zaG9uIEp1ZGtpbnNcIixcbiAgICBcInBvc2l0aW9uXCI6IFwiUkJcIixcbiAgICBcInRlYW1cIjogXCJDTEVcIixcbiAgICBcImJ5ZVwiOiA5LFxuICAgIFwiYWRwXCI6IDc1LjVcbiAgfSxcbiAge1xuICAgIFwibmFtZVwiOiBcIlNhbSBMYVBvcnRhXCIsXG4gICAgXCJwb3NpdGlvblwiOiBcIlRFXCIsXG4gICAgXCJ0ZWFtXCI6IFwiREVUXCIsXG4gICAgXCJieWVcIjogOCxcbiAgICBcImFkcFwiOiA2Mi44XG4gIH0sXG4gIHtcbiAgICBcIm5hbWVcIjogXCJKYWtvYmkgTWV5ZXJzXCIsXG4gICAgXCJwb3NpdGlvblwiOiBcIldSXCIsXG4gICAgXCJ0ZWFtXCI6IFwiTFZcIixcbiAgICBcImJ5ZVwiOiA4LFxuICAgIFwiYWRwXCI6IDczLjRcbiAgfSxcbiAge1xuICAgIFwibmFtZVwiOiBcIkQnQW5kcmUgU3dpZnRcIixcbiAgICBcInBvc2l0aW9uXCI6IFwiUkJcIixcbiAgICBcInRlYW1cIjogXCJDSElcIixcbiAgICBcImJ5ZVwiOiA1LFxuICAgIFwiYWRwXCI6IDcxLjhcbiAgfSxcbiAge1xuICAgIFwibmFtZVwiOiBcIkRlZWJvIFNhbXVlbCBTci5cIixcbiAgICBcInBvc2l0aW9uXCI6IFwiV1JcIixcbiAgICBcInRlYW1cIjogXCJXQVNcIixcbiAgICBcImJ5ZVwiOiAxMixcbiAgICBcImFkcFwiOiA2Ni4xXG4gIH0sXG4gIHtcbiAgICBcIm5hbWVcIjogXCJQYXRyaWNrIE1haG9tZXNcIixcbiAgICBcInBvc2l0aW9uXCI6IFwiUUJcIixcbiAgICBcInRlYW1cIjogXCJLQ1wiLFxuICAgIFwiYnllXCI6IDEwLFxuICAgIFwiYWRwXCI6IDcwLjlcbiAgfSxcbiAge1xuICAgIFwibmFtZVwiOiBcIlRvbnkgUG9sbGFyZFwiLFxuICAgIFwicG9zaXRpb25cIjogXCJSQlwiLFxuICAgIFwidGVhbVwiOiBcIlRFTlwiLFxuICAgIFwiYnllXCI6IDEwLFxuICAgIFwiYWRwXCI6IDg1LjdcbiAgfSxcbiAge1xuICAgIFwibmFtZVwiOiBcIkplcnJ5IEpldWR5XCIsXG4gICAgXCJwb3NpdGlvblwiOiBcIldSXCIsXG4gICAgXCJ0ZWFtXCI6IFwiQ0xFXCIsXG4gICAgXCJieWVcIjogOSxcbiAgICBcImFkcFwiOiA2Ny43XG4gIH0sXG4gIHtcbiAgICBcIm5hbWVcIjogXCJTdGVmb24gRGlnZ3NcIixcbiAgICBcInBvc2l0aW9uXCI6IFwiV1JcIixcbiAgICBcInRlYW1cIjogXCJORVwiLFxuICAgIFwiYnllXCI6IDE0LFxuICAgIFwiYWRwXCI6IDgwLjdcbiAgfSxcbiAge1xuICAgIFwibmFtZVwiOiBcIkthbGViIEpvaG5zb25cIixcbiAgICBcInBvc2l0aW9uXCI6IFwiUkJcIixcbiAgICBcInRlYW1cIjogXCJQSVRcIixcbiAgICBcImJ5ZVwiOiA1LFxuICAgIFwiYWRwXCI6IDgwLjFcbiAgfSxcbiAge1xuICAgIFwibmFtZVwiOiBcIktoYWxpbCBTaGFraXJcIixcbiAgICBcInBvc2l0aW9uXCI6IFwiV1JcIixcbiAgICBcInRlYW1cIjogXCJCVUZcIixcbiAgICBcImJ5ZVwiOiA3LFxuICAgIFwiYWRwXCI6IDc2LjVcbiAgfSxcbiAge1xuICAgIFwibmFtZVwiOiBcIk1hdHRoZXcgR29sZGVuXCIsXG4gICAgXCJwb3NpdGlvblwiOiBcIldSXCIsXG4gICAgXCJ0ZWFtXCI6IFwiR0JcIixcbiAgICBcImJ5ZVwiOiA1LFxuICAgIFwiYWRwXCI6IDg3LjhcbiAgfSxcbiAge1xuICAgIFwibmFtZVwiOiBcIkFhcm9uIEpvbmVzXCIsXG4gICAgXCJwb3NpdGlvblwiOiBcIlJCXCIsXG4gICAgXCJ0ZWFtXCI6IFwiTUlOXCIsXG4gICAgXCJieWVcIjogNixcbiAgICBcImFkcFwiOiA3Ny41XG4gIH0sXG4gIHtcbiAgICBcIm5hbWVcIjogXCJKYXlkZW4gUmVlZFwiLFxuICAgIFwicG9zaXRpb25cIjogXCJXUlwiLFxuICAgIFwidGVhbVwiOiBcIkdCXCIsXG4gICAgXCJieWVcIjogNSxcbiAgICBcImFkcFwiOiA4OC44XG4gIH0sXG4gIHtcbiAgICBcIm5hbWVcIjogXCJJc2lhaCBQYWNoZWNvXCIsXG4gICAgXCJwb3NpdGlvblwiOiBcIlJCXCIsXG4gICAgXCJ0ZWFtXCI6IFwiS0NcIixcbiAgICBcImJ5ZVwiOiAxMCxcbiAgICBcImFkcFwiOiA3OS44XG4gIH0sXG4gIHtcbiAgICBcIm5hbWVcIjogXCJKb3NoIERvd25zXCIsXG4gICAgXCJwb3NpdGlvblwiOiBcIldSXCIsXG4gICAgXCJ0ZWFtXCI6IFwiSU5EXCIsXG4gICAgXCJieWVcIjogMTEsXG4gICAgXCJhZHBcIjogODguOFxuICB9LFxuICB7XG4gICAgXCJuYW1lXCI6IFwiUmlja3kgUGVhcnNhbGxcIixcbiAgICBcInBvc2l0aW9uXCI6IFwiV1JcIixcbiAgICBcInRlYW1cIjogXCJTRlwiLFxuICAgIFwiYnllXCI6IDE0LFxuICAgIFwiYWRwXCI6IDgzLjNcbiAgfSxcbiAge1xuICAgIFwibmFtZVwiOiBcIlRyYXZpcyBLZWxjZVwiLFxuICAgIFwicG9zaXRpb25cIjogXCJURVwiLFxuICAgIFwidGVhbVwiOiBcIktDXCIsXG4gICAgXCJieWVcIjogMTAsXG4gICAgXCJhZHBcIjogNzguOVxuICB9LFxuICB7XG4gICAgXCJuYW1lXCI6IFwiS3lsZXIgTXVycmF5XCIsXG4gICAgXCJwb3NpdGlvblwiOiBcIlFCXCIsXG4gICAgXCJ0ZWFtXCI6IFwiQVJJXCIsXG4gICAgXCJieWVcIjogOCxcbiAgICBcImFkcFwiOiA5My40XG4gIH0sXG4gIHtcbiAgICBcIm5hbWVcIjogXCJULkouIEhvY2tlbnNvblwiLFxuICAgIFwicG9zaXRpb25cIjogXCJURVwiLFxuICAgIFwidGVhbVwiOiBcIk1JTlwiLFxuICAgIFwiYnllXCI6IDYsXG4gICAgXCJhZHBcIjogODYuM1xuICB9LFxuICB7XG4gICAgXCJuYW1lXCI6IFwiQmFrZXIgTWF5ZmllbGRcIixcbiAgICBcInBvc2l0aW9uXCI6IFwiUUJcIixcbiAgICBcInRlYW1cIjogXCJUQlwiLFxuICAgIFwiYnllXCI6IDksXG4gICAgXCJhZHBcIjogODEuN1xuICB9LFxuICB7XG4gICAgXCJuYW1lXCI6IFwiRW1la2EgRWdidWthXCIsXG4gICAgXCJwb3NpdGlvblwiOiBcIldSXCIsXG4gICAgXCJ0ZWFtXCI6IFwiVEJcIixcbiAgICBcImJ5ZVwiOiA5LFxuICAgIFwiYWRwXCI6IDk4XG4gIH0sXG4gIHtcbiAgICBcIm5hbWVcIjogXCJDb29wZXIgS3VwcFwiLFxuICAgIFwicG9zaXRpb25cIjogXCJXUlwiLFxuICAgIFwidGVhbVwiOiBcIlNFQVwiLFxuICAgIFwiYnllXCI6IDgsXG4gICAgXCJhZHBcIjogODMuNVxuICB9LFxuICB7XG4gICAgXCJuYW1lXCI6IFwiSnVzdGluIEZpZWxkc1wiLFxuICAgIFwicG9zaXRpb25cIjogXCJRQlwiLFxuICAgIFwidGVhbVwiOiBcIk5ZSlwiLFxuICAgIFwiYnllXCI6IDksXG4gICAgXCJhZHBcIjogOTguM1xuICB9LFxuICB7XG4gICAgXCJuYW1lXCI6IFwiQnJhbmRvbiBBaXl1a1wiLFxuICAgIFwicG9zaXRpb25cIjogXCJXUlwiLFxuICAgIFwidGVhbVwiOiBcIlNGXCIsXG4gICAgXCJieWVcIjogMTQsXG4gICAgXCJhZHBcIjogOTguN1xuICB9LFxuICB7XG4gICAgXCJuYW1lXCI6IFwiQnJpYW4gUm9iaW5zb24gSnIuXCIsXG4gICAgXCJwb3NpdGlvblwiOiBcIlJCXCIsXG4gICAgXCJ0ZWFtXCI6IFwiV0FTXCIsXG4gICAgXCJieWVcIjogMTIsXG4gICAgXCJhZHBcIjogODYuNVxuICB9LFxuICB7XG4gICAgXCJuYW1lXCI6IFwiRGFybmVsbCBNb29uZXlcIixcbiAgICBcInBvc2l0aW9uXCI6IFwiV1JcIixcbiAgICBcInRlYW1cIjogXCJBVExcIixcbiAgICBcImJ5ZVwiOiA1LFxuICAgIFwiYWRwXCI6IDk0LjVcbiAgfSxcbiAge1xuICAgIFwibmFtZVwiOiBcIkNhbGViIFdpbGxpYW1zXCIsXG4gICAgXCJwb3NpdGlvblwiOiBcIlFCXCIsXG4gICAgXCJ0ZWFtXCI6IFwiQ0hJXCIsXG4gICAgXCJieWVcIjogNSxcbiAgICBcImFkcFwiOiAxMDQuMlxuICB9LFxuICB7XG4gICAgXCJuYW1lXCI6IFwiQm8gTml4XCIsXG4gICAgXCJwb3NpdGlvblwiOiBcIlFCXCIsXG4gICAgXCJ0ZWFtXCI6IFwiREVOXCIsXG4gICAgXCJieWVcIjogMTIsXG4gICAgXCJhZHBcIjogOTEuN1xuICB9LFxuICB7XG4gICAgXCJuYW1lXCI6IFwiQnJvY2sgUHVyZHlcIixcbiAgICBcInBvc2l0aW9uXCI6IFwiUUJcIixcbiAgICBcInRlYW1cIjogXCJTRlwiLFxuICAgIFwiYnllXCI6IDE0LFxuICAgIFwiYWRwXCI6IDEwNC40XG4gIH0sXG4gIHtcbiAgICBcIm5hbWVcIjogXCJNaWNoYWVsIFBpdHRtYW4gSnIuXCIsXG4gICAgXCJwb3NpdGlvblwiOiBcIldSXCIsXG4gICAgXCJ0ZWFtXCI6IFwiSU5EXCIsXG4gICAgXCJieWVcIjogMTEsXG4gICAgXCJhZHBcIjogMTA0LjhcbiAgfSxcbiAge1xuICAgIFwibmFtZVwiOiBcIkV2YW4gRW5ncmFtXCIsXG4gICAgXCJwb3NpdGlvblwiOiBcIlRFXCIsXG4gICAgXCJ0ZWFtXCI6IFwiREVOXCIsXG4gICAgXCJieWVcIjogMTIsXG4gICAgXCJhZHBcIjogOTUuNVxuICB9LFxuICB7XG4gICAgXCJuYW1lXCI6IFwiSmF5bGVuIFdhcnJlblwiLFxuICAgIFwicG9zaXRpb25cIjogXCJSQlwiLFxuICAgIFwidGVhbVwiOiBcIlBJVFwiLFxuICAgIFwiYnllXCI6IDUsXG4gICAgXCJhZHBcIjogOTYuM1xuICB9LFxuICB7XG4gICAgXCJuYW1lXCI6IFwiSmF5ZGVuIEhpZ2dpbnNcIixcbiAgICBcInBvc2l0aW9uXCI6IFwiV1JcIixcbiAgICBcInRlYW1cIjogXCJIT1VcIixcbiAgICBcImJ5ZVwiOiA2LFxuICAgIFwiYWRwXCI6IDEwOC40XG4gIH0sXG4gIHtcbiAgICBcIm5hbWVcIjogXCJEYWsgUHJlc2NvdHRcIixcbiAgICBcInBvc2l0aW9uXCI6IFwiUUJcIixcbiAgICBcInRlYW1cIjogXCJEQUxcIixcbiAgICBcImJ5ZVwiOiAxMCxcbiAgICBcImFkcFwiOiAxMDcuOVxuICB9LFxuICB7XG4gICAgXCJuYW1lXCI6IFwiSmFyZWQgR29mZlwiLFxuICAgIFwicG9zaXRpb25cIjogXCJRQlwiLFxuICAgIFwidGVhbVwiOiBcIkRFVFwiLFxuICAgIFwiYnllXCI6IDgsXG4gICAgXCJhZHBcIjogMTAxXG4gIH0sXG4gIHtcbiAgICBcIm5hbWVcIjogXCJKb25udSBTbWl0aFwiLFxuICAgIFwicG9zaXRpb25cIjogXCJURVwiLFxuICAgIFwidGVhbVwiOiBcIk1JQVwiLFxuICAgIFwiYnllXCI6IDEyLFxuICAgIFwiYWRwXCI6IDEwNi42XG4gIH0sXG4gIHtcbiAgICBcIm5hbWVcIjogXCJEcmFrZSBNYXllXCIsXG4gICAgXCJwb3NpdGlvblwiOiBcIlFCXCIsXG4gICAgXCJ0ZWFtXCI6IFwiTkVcIixcbiAgICBcImJ5ZVwiOiAxNCxcbiAgICBcImFkcFwiOiAxMTguNlxuICB9LFxuICB7XG4gICAgXCJuYW1lXCI6IFwiTWFyayBBbmRyZXdzXCIsXG4gICAgXCJwb3NpdGlvblwiOiBcIlRFXCIsXG4gICAgXCJ0ZWFtXCI6IFwiQkFMXCIsXG4gICAgXCJieWVcIjogNyxcbiAgICBcImFkcFwiOiAxMDIuOVxuICB9LFxuICB7XG4gICAgXCJuYW1lXCI6IFwiQ2FtIFNrYXR0ZWJvXCIsXG4gICAgXCJwb3NpdGlvblwiOiBcIlJCXCIsXG4gICAgXCJ0ZWFtXCI6IFwiTllHXCIsXG4gICAgXCJieWVcIjogMTQsXG4gICAgXCJhZHBcIjogMTE0LjFcbiAgfSxcbiAge1xuICAgIFwibmFtZVwiOiBcIlRyZSBIYXJyaXNcIixcbiAgICBcInBvc2l0aW9uXCI6IFwiV1JcIixcbiAgICBcInRlYW1cIjogXCJMQUNcIixcbiAgICBcImJ5ZVwiOiAxMixcbiAgICBcImFkcFwiOiAxMjEuMVxuICB9LFxuICB7XG4gICAgXCJuYW1lXCI6IFwiSnVzdGluIEhlcmJlcnRcIixcbiAgICBcInBvc2l0aW9uXCI6IFwiUUJcIixcbiAgICBcInRlYW1cIjogXCJMQUNcIixcbiAgICBcImJ5ZVwiOiAxMixcbiAgICBcImFkcFwiOiAxMTcuMlxuICB9LFxuICB7XG4gICAgXCJuYW1lXCI6IFwiSm9yZGFuIE1hc29uXCIsXG4gICAgXCJwb3NpdGlvblwiOiBcIlJCXCIsXG4gICAgXCJ0ZWFtXCI6IFwiTUlOXCIsXG4gICAgXCJieWVcIjogNixcbiAgICBcImFkcFwiOiAxMDUuM1xuICB9LFxuICB7XG4gICAgXCJuYW1lXCI6IFwiVHlyb25lIFRyYWN5IEpyLlwiLFxuICAgIFwicG9zaXRpb25cIjogXCJSQlwiLFxuICAgIFwidGVhbVwiOiBcIk5ZR1wiLFxuICAgIFwiYnllXCI6IDE0LFxuICAgIFwiYWRwXCI6IDEwMS4xXG4gIH0sXG4gIHtcbiAgICBcIm5hbWVcIjogXCJUcmV2b3IgTGF3cmVuY2VcIixcbiAgICBcInBvc2l0aW9uXCI6IFwiUUJcIixcbiAgICBcInRlYW1cIjogXCJKQVhcIixcbiAgICBcImJ5ZVwiOiA4LFxuICAgIFwiYWRwXCI6IDEzMi4yXG4gIH0sXG4gIHtcbiAgICBcIm5hbWVcIjogXCJKb3JkYW4gTG92ZVwiLFxuICAgIFwicG9zaXRpb25cIjogXCJRQlwiLFxuICAgIFwidGVhbVwiOiBcIkdCXCIsXG4gICAgXCJieWVcIjogNSxcbiAgICBcImFkcFwiOiAxMjQuM1xuICB9LFxuICB7XG4gICAgXCJuYW1lXCI6IFwiVHJhdmlzIEV0aWVubmUgSnIuXCIsXG4gICAgXCJwb3NpdGlvblwiOiBcIlJCXCIsXG4gICAgXCJ0ZWFtXCI6IFwiSkFYXCIsXG4gICAgXCJieWVcIjogOCxcbiAgICBcImFkcFwiOiAxMDcuMVxuICB9LFxuICB7XG4gICAgXCJuYW1lXCI6IFwiS3lsZSBXaWxsaWFtc1wiLFxuICAgIFwicG9zaXRpb25cIjogXCJXUlwiLFxuICAgIFwidGVhbVwiOiBcIk5FXCIsXG4gICAgXCJieWVcIjogMTQsXG4gICAgXCJhZHBcIjogMTQxLjVcbiAgfSxcbiAge1xuICAgIFwibmFtZVwiOiBcIkMuSi4gU3Ryb3VkXCIsXG4gICAgXCJwb3NpdGlvblwiOiBcIlFCXCIsXG4gICAgXCJ0ZWFtXCI6IFwiSE9VXCIsXG4gICAgXCJieWVcIjogNixcbiAgICBcImFkcFwiOiAxMjYuNlxuICB9LFxuICB7XG4gICAgXCJuYW1lXCI6IFwiVHlsZXIgV2FycmVuXCIsXG4gICAgXCJwb3NpdGlvblwiOiBcIlRFXCIsXG4gICAgXCJ0ZWFtXCI6IFwiSU5EXCIsXG4gICAgXCJieWVcIjogMTEsXG4gICAgXCJhZHBcIjogMTE1XG4gIH0sXG4gIHtcbiAgICBcIm5hbWVcIjogXCJLZW9uIENvbGVtYW5cIixcbiAgICBcInBvc2l0aW9uXCI6IFwiV1JcIixcbiAgICBcInRlYW1cIjogXCJCVUZcIixcbiAgICBcImJ5ZVwiOiA3LFxuICAgIFwiYWRwXCI6IDExMC44XG4gIH0sXG4gIHtcbiAgICBcIm5hbWVcIjogXCJDaHJpc3RpYW4gS2lya1wiLFxuICAgIFwicG9zaXRpb25cIjogXCJXUlwiLFxuICAgIFwidGVhbVwiOiBcIkhPVVwiLFxuICAgIFwiYnllXCI6IDYsXG4gICAgXCJhZHBcIjogMTI5LjdcbiAgfSxcbiAge1xuICAgIFwibmFtZVwiOiBcIkNvbHN0b24gTG92ZWxhbmRcIixcbiAgICBcInBvc2l0aW9uXCI6IFwiVEVcIixcbiAgICBcInRlYW1cIjogXCJDSElcIixcbiAgICBcImJ5ZVwiOiA1LFxuICAgIFwiYWRwXCI6IDEzMVxuICB9LFxuICB7XG4gICAgXCJuYW1lXCI6IFwiQmhheXNodWwgVHV0ZW5cIixcbiAgICBcInBvc2l0aW9uXCI6IFwiUkJcIixcbiAgICBcInRlYW1cIjogXCJKQVhcIixcbiAgICBcImJ5ZVwiOiA4LFxuICAgIFwiYWRwXCI6IDEzNy44XG4gIH0sXG4gIHtcbiAgICBcIm5hbWVcIjogXCJKLkouIE1jQ2FydGh5XCIsXG4gICAgXCJwb3NpdGlvblwiOiBcIlFCXCIsXG4gICAgXCJ0ZWFtXCI6IFwiTUlOXCIsXG4gICAgXCJieWVcIjogNixcbiAgICBcImFkcFwiOiAxMTguOFxuICB9LFxuICB7XG4gICAgXCJuYW1lXCI6IFwiUmFzaG9kIEJhdGVtYW5cIixcbiAgICBcInBvc2l0aW9uXCI6IFwiV1JcIixcbiAgICBcInRlYW1cIjogXCJCQUxcIixcbiAgICBcImJ5ZVwiOiA3LFxuICAgIFwiYWRwXCI6IDExMy4xXG4gIH0sXG4gIHtcbiAgICBcIm5hbWVcIjogXCJMdXRoZXIgQnVyZGVuIElJSVwiLFxuICAgIFwicG9zaXRpb25cIjogXCJXUlwiLFxuICAgIFwidGVhbVwiOiBcIkNISVwiLFxuICAgIFwiYnllXCI6IDUsXG4gICAgXCJhZHBcIjogMTM4LjhcbiAgfSxcbiAge1xuICAgIFwibmFtZVwiOiBcIk5hamVlIEhhcnJpc1wiLFxuICAgIFwicG9zaXRpb25cIjogXCJSQlwiLFxuICAgIFwidGVhbVwiOiBcIkxBQ1wiLFxuICAgIFwiYnllXCI6IDEyLFxuICAgIFwiYWRwXCI6IDEwNi4xXG4gIH0sXG4gIHtcbiAgICBcIm5hbWVcIjogXCJEYWxsYXMgR29lZGVydFwiLFxuICAgIFwicG9zaXRpb25cIjogXCJURVwiLFxuICAgIFwidGVhbVwiOiBcIlBISVwiLFxuICAgIFwiYnllXCI6IDksXG4gICAgXCJhZHBcIjogMTM5XG4gIH0sXG4gIHtcbiAgICBcIm5hbWVcIjogXCJEYXZpZCBOam9rdVwiLFxuICAgIFwicG9zaXRpb25cIjogXCJURVwiLFxuICAgIFwidGVhbVwiOiBcIkNMRVwiLFxuICAgIFwiYnllXCI6IDksXG4gICAgXCJhZHBcIjogMTE2LjdcbiAgfSxcbiAge1xuICAgIFwibmFtZVwiOiBcIlR5amFlIFNwZWFyc1wiLFxuICAgIFwicG9zaXRpb25cIjogXCJSQlwiLFxuICAgIFwidGVhbVwiOiBcIlRFTlwiLFxuICAgIFwiYnllXCI6IDEwLFxuICAgIFwiYWRwXCI6IDEyOC44XG4gIH0sXG4gIHtcbiAgICBcIm5hbWVcIjogXCJaYWNoIENoYXJib25uZXRcIixcbiAgICBcInBvc2l0aW9uXCI6IFwiUkJcIixcbiAgICBcInRlYW1cIjogXCJTRUFcIixcbiAgICBcImJ5ZVwiOiA4LFxuICAgIFwiYWRwXCI6IDExNS40XG4gIH0sXG4gIHtcbiAgICBcIm5hbWVcIjogXCJSYXNoaWQgU2hhaGVlZFwiLFxuICAgIFwicG9zaXRpb25cIjogXCJXUlwiLFxuICAgIFwidGVhbVwiOiBcIk5PXCIsXG4gICAgXCJieWVcIjogMTEsXG4gICAgXCJhZHBcIjogMTIwLjFcbiAgfSxcbiAge1xuICAgIFwibmFtZVwiOiBcIkouSy4gRG9iYmluc1wiLFxuICAgIFwicG9zaXRpb25cIjogXCJSQlwiLFxuICAgIFwidGVhbVwiOiBcIkRFTlwiLFxuICAgIFwiYnllXCI6IDEyLFxuICAgIFwiYWRwXCI6IDEyMi43XG4gIH0sXG4gIHtcbiAgICBcIm5hbWVcIjogXCJNaWNoYWVsIFBlbml4IEpyLlwiLFxuICAgIFwicG9zaXRpb25cIjogXCJRQlwiLFxuICAgIFwidGVhbVwiOiBcIkFUTFwiLFxuICAgIFwiYnllXCI6IDUsXG4gICAgXCJhZHBcIjogMTM3LjJcbiAgfSxcbiAge1xuICAgIFwibmFtZVwiOiBcIlJoYW1vbmRyZSBTdGV2ZW5zb25cIixcbiAgICBcInBvc2l0aW9uXCI6IFwiUkJcIixcbiAgICBcInRlYW1cIjogXCJORVwiLFxuICAgIFwiYnllXCI6IDE0LFxuICAgIFwiYWRwXCI6IDEyNS41XG4gIH0sXG4gIHtcbiAgICBcIm5hbWVcIjogXCJKYWNrIEJlY2hcIixcbiAgICBcInBvc2l0aW9uXCI6IFwiV1JcIixcbiAgICBcInRlYW1cIjogXCJMVlwiLFxuICAgIFwiYnllXCI6IDgsXG4gICAgXCJhZHBcIjogMTUxLjdcbiAgfSxcbiAge1xuICAgIFwibmFtZVwiOiBcIlR1Y2tlciBLcmFmdFwiLFxuICAgIFwicG9zaXRpb25cIjogXCJURVwiLFxuICAgIFwidGVhbVwiOiBcIkdCXCIsXG4gICAgXCJieWVcIjogNSxcbiAgICBcImFkcFwiOiAxMzEuMVxuICB9LFxuICB7XG4gICAgXCJuYW1lXCI6IFwiRGFsdG9uIEtpbmNhaWRcIixcbiAgICBcInBvc2l0aW9uXCI6IFwiVEVcIixcbiAgICBcInRlYW1cIjogXCJCVUZcIixcbiAgICBcImJ5ZVwiOiA3LFxuICAgIFwiYWRwXCI6IDEzMy4zXG4gIH0sXG4gIHtcbiAgICBcIm5hbWVcIjogXCJNYXR0aGV3IFN0YWZmb3JkXCIsXG4gICAgXCJwb3NpdGlvblwiOiBcIlFCXCIsXG4gICAgXCJ0ZWFtXCI6IFwiTEFSXCIsXG4gICAgXCJieWVcIjogOCxcbiAgICBcImFkcFwiOiAxNDMuNlxuICB9LFxuICB7XG4gICAgXCJuYW1lXCI6IFwiSmFrZSBGZXJndXNvblwiLFxuICAgIFwicG9zaXRpb25cIjogXCJURVwiLFxuICAgIFwidGVhbVwiOiBcIkRBTFwiLFxuICAgIFwiYnllXCI6IDEwLFxuICAgIFwiYWRwXCI6IDE0Ny4zXG4gIH0sXG4gIHtcbiAgICBcIm5hbWVcIjogXCJKYXZvbnRlIFdpbGxpYW1zXCIsXG4gICAgXCJwb3NpdGlvblwiOiBcIlJCXCIsXG4gICAgXCJ0ZWFtXCI6IFwiREFMXCIsXG4gICAgXCJieWVcIjogMTAsXG4gICAgXCJhZHBcIjogMTE5LjdcbiAgfSxcbiAge1xuICAgIFwibmFtZVwiOiBcIlF1ZW50aW4gSm9obnN0b25cIixcbiAgICBcInBvc2l0aW9uXCI6IFwiV1JcIixcbiAgICBcInRlYW1cIjogXCJMQUNcIixcbiAgICBcImJ5ZVwiOiAxMixcbiAgICBcImFkcFwiOiAxNTIuN1xuICB9LFxuICB7XG4gICAgXCJuYW1lXCI6IFwiUmFjaGFhZCBXaGl0ZVwiLFxuICAgIFwicG9zaXRpb25cIjogXCJSQlwiLFxuICAgIFwidGVhbVwiOiBcIlRCXCIsXG4gICAgXCJieWVcIjogOSxcbiAgICBcImFkcFwiOiAxMzkuNVxuICB9LFxuICB7XG4gICAgXCJuYW1lXCI6IFwiQnJ5Y2UgWW91bmdcIixcbiAgICBcInBvc2l0aW9uXCI6IFwiUUJcIixcbiAgICBcInRlYW1cIjogXCJDQVJcIixcbiAgICBcImJ5ZVwiOiAxNCxcbiAgICBcImFkcFwiOiAxNDcuNVxuICB9LFxuICB7XG4gICAgXCJuYW1lXCI6IFwiQ2FtIFdhcmRcIixcbiAgICBcInBvc2l0aW9uXCI6IFwiUUJcIixcbiAgICBcInRlYW1cIjogXCJURU5cIixcbiAgICBcImJ5ZVwiOiAxMCxcbiAgICBcImFkcFwiOiAxNTQuNFxuICB9LFxuICB7XG4gICAgXCJuYW1lXCI6IFwiUmF5IERhdmlzXCIsXG4gICAgXCJwb3NpdGlvblwiOiBcIlJCXCIsXG4gICAgXCJ0ZWFtXCI6IFwiQlVGXCIsXG4gICAgXCJieWVcIjogNyxcbiAgICBcImFkcFwiOiAxNDUuMVxuICB9LFxuICB7XG4gICAgXCJuYW1lXCI6IFwiS3lsZSBQaXR0c1wiLFxuICAgIFwicG9zaXRpb25cIjogXCJURVwiLFxuICAgIFwidGVhbVwiOiBcIkFUTFwiLFxuICAgIFwiYnllXCI6IDUsXG4gICAgXCJhZHBcIjogMTU3LjhcbiAgfSxcbiAge1xuICAgIFwibmFtZVwiOiBcIkdlbm8gU21pdGhcIixcbiAgICBcInBvc2l0aW9uXCI6IFwiUUJcIixcbiAgICBcInRlYW1cIjogXCJMVlwiLFxuICAgIFwiYnllXCI6IDgsXG4gICAgXCJhZHBcIjogMTUzLjdcbiAgfSxcbiAge1xuICAgIFwibmFtZVwiOiBcIlJvbWVvIERvdWJzXCIsXG4gICAgXCJwb3NpdGlvblwiOiBcIldSXCIsXG4gICAgXCJ0ZWFtXCI6IFwiR0JcIixcbiAgICBcImJ5ZVwiOiA1LFxuICAgIFwiYWRwXCI6IDE2NC45XG4gIH0sXG4gIHtcbiAgICBcIm5hbWVcIjogXCJCcmVudG9uIFN0cmFuZ2VcIixcbiAgICBcInBvc2l0aW9uXCI6IFwiVEVcIixcbiAgICBcInRlYW1cIjogXCJKQVhcIixcbiAgICBcImJ5ZVwiOiA4LFxuICAgIFwiYWRwXCI6IDE2Ny4zXG4gIH0sXG4gIHtcbiAgICBcIm5hbWVcIjogXCJKYXlkb24gQmx1ZVwiLFxuICAgIFwicG9zaXRpb25cIjogXCJSQlwiLFxuICAgIFwidGVhbVwiOiBcIkRBTFwiLFxuICAgIFwiYnllXCI6IDEwLFxuICAgIFwiYWRwXCI6IDE0MVxuICB9LFxuICB7XG4gICAgXCJuYW1lXCI6IFwiTWFydmluIE1pbXMgSnIuXCIsXG4gICAgXCJwb3NpdGlvblwiOiBcIldSXCIsXG4gICAgXCJ0ZWFtXCI6IFwiREVOXCIsXG4gICAgXCJieWVcIjogMTIsXG4gICAgXCJhZHBcIjogMTI4LjFcbiAgfSxcbiAge1xuICAgIFwibmFtZVwiOiBcIkhvbGx5d29vZCBCcm93blwiLFxuICAgIFwicG9zaXRpb25cIjogXCJXUlwiLFxuICAgIFwidGVhbVwiOiBcIktDXCIsXG4gICAgXCJieWVcIjogMTAsXG4gICAgXCJhZHBcIjogMTQ1LjhcbiAgfSxcbiAge1xuICAgIFwibmFtZVwiOiBcIlRyZXkgQmVuc29uXCIsXG4gICAgXCJwb3NpdGlvblwiOiBcIlJCXCIsXG4gICAgXCJ0ZWFtXCI6IFwiQVJJXCIsXG4gICAgXCJieWVcIjogOCxcbiAgICBcImFkcFwiOiAxNTAuM1xuICB9LFxuICB7XG4gICAgXCJuYW1lXCI6IFwiSHVudGVyIEhlbnJ5XCIsXG4gICAgXCJwb3NpdGlvblwiOiBcIlRFXCIsXG4gICAgXCJ0ZWFtXCI6IFwiTkVcIixcbiAgICBcImJ5ZVwiOiAxNCxcbiAgICBcImFkcFwiOiAxNzMuMVxuICB9LFxuICB7XG4gICAgXCJuYW1lXCI6IFwiV2FuJ0RhbGUgUm9iaW5zb25cIixcbiAgICBcInBvc2l0aW9uXCI6IFwiV1JcIixcbiAgICBcInRlYW1cIjogXCJOWUdcIixcbiAgICBcImJ5ZVwiOiAxNCxcbiAgICBcImFkcFwiOiAxNjMuNVxuICB9LFxuICB7XG4gICAgXCJuYW1lXCI6IFwiVHlsZXIgQWxsZ2VpZXJcIixcbiAgICBcInBvc2l0aW9uXCI6IFwiUkJcIixcbiAgICBcInRlYW1cIjogXCJBVExcIixcbiAgICBcImJ5ZVwiOiA1LFxuICAgIFwiYWRwXCI6IDE2My4yXG4gIH0sXG4gIHtcbiAgICBcIm5hbWVcIjogXCJUdWEgVGFnb3ZhaWxvYVwiLFxuICAgIFwicG9zaXRpb25cIjogXCJRQlwiLFxuICAgIFwidGVhbVwiOiBcIk1JQVwiLFxuICAgIFwiYnllXCI6IDEyLFxuICAgIFwiYWRwXCI6IDEzOS40XG4gIH0sXG4gIHtcbiAgICBcIm5hbWVcIjogXCJBYXJvbiBSb2RnZXJzXCIsXG4gICAgXCJwb3NpdGlvblwiOiBcIlFCXCIsXG4gICAgXCJ0ZWFtXCI6IFwiUElUXCIsXG4gICAgXCJieWVcIjogNSxcbiAgICBcImFkcFwiOiAxNjguNlxuICB9LFxuICB7XG4gICAgXCJuYW1lXCI6IFwiSXNhaWFoIExpa2VseVwiLFxuICAgIFwicG9zaXRpb25cIjogXCJURVwiLFxuICAgIFwidGVhbVwiOiBcIkJBTFwiLFxuICAgIFwiYnllXCI6IDcsXG4gICAgXCJhZHBcIjogMTM2LjFcbiAgfSxcbiAge1xuICAgIFwibmFtZVwiOiBcIkF1c3RpbiBFa2VsZXJcIixcbiAgICBcInBvc2l0aW9uXCI6IFwiUkJcIixcbiAgICBcInRlYW1cIjogXCJXQVNcIixcbiAgICBcImJ5ZVwiOiAxMixcbiAgICBcImFkcFwiOiAxNTIuNFxuICB9LFxuICB7XG4gICAgXCJuYW1lXCI6IFwiSm9zaHVhIFBhbG1lclwiLFxuICAgIFwicG9zaXRpb25cIjogXCJXUlwiLFxuICAgIFwidGVhbVwiOiBcIkJVRlwiLFxuICAgIFwiYnllXCI6IDcsXG4gICAgXCJhZHBcIjogMTc3LjdcbiAgfSxcbiAge1xuICAgIFwibmFtZVwiOiBcIlBhdCBGcmVpZXJtdXRoXCIsXG4gICAgXCJwb3NpdGlvblwiOiBcIlRFXCIsXG4gICAgXCJ0ZWFtXCI6IFwiUElUXCIsXG4gICAgXCJieWVcIjogNSxcbiAgICBcImFkcFwiOiAxNjEuNVxuICB9LFxuICB7XG4gICAgXCJuYW1lXCI6IFwiUGF0IEJyeWFudFwiLFxuICAgIFwicG9zaXRpb25cIjogXCJXUlwiLFxuICAgIFwidGVhbVwiOiBcIkRFTlwiLFxuICAgIFwiYnllXCI6IDEyLFxuICAgIFwiYWRwXCI6IDE4MS44XG4gIH0sXG4gIHtcbiAgICBcIm5hbWVcIjogXCJaYWNoIEVydHpcIixcbiAgICBcInBvc2l0aW9uXCI6IFwiVEVcIixcbiAgICBcInRlYW1cIjogXCJXQVNcIixcbiAgICBcImJ5ZVwiOiAxMixcbiAgICBcImFkcFwiOiAxNTQuNVxuICB9LFxuICB7XG4gICAgXCJuYW1lXCI6IFwiRGVtYXJpbyBEb3VnbGFzXCIsXG4gICAgXCJwb3NpdGlvblwiOiBcIldSXCIsXG4gICAgXCJ0ZWFtXCI6IFwiTkVcIixcbiAgICBcImJ5ZVwiOiAxNCxcbiAgICBcImFkcFwiOiAxODIuNVxuICB9LFxuICB7XG4gICAgXCJuYW1lXCI6IFwiUm9zY2hvbiBKb2huc29uXCIsXG4gICAgXCJwb3NpdGlvblwiOiBcIlJCXCIsXG4gICAgXCJ0ZWFtXCI6IFwiQ0hJXCIsXG4gICAgXCJieWVcIjogNSxcbiAgICBcImFkcFwiOiAxNzQuMVxuICB9LFxuICB7XG4gICAgXCJuYW1lXCI6IFwiQ2FkZSBPdHRvblwiLFxuICAgIFwicG9zaXRpb25cIjogXCJURVwiLFxuICAgIFwidGVhbVwiOiBcIlRCXCIsXG4gICAgXCJieWVcIjogOSxcbiAgICBcImFkcFwiOiAxNzlcbiAgfSxcbiAge1xuICAgIFwibmFtZVwiOiBcIkFkYW0gVGhpZWxlblwiLFxuICAgIFwicG9zaXRpb25cIjogXCJXUlwiLFxuICAgIFwidGVhbVwiOiBcIkNBUlwiLFxuICAgIFwiYnllXCI6IDE0LFxuICAgIFwiYWRwXCI6IDE0My4yXG4gIH0sXG4gIHtcbiAgICBcIm5hbWVcIjogXCJKYXlsaW4gTm9lbFwiLFxuICAgIFwicG9zaXRpb25cIjogXCJXUlwiLFxuICAgIFwidGVhbVwiOiBcIkhPVVwiLFxuICAgIFwiYnllXCI6IDYsXG4gICAgXCJhZHBcIjogMTkwXG4gIH0sXG4gIHtcbiAgICBcIm5hbWVcIjogXCJNaWtlIEdlc2lja2lcIixcbiAgICBcInBvc2l0aW9uXCI6IFwiVEVcIixcbiAgICBcInRlYW1cIjogXCJDSU5cIixcbiAgICBcImJ5ZVwiOiAxMCxcbiAgICBcImFkcFwiOiAxNzAuMVxuICB9LFxuICB7XG4gICAgXCJuYW1lXCI6IFwiSXNhYWMgR3VlcmVuZG9cIixcbiAgICBcInBvc2l0aW9uXCI6IFwiUkJcIixcbiAgICBcInRlYW1cIjogXCJTRlwiLFxuICAgIFwiYnllXCI6IDE0LFxuICAgIFwiYWRwXCI6IDE0OC40XG4gIH0sXG4gIHtcbiAgICBcIm5hbWVcIjogXCJKYWxlbiBNY01pbGxhblwiLFxuICAgIFwicG9zaXRpb25cIjogXCJXUlwiLFxuICAgIFwidGVhbVwiOiBcIlRCXCIsXG4gICAgXCJieWVcIjogOSxcbiAgICBcImFkcFwiOiAxNTcuNFxuICB9LFxuICB7XG4gICAgXCJuYW1lXCI6IFwiUmljbyBEb3dkbGVcIixcbiAgICBcInBvc2l0aW9uXCI6IFwiUkJcIixcbiAgICBcInRlYW1cIjogXCJDQVJcIixcbiAgICBcImJ5ZVwiOiAxNCxcbiAgICBcImFkcFwiOiAxNzBcbiAgfSxcbiAge1xuICAgIFwibmFtZVwiOiBcIlhhdmllciBMZWdldHRlXCIsXG4gICAgXCJwb3NpdGlvblwiOiBcIldSXCIsXG4gICAgXCJ0ZWFtXCI6IFwiQ0FSXCIsXG4gICAgXCJieWVcIjogMTQsXG4gICAgXCJhZHBcIjogMTU4LjZcbiAgfSxcbiAge1xuICAgIFwibmFtZVwiOiBcIkR5bGFuIFNhbXBzb25cIixcbiAgICBcInBvc2l0aW9uXCI6IFwiUkJcIixcbiAgICBcInRlYW1cIjogXCJDTEVcIixcbiAgICBcImJ5ZVwiOiA5LFxuICAgIFwiYWRwXCI6IDE5Ni4zXG4gIH0sXG4gIHtcbiAgICBcIm5hbWVcIjogXCJDZWRyaWMgVGlsbG1hblwiLFxuICAgIFwicG9zaXRpb25cIjogXCJXUlwiLFxuICAgIFwidGVhbVwiOiBcIkNMRVwiLFxuICAgIFwiYnllXCI6IDksXG4gICAgXCJhZHBcIjogMTY1LjlcbiAgfSxcbiAge1xuICAgIFwibmFtZVwiOiBcIkpheWxlbiBXcmlnaHRcIixcbiAgICBcInBvc2l0aW9uXCI6IFwiUkJcIixcbiAgICBcInRlYW1cIjogXCJNSUFcIixcbiAgICBcImJ5ZVwiOiAxMixcbiAgICBcImFkcFwiOiAxNzAuNlxuICB9LFxuICB7XG4gICAgXCJuYW1lXCI6IFwiQnJhZWxvbiBBbGxlblwiLFxuICAgIFwicG9zaXRpb25cIjogXCJSQlwiLFxuICAgIFwidGVhbVwiOiBcIk5ZSlwiLFxuICAgIFwiYnllXCI6IDksXG4gICAgXCJhZHBcIjogMTc2LjVcbiAgfSxcbiAge1xuICAgIFwibmFtZVwiOiBcIldpbGwgU2hpcGxleVwiLFxuICAgIFwicG9zaXRpb25cIjogXCJSQlwiLFxuICAgIFwidGVhbVwiOiBcIlBISVwiLFxuICAgIFwiYnllXCI6IDksXG4gICAgXCJhZHBcIjogMTg4LjNcbiAgfSxcbiAge1xuICAgIFwibmFtZVwiOiBcIk1pbGVzIFNhbmRlcnNcIixcbiAgICBcInBvc2l0aW9uXCI6IFwiUkJcIixcbiAgICBcInRlYW1cIjogXCJEQUxcIixcbiAgICBcImJ5ZVwiOiAxMCxcbiAgICBcImFkcFwiOiAxOTguMVxuICB9LFxuICB7XG4gICAgXCJuYW1lXCI6IFwiRGVBbmRyZSBIb3BraW5zXCIsXG4gICAgXCJwb3NpdGlvblwiOiBcIldSXCIsXG4gICAgXCJ0ZWFtXCI6IFwiQkFMXCIsXG4gICAgXCJieWVcIjogNyxcbiAgICBcImFkcFwiOiAxNzYuM1xuICB9LFxuICB7XG4gICAgXCJuYW1lXCI6IFwiTWljaGFlbCBXaWxzb25cIixcbiAgICBcInBvc2l0aW9uXCI6IFwiV1JcIixcbiAgICBcInRlYW1cIjogXCJBUklcIixcbiAgICBcImJ5ZVwiOiA4LFxuICAgIFwiYWRwXCI6IDE5MC40XG4gIH0sXG4gIHtcbiAgICBcIm5hbWVcIjogXCJUYW5rIEJpZ3NieVwiLFxuICAgIFwicG9zaXRpb25cIjogXCJSQlwiLFxuICAgIFwidGVhbVwiOiBcIkpBWFwiLFxuICAgIFwiYnllXCI6IDgsXG4gICAgXCJhZHBcIjogMTYwLjJcbiAgfSxcbiAge1xuICAgIFwibmFtZVwiOiBcIlNhbSBEYXJub2xkXCIsXG4gICAgXCJwb3NpdGlvblwiOiBcIlFCXCIsXG4gICAgXCJ0ZWFtXCI6IFwiU0VBXCIsXG4gICAgXCJieWVcIjogOCxcbiAgICBcImFkcFwiOiAxNjMuN1xuICB9LFxuICB7XG4gICAgXCJuYW1lXCI6IFwiTWFyU2hhd24gTGxveWRcIixcbiAgICBcInBvc2l0aW9uXCI6IFwiUkJcIixcbiAgICBcInRlYW1cIjogXCJHQlwiLFxuICAgIFwiYnllXCI6IDUsXG4gICAgXCJhZHBcIjogMTk2LjRcbiAgfSxcbiAge1xuICAgIFwibmFtZVwiOiBcIkFsZWMgUGllcmNlXCIsXG4gICAgXCJwb3NpdGlvblwiOiBcIldSXCIsXG4gICAgXCJ0ZWFtXCI6IFwiSU5EXCIsXG4gICAgXCJieWVcIjogMTEsXG4gICAgXCJhZHBcIjogMTc0LjlcbiAgfSxcbiAge1xuICAgIFwibmFtZVwiOiBcIkR5YW1pIEJyb3duXCIsXG4gICAgXCJwb3NpdGlvblwiOiBcIldSXCIsXG4gICAgXCJ0ZWFtXCI6IFwiSkFYXCIsXG4gICAgXCJieWVcIjogOCxcbiAgICBcImFkcFwiOiAyMDQuNVxuICB9LFxuICB7XG4gICAgXCJuYW1lXCI6IFwiSmFycXVleiBIdW50ZXJcIixcbiAgICBcInBvc2l0aW9uXCI6IFwiUkJcIixcbiAgICBcInRlYW1cIjogXCJMQVJcIixcbiAgICBcImJ5ZVwiOiA4LFxuICAgIFwiYWRwXCI6IDIwNi4yXG4gIH0sXG4gIHtcbiAgICBcIm5hbWVcIjogXCJEYXJpdXMgU2xheXRvblwiLFxuICAgIFwicG9zaXRpb25cIjogXCJXUlwiLFxuICAgIFwidGVhbVwiOiBcIk5ZR1wiLFxuICAgIFwiYnllXCI6IDE0LFxuICAgIFwiYWRwXCI6IDIwNi4yXG4gIH0sXG4gIHtcbiAgICBcIm5hbWVcIjogXCJESiBHaWRkZW5zXCIsXG4gICAgXCJwb3NpdGlvblwiOiBcIlJCXCIsXG4gICAgXCJ0ZWFtXCI6IFwiSU5EXCIsXG4gICAgXCJieWVcIjogMTEsXG4gICAgXCJhZHBcIjogMjA3XG4gIH0sXG4gIHtcbiAgICBcIm5hbWVcIjogXCJNYXNvbiBUYXlsb3JcIixcbiAgICBcInBvc2l0aW9uXCI6IFwiVEVcIixcbiAgICBcInRlYW1cIjogXCJOWUpcIixcbiAgICBcImJ5ZVwiOiA5LFxuICAgIFwiYWRwXCI6IDE4NFxuICB9LFxuICB7XG4gICAgXCJuYW1lXCI6IFwiQ2hpZyBPa29ua3dvXCIsXG4gICAgXCJwb3NpdGlvblwiOiBcIlRFXCIsXG4gICAgXCJ0ZWFtXCI6IFwiVEVOXCIsXG4gICAgXCJieWVcIjogMTAsXG4gICAgXCJhZHBcIjogMTg2LjlcbiAgfSxcbiAge1xuICAgIFwibmFtZVwiOiBcIkRhbHRvbiBTY2h1bHR6XCIsXG4gICAgXCJwb3NpdGlvblwiOiBcIlRFXCIsXG4gICAgXCJ0ZWFtXCI6IFwiSE9VXCIsXG4gICAgXCJieWVcIjogNixcbiAgICBcImFkcFwiOiAxOTYuNFxuICB9LFxuICB7XG4gICAgXCJuYW1lXCI6IFwiRGFuaWVsIEpvbmVzXCIsXG4gICAgXCJwb3NpdGlvblwiOiBcIlFCXCIsXG4gICAgXCJ0ZWFtXCI6IFwiSU5EXCIsXG4gICAgXCJieWVcIjogMTEsXG4gICAgXCJhZHBcIjogMTg1LjVcbiAgfSxcbiAge1xuICAgIFwibmFtZVwiOiBcIkVsaWMgQXlvbWFub3JcIixcbiAgICBcInBvc2l0aW9uXCI6IFwiV1JcIixcbiAgICBcInRlYW1cIjogXCJURU5cIixcbiAgICBcImJ5ZVwiOiAxMCxcbiAgICBcImFkcFwiOiAyMTBcbiAgfSxcbiAge1xuICAgIFwibmFtZVwiOiBcIk5pY2sgQ2h1YmJcIixcbiAgICBcInBvc2l0aW9uXCI6IFwiUkJcIixcbiAgICBcInRlYW1cIjogXCJIT1VcIixcbiAgICBcImJ5ZVwiOiA2LFxuICAgIFwiYWRwXCI6IDE3Mi4zXG4gIH0sXG4gIHtcbiAgICBcIm5hbWVcIjogXCJCcmFzaGFyZCBTbWl0aFwiLFxuICAgIFwicG9zaXRpb25cIjogXCJSQlwiLFxuICAgIFwidGVhbVwiOiBcIktDXCIsXG4gICAgXCJieWVcIjogMTAsXG4gICAgXCJhZHBcIjogMjE3LjRcbiAgfSxcbiAge1xuICAgIFwibmFtZVwiOiBcIkphbGVuIENva2VyXCIsXG4gICAgXCJwb3NpdGlvblwiOiBcIldSXCIsXG4gICAgXCJ0ZWFtXCI6IFwiQ0FSXCIsXG4gICAgXCJieWVcIjogMTQsXG4gICAgXCJhZHBcIjogMjE2LjhcbiAgfSxcbiAge1xuICAgIFwibmFtZVwiOiBcIkthcmVlbSBIdW50XCIsXG4gICAgXCJwb3NpdGlvblwiOiBcIlJCXCIsXG4gICAgXCJ0ZWFtXCI6IFwiS0NcIixcbiAgICBcImJ5ZVwiOiAxMCxcbiAgICBcImFkcFwiOiAxODIuN1xuICB9LFxuICB7XG4gICAgXCJuYW1lXCI6IFwiSmEnVGF2aW9uIFNhbmRlcnNcIixcbiAgICBcInBvc2l0aW9uXCI6IFwiVEVcIixcbiAgICBcInRlYW1cIjogXCJDQVJcIixcbiAgICBcImJ5ZVwiOiAxNCxcbiAgICBcImFkcFwiOiAyMTcuM1xuICB9LFxuICB7XG4gICAgXCJuYW1lXCI6IFwiSmFsZW4gTWlscm9lXCIsXG4gICAgXCJwb3NpdGlvblwiOiBcIlFCXCIsXG4gICAgXCJ0ZWFtXCI6IFwiU0VBXCIsXG4gICAgXCJieWVcIjogOCxcbiAgICBcImFkcFwiOiAyMjYuMlxuICB9LFxuICB7XG4gICAgXCJuYW1lXCI6IFwiVGFoaiBCcm9va3NcIixcbiAgICBcInBvc2l0aW9uXCI6IFwiUkJcIixcbiAgICBcInRlYW1cIjogXCJDSU5cIixcbiAgICBcImJ5ZVwiOiAxMCxcbiAgICBcImFkcFwiOiAyMjQuMVxuICB9LFxuICB7XG4gICAgXCJuYW1lXCI6IFwiQWRvbmFpIE1pdGNoZWxsXCIsXG4gICAgXCJwb3NpdGlvblwiOiBcIldSXCIsXG4gICAgXCJ0ZWFtXCI6IFwiSU5EXCIsXG4gICAgXCJieWVcIjogMTEsXG4gICAgXCJhZHBcIjogMjI3LjJcbiAgfSxcbiAge1xuICAgIFwibmFtZVwiOiBcIlRyb3kgRnJhbmtsaW5cIixcbiAgICBcInBvc2l0aW9uXCI6IFwiV1JcIixcbiAgICBcInRlYW1cIjogXCJERU5cIixcbiAgICBcImJ5ZVwiOiAxMixcbiAgICBcImFkcFwiOiAyMjkuMVxuICB9LFxuICB7XG4gICAgXCJuYW1lXCI6IFwiQmxha2UgQ29ydW1cIixcbiAgICBcInBvc2l0aW9uXCI6IFwiUkJcIixcbiAgICBcInRlYW1cIjogXCJMQVJcIixcbiAgICBcImJ5ZVwiOiA4LFxuICAgIFwiYWRwXCI6IDIxMy4xXG4gIH0sXG4gIHtcbiAgICBcIm5hbWVcIjogXCJIYXJvbGQgRmFubmluIEpyLlwiLFxuICAgIFwicG9zaXRpb25cIjogXCJURVwiLFxuICAgIFwidGVhbVwiOiBcIkNMRVwiLFxuICAgIFwiYnllXCI6IDksXG4gICAgXCJhZHBcIjogMjI4LjZcbiAgfSxcbiAge1xuICAgIFwibmFtZVwiOiBcIlR5bGVyIFNob3VnaFwiLFxuICAgIFwicG9zaXRpb25cIjogXCJRQlwiLFxuICAgIFwidGVhbVwiOiBcIk5PXCIsXG4gICAgXCJieWVcIjogMTEsXG4gICAgXCJhZHBcIjogMTk5LjhcbiAgfSxcbiAge1xuICAgIFwibmFtZVwiOiBcIkp1c3RpY2UgSGlsbFwiLFxuICAgIFwicG9zaXRpb25cIjogXCJSQlwiLFxuICAgIFwidGVhbVwiOiBcIkJBTFwiLFxuICAgIFwiYnllXCI6IDcsXG4gICAgXCJhZHBcIjogMTg1LjFcbiAgfSxcbiAge1xuICAgIFwibmFtZVwiOiBcIlRoZW8gSm9obnNvblwiLFxuICAgIFwicG9zaXRpb25cIjogXCJURVwiLFxuICAgIFwidGVhbVwiOiBcIk5ZR1wiLFxuICAgIFwiYnllXCI6IDE0LFxuICAgIFwiYWRwXCI6IDIxMi4zXG4gIH0sXG4gIHtcbiAgICBcIm5hbWVcIjogXCJTYXZpb24gV2lsbGlhbXNcIixcbiAgICBcInBvc2l0aW9uXCI6IFwiV1JcIixcbiAgICBcInRlYW1cIjogXCJHQlwiLFxuICAgIFwiYnllXCI6IDUsXG4gICAgXCJhZHBcIjogMjI5LjNcbiAgfSxcbiAge1xuICAgIFwibmFtZVwiOiBcIkFyaWFuIFNtaXRoXCIsXG4gICAgXCJwb3NpdGlvblwiOiBcIldSXCIsXG4gICAgXCJ0ZWFtXCI6IFwiTllKXCIsXG4gICAgXCJieWVcIjogOSxcbiAgICBcImFkcFwiOiAyMjkuN1xuICB9LFxuICB7XG4gICAgXCJuYW1lXCI6IFwiRG9udCdlIFRob3JudG9uIEpyLlwiLFxuICAgIFwicG9zaXRpb25cIjogXCJXUlwiLFxuICAgIFwidGVhbVwiOiBcIkxWXCIsXG4gICAgXCJieWVcIjogOCxcbiAgICBcImFkcFwiOiAxOTkuMVxuICB9LFxuICB7XG4gICAgXCJuYW1lXCI6IFwiRG9udGF5dmlvbiBXaWNrc1wiLFxuICAgIFwicG9zaXRpb25cIjogXCJXUlwiLFxuICAgIFwidGVhbVwiOiBcIkdCXCIsXG4gICAgXCJieWVcIjogNSxcbiAgICBcImFkcFwiOiAyMTkuMVxuICB9LFxuICB7XG4gICAgXCJuYW1lXCI6IFwiSmF4c29uIERhcnRcIixcbiAgICBcInBvc2l0aW9uXCI6IFwiUUJcIixcbiAgICBcInRlYW1cIjogXCJOWUdcIixcbiAgICBcImJ5ZVwiOiAxNCxcbiAgICBcImFkcFwiOiAyMDkuMlxuICB9LFxuICB7XG4gICAgXCJuYW1lXCI6IFwiRGV2YXVnaG4gVmVsZVwiLFxuICAgIFwicG9zaXRpb25cIjogXCJXUlwiLFxuICAgIFwidGVhbVwiOiBcIkRFTlwiLFxuICAgIFwiYnllXCI6IDEyLFxuICAgIFwiYWRwXCI6IDIyNS41XG4gIH0sXG4gIHtcbiAgICBcIm5hbWVcIjogXCJUeWxlciBMb2NrZXR0XCIsXG4gICAgXCJwb3NpdGlvblwiOiBcIldSXCIsXG4gICAgXCJ0ZWFtXCI6IFwiVEVOXCIsXG4gICAgXCJieWVcIjogMTAsXG4gICAgXCJhZHBcIjogMjAzLjlcbiAgfSxcbiAge1xuICAgIFwibmFtZVwiOiBcIlJhaGVlbSBNb3N0ZXJ0XCIsXG4gICAgXCJwb3NpdGlvblwiOiBcIlJCXCIsXG4gICAgXCJ0ZWFtXCI6IFwiTFZcIixcbiAgICBcImJ5ZVwiOiA4LFxuICAgIFwiYWRwXCI6IDIxNS4yXG4gIH0sXG4gIHtcbiAgICBcIm5hbWVcIjogXCJDYWx2aW4gQXVzdGluIElJSVwiLFxuICAgIFwicG9zaXRpb25cIjogXCJXUlwiLFxuICAgIFwidGVhbVwiOiBcIlBJVFwiLFxuICAgIFwiYnllXCI6IDUsXG4gICAgXCJhZHBcIjogMTkzLjRcbiAgfSxcbiAge1xuICAgIFwibmFtZVwiOiBcIlRyZSBUdWNrZXJcIixcbiAgICBcInBvc2l0aW9uXCI6IFwiV1JcIixcbiAgICBcInRlYW1cIjogXCJMVlwiLFxuICAgIFwiYnllXCI6IDgsXG4gICAgXCJhZHBcIjogMjI3LjdcbiAgfSxcbiAge1xuICAgIFwibmFtZVwiOiBcIkpvcmRhbiBKYW1lc1wiLFxuICAgIFwicG9zaXRpb25cIjogXCJSQlwiLFxuICAgIFwidGVhbVwiOiBcIlNGXCIsXG4gICAgXCJieWVcIjogMTQsXG4gICAgXCJhZHBcIjogMjI4LjdcbiAgfSxcbiAge1xuICAgIFwibmFtZVwiOiBcIlR1dHUgQXR3ZWxsXCIsXG4gICAgXCJwb3NpdGlvblwiOiBcIldSXCIsXG4gICAgXCJ0ZWFtXCI6IFwiTEFSXCIsXG4gICAgXCJieWVcIjogOCxcbiAgICBcImFkcFwiOiAyMjIuNlxuICB9LFxuICB7XG4gICAgXCJuYW1lXCI6IFwiS2VlbmFuIEFsbGVuXCIsXG4gICAgXCJwb3NpdGlvblwiOiBcIldSXCIsXG4gICAgXCJ0ZWFtXCI6IFwiRkFcIixcbiAgICBcImJ5ZVwiOiBudWxsLFxuICAgIFwiYWRwXCI6IDE5MS40XG4gIH0sXG4gIHtcbiAgICBcIm5hbWVcIjogXCJKdXdhbiBKb2huc29uXCIsXG4gICAgXCJwb3NpdGlvblwiOiBcIlRFXCIsXG4gICAgXCJ0ZWFtXCI6IFwiTk9cIixcbiAgICBcImJ5ZVwiOiAxMSxcbiAgICBcImFkcFwiOiAyMDIuNlxuICB9LFxuICB7XG4gICAgXCJuYW1lXCI6IFwiT2xsaWUgR29yZG9uIElJXCIsXG4gICAgXCJwb3NpdGlvblwiOiBcIlJCXCIsXG4gICAgXCJ0ZWFtXCI6IFwiTUlBXCIsXG4gICAgXCJieWVcIjogMTIsXG4gICAgXCJhZHBcIjogMjI4LjJcbiAgfSxcbiAge1xuICAgIFwibmFtZVwiOiBcIlNlYW4gVHVja2VyXCIsXG4gICAgXCJwb3NpdGlvblwiOiBcIlJCXCIsXG4gICAgXCJ0ZWFtXCI6IFwiVEJcIixcbiAgICBcImJ5ZVwiOiA5LFxuICAgIFwiYWRwXCI6IDIyOS45XG4gIH0sXG4gIHtcbiAgICBcIm5hbWVcIjogXCJJc2FhYyBUZVNsYWFcIixcbiAgICBcInBvc2l0aW9uXCI6IFwiV1JcIixcbiAgICBcInRlYW1cIjogXCJERVRcIixcbiAgICBcImJ5ZVwiOiA4LFxuICAgIFwiYWRwXCI6IDIyMy43XG4gIH0sXG4gIHtcbiAgICBcIm5hbWVcIjogXCJFbGlqYWggTW9vcmVcIixcbiAgICBcInBvc2l0aW9uXCI6IFwiV1JcIixcbiAgICBcInRlYW1cIjogXCJCVUZcIixcbiAgICBcImJ5ZVwiOiA3LFxuICAgIFwiYWRwXCI6IDIyNS4xXG4gIH0sXG4gIHtcbiAgICBcIm5hbWVcIjogXCJBbmRyZWkgSW9zaXZhc1wiLFxuICAgIFwicG9zaXRpb25cIjogXCJXUlwiLFxuICAgIFwidGVhbVwiOiBcIkNJTlwiLFxuICAgIFwiYnllXCI6IDEwLFxuICAgIFwiYWRwXCI6IDE5OFxuICB9LFxuICB7XG4gICAgXCJuYW1lXCI6IFwiV2lsbCBEaXNzbHlcIixcbiAgICBcInBvc2l0aW9uXCI6IFwiVEVcIixcbiAgICBcInRlYW1cIjogXCJMQUNcIixcbiAgICBcImJ5ZVwiOiAxMixcbiAgICBcImFkcFwiOiAyMzAuNlxuICB9LFxuICB7XG4gICAgXCJuYW1lXCI6IFwiS2F5c2hvbiBCb3V0dGVcIixcbiAgICBcInBvc2l0aW9uXCI6IFwiV1JcIixcbiAgICBcInRlYW1cIjogXCJORVwiLFxuICAgIFwiYnllXCI6IDE0LFxuICAgIFwiYWRwXCI6IDIyOC4yXG4gIH0sXG4gIHtcbiAgICBcIm5hbWVcIjogXCJEZXZpbiBOZWFsXCIsXG4gICAgXCJwb3NpdGlvblwiOiBcIlJCXCIsXG4gICAgXCJ0ZWFtXCI6IFwiTk9cIixcbiAgICBcImJ5ZVwiOiAxMSxcbiAgICBcImFkcFwiOiAyMTkuOVxuICB9LFxuICB7XG4gICAgXCJuYW1lXCI6IFwiTm9haCBGYW50XCIsXG4gICAgXCJwb3NpdGlvblwiOiBcIlRFXCIsXG4gICAgXCJ0ZWFtXCI6IFwiU0VBXCIsXG4gICAgXCJieWVcIjogOCxcbiAgICBcImFkcFwiOiAyMzIuMlxuICB9LFxuICB7XG4gICAgXCJuYW1lXCI6IFwiUnVzc2VsbCBXaWxzb25cIixcbiAgICBcInBvc2l0aW9uXCI6IFwiUUJcIixcbiAgICBcInRlYW1cIjogXCJOWUdcIixcbiAgICBcImJ5ZVwiOiAxNCxcbiAgICBcImFkcFwiOiAyMDAuNlxuICB9LFxuICB7XG4gICAgXCJuYW1lXCI6IFwiSm9lIEZsYWNjb1wiLFxuICAgIFwicG9zaXRpb25cIjogXCJRQlwiLFxuICAgIFwidGVhbVwiOiBcIkNMRVwiLFxuICAgIFwiYnllXCI6IDksXG4gICAgXCJhZHBcIjogMjIyLjRcbiAgfSxcbiAge1xuICAgIFwibmFtZVwiOiBcIktlYXRvbiBNaXRjaGVsbFwiLFxuICAgIFwicG9zaXRpb25cIjogXCJSQlwiLFxuICAgIFwidGVhbVwiOiBcIkJBTFwiLFxuICAgIFwiYnllXCI6IDcsXG4gICAgXCJhZHBcIjogMjExXG4gIH0sXG4gIHtcbiAgICBcIm5hbWVcIjogXCJKZXJvbWUgRm9yZFwiLFxuICAgIFwicG9zaXRpb25cIjogXCJSQlwiLFxuICAgIFwidGVhbVwiOiBcIkNMRVwiLFxuICAgIFwiYnllXCI6IDksXG4gICAgXCJhZHBcIjogMjAzLjNcbiAgfSxcbiAge1xuICAgIFwibmFtZVwiOiBcIlR5bGVyIEhpZ2JlZVwiLFxuICAgIFwicG9zaXRpb25cIjogXCJURVwiLFxuICAgIFwidGVhbVwiOiBcIkxBUlwiLFxuICAgIFwiYnllXCI6IDgsXG4gICAgXCJhZHBcIjogMjIxLjhcbiAgfSxcbiAge1xuICAgIFwibmFtZVwiOiBcIlRyZXZvciBFdGllbm5lXCIsXG4gICAgXCJwb3NpdGlvblwiOiBcIlJCXCIsXG4gICAgXCJ0ZWFtXCI6IFwiQ0FSXCIsXG4gICAgXCJieWVcIjogMTQsXG4gICAgXCJhZHBcIjogMjI3LjRcbiAgfSxcbiAge1xuICAgIFwibmFtZVwiOiBcIklzYWlhaCBEYXZpc1wiLFxuICAgIFwicG9zaXRpb25cIjogXCJSQlwiLFxuICAgIFwidGVhbVwiOiBcIk5ZSlwiLFxuICAgIFwiYnllXCI6IDksXG4gICAgXCJhZHBcIjogMjI4LjJcbiAgfSxcbiAge1xuICAgIFwibmFtZVwiOiBcIkphbGVuIFJveWFsc1wiLFxuICAgIFwicG9zaXRpb25cIjogXCJXUlwiLFxuICAgIFwidGVhbVwiOiBcIktDXCIsXG4gICAgXCJieWVcIjogMTAsXG4gICAgXCJhZHBcIjogMjIzLjJcbiAgfVxuXTtcblxuLy8gVXRpbGl0eSBmdW5jdGlvbiB0byBncm91cCBwaWNrcyBieSBwb3NpdGlvblxuZXhwb3J0IGNvbnN0IGdyb3VwUGlja3NCeVBvc2l0aW9uID0gKHBpY2tzLCBwbGF5ZXJQb29sKSA9PiB7XG4gIGNvbnN0IGdyb3VwZWQgPSB7XG4gICAgUUI6IFtdLFxuICAgIFJCOiBbXSxcbiAgICBXUjogW10sXG4gICAgVEU6IFtdLFxuICAgIEZMRVg6IFtdXG4gIH07XG4gIFxuICBwaWNrcy5mb3JFYWNoKHBpY2sgPT4ge1xuICAgIGNvbnN0IHBsYXllckRhdGEgPSBwbGF5ZXJQb29sLmZpbmQocCA9PiBwLm5hbWUgPT09IHBpY2spO1xuICAgIGlmIChwbGF5ZXJEYXRhICYmIGdyb3VwZWRbcGxheWVyRGF0YS5wb3NpdGlvbl0pIHtcbiAgICAgIGNvbnN0IHBsYXllckluZm8gPSB7XG4gICAgICAgIG5hbWU6IHBpY2ssXG4gICAgICAgIHBvc2l0aW9uOiBwbGF5ZXJEYXRhLnBvc2l0aW9uLFxuICAgICAgICB0ZWFtOiBwbGF5ZXJEYXRhLnRlYW0sXG4gICAgICAgIGJ5ZTogcGxheWVyRGF0YS5ieWUsXG4gICAgICAgIGFkcDogcGxheWVyRGF0YS5hZHBcbiAgICAgIH07XG4gICAgICBcbiAgICAgIC8vIEFkZCB0byBwb3NpdGlvbi1zcGVjaWZpYyBncm91cFxuICAgICAgZ3JvdXBlZFtwbGF5ZXJEYXRhLnBvc2l0aW9uXS5wdXNoKHBsYXllckluZm8pO1xuICAgICAgXG4gICAgICAvLyBBZGQgUkIsIFdSLCBhbmQgVEUgcGxheWVycyB0byBGTEVYIGdyb3VwXG4gICAgICBpZiAoWydSQicsICdXUicsICdURSddLmluY2x1ZGVzKHBsYXllckRhdGEucG9zaXRpb24pKSB7XG4gICAgICAgIGdyb3VwZWQuRkxFWC5wdXNoKHBsYXllckluZm8pO1xuICAgICAgfVxuICAgIH1cbiAgfSk7XG4gIFxuICAvLyBTb3J0IGVhY2ggcG9zaXRpb24gYnkgQURQXG4gIE9iamVjdC5rZXlzKGdyb3VwZWQpLmZvckVhY2gocG9zID0+IHtcbiAgICBncm91cGVkW3Bvc10uc29ydCgoYSwgYikgPT4gKGEuYWRwIHx8IDk5OSkgLSAoYi5hZHAgfHwgOTk5KSk7XG4gIH0pO1xuICBcbiAgcmV0dXJuIGdyb3VwZWQ7XG59O1xuICJdLCJuYW1lcyI6WyJQTEFZRVJfUE9PTCIsImdyb3VwUGlja3NCeVBvc2l0aW9uIiwicGlja3MiLCJwbGF5ZXJQb29sIiwiZ3JvdXBlZCIsIlFCIiwiUkIiLCJXUiIsIlRFIiwiRkxFWCIsImZvckVhY2giLCJwaWNrIiwicGxheWVyRGF0YSIsImZpbmQiLCJwIiwibmFtZSIsInBvc2l0aW9uIiwicGxheWVySW5mbyIsInRlYW0iLCJieWUiLCJhZHAiLCJwdXNoIiwiaW5jbHVkZXMiLCJPYmplY3QiLCJrZXlzIiwicG9zIiwic29ydCIsImEiLCJiIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(pages-dir-node)/./lib/playerPool.js\n");

/***/ }),

/***/ "(pages-dir-node)/./lib/userStats.js":
/*!**************************!*\
  !*** ./lib/userStats.js ***!
  \**************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   calculateUserRank: () => (/* binding */ calculateUserRank),\n/* harmony export */   getUserStats: () => (/* binding */ getUserStats),\n/* harmony export */   initializeUserStats: () => (/* binding */ initializeUserStats),\n/* harmony export */   updateActivityStats: () => (/* binding */ updateActivityStats),\n/* harmony export */   updateDepositStats: () => (/* binding */ updateDepositStats),\n/* harmony export */   updateDraftStats: () => (/* binding */ updateDraftStats),\n/* harmony export */   updateTournamentEntryStats: () => (/* binding */ updateTournamentEntryStats),\n/* harmony export */   updateTournamentResultStats: () => (/* binding */ updateTournamentResultStats)\n/* harmony export */ });\n/* harmony import */ var _firebase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./firebase */ \"(pages-dir-node)/./lib/firebase.js\");\n/* harmony import */ var firebase_firestore__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! firebase/firestore */ \"firebase/firestore\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_firebase__WEBPACK_IMPORTED_MODULE_0__, firebase_firestore__WEBPACK_IMPORTED_MODULE_1__]);\n([_firebase__WEBPACK_IMPORTED_MODULE_0__, firebase_firestore__WEBPACK_IMPORTED_MODULE_1__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw new Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw new Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, \"catch\": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n\n\n/**\n * Comprehensive user statistics tracking system\n * Tracks financial, tournament, draft, and performance metrics\n */\n\n// Initialize user statistics when creating a new user\nvar initializeUserStats = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(userId) {\n    var userStats, _t;\n    return _regeneratorRuntime().wrap(function (_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          userStats = {\n            // Basic Info\n            id: userId,\n            createdAt: (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.serverTimestamp)(),\n            lastActive: (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.serverTimestamp)(),\n            // Financial Statistics\n            balance: 0,\n            totalDeposits: 0,\n            totalWithdrawals: 0,\n            totalTournamentEntries: 0,\n            totalTournamentWinnings: 0,\n            netProfit: 0,\n            largestDeposit: 0,\n            largestWithdrawal: 0,\n            averageDeposit: 0,\n            // Tournament Statistics\n            tournamentsEntered: {\n              topdog: 0,\n              total: 0\n            },\n            tournamentsCompleted: {\n              topdog: 0,\n              total: 0\n            },\n            tournamentResults: {\n              firstPlace: 0,\n              secondPlace: 0,\n              thirdPlace: 0,\n              topTen: 0,\n              topFifty: 0,\n              topHundred: 0,\n              cashed: 0,\n              total: 0\n            },\n            totalEntryFees: {\n              topdog: 0,\n              total: 0\n            },\n            totalWinnings: {\n              topdog: 0,\n              total: 0\n            },\n            // Draft Statistics\n            draftsParticipated: 0,\n            draftsCompleted: 0,\n            draftsAbandoned: 0,\n            totalPicksMade: 0,\n            averageDraftPosition: 0,\n            draftPositions: {\n              first: 0,\n              second: 0,\n              third: 0,\n              fourth: 0,\n              fifth: 0,\n              sixth: 0,\n              seventh: 0,\n              eighth: 0,\n              ninth: 0,\n              tenth: 0,\n              eleventh: 0,\n              twelfth: 0\n            },\n            // Player Drafting Statistics\n            playersDrafted: {\n              QB: 0,\n              RB: 0,\n              WR: 0,\n              TE: 0,\n              total: 0\n            },\n            topPicksByPosition: {\n              QB: [],\n              RB: [],\n              WR: [],\n              TE: []\n            },\n            favoriteTeams: {},\n            favoritePlayers: {},\n            // Performance Statistics\n            bestFinish: null,\n            worstFinish: null,\n            averageFinish: 0,\n            totalPoints: 0,\n            averagePoints: 0,\n            highestScore: 0,\n            lowestScore: 0,\n            // Activity Statistics\n            daysActive: 0,\n            lastLogin: (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.serverTimestamp)(),\n            totalTimeSpent: 0,\n            // in minutes\n            sessionsCount: 0,\n            // Achievement Statistics\n            achievements: [],\n            badges: [],\n            streaks: {\n              currentWinningStreak: 0,\n              longestWinningStreak: 0,\n              currentTournamentStreak: 0,\n              longestTournamentStreak: 0\n            },\n            // Social Statistics\n            friendsCount: 0,\n            followersCount: 0,\n            followingCount: 0,\n            totalInteractions: 0,\n            // Preferences\n            favoriteTournamentType: null,\n            preferredDraftPosition: null,\n            autoDraftEnabled: false,\n            notificationsEnabled: true,\n            // Timestamps\n            firstDeposit: null,\n            firstTournament: null,\n            firstWin: null,\n            lastDeposit: null,\n            lastTournament: null,\n            lastWin: null\n          };\n          _context.prev = 1;\n          _context.next = 2;\n          return (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.setDoc)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.doc)(_firebase__WEBPACK_IMPORTED_MODULE_0__.db, 'users', userId), userStats);\n        case 2:\n          return _context.abrupt(\"return\", userStats);\n        case 3:\n          _context.prev = 3;\n          _t = _context[\"catch\"](1);\n          console.error('Error initializing user stats:', _t);\n          throw _t;\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee, null, [[1, 3]]);\n  }));\n  return function initializeUserStats(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\n// Update user statistics for deposits\nvar updateDepositStats = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(userId, amount) {\n    var userRef, userDoc, userData, currentTotalDeposits, currentDepositCount, currentLargestDeposit, updates, _t2;\n    return _regeneratorRuntime().wrap(function (_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          userRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.doc)(_firebase__WEBPACK_IMPORTED_MODULE_0__.db, 'users', userId);\n          _context2.next = 1;\n          return (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.getDoc)(userRef);\n        case 1:\n          userDoc = _context2.sent;\n          if (userDoc.exists()) {\n            _context2.next = 2;\n            break;\n          }\n          _context2.next = 2;\n          return initializeUserStats(userId);\n        case 2:\n          userData = userDoc.exists() ? userDoc.data() : {};\n          currentTotalDeposits = userData.totalDeposits || 0;\n          currentDepositCount = userData.depositCount || 0;\n          currentLargestDeposit = userData.largestDeposit || 0;\n          updates = {\n            balance: (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.increment)(amount),\n            totalDeposits: (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.increment)(amount),\n            depositCount: (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.increment)(1),\n            lastDeposit: (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.serverTimestamp)(),\n            lastActive: (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.serverTimestamp)(),\n            netProfit: (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.increment)(amount),\n            largestDeposit: Math.max(currentLargestDeposit, amount),\n            averageDeposit: (currentTotalDeposits + amount) / (currentDepositCount + 1)\n          }; // Set first deposit timestamp if this is the first deposit\n          if (!userData.firstDeposit) {\n            updates.firstDeposit = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.serverTimestamp)();\n          }\n          _context2.next = 3;\n          return (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.updateDoc)(userRef, updates);\n        case 3:\n          _context2.next = 5;\n          break;\n        case 4:\n          _context2.prev = 4;\n          _t2 = _context2[\"catch\"](0);\n          console.error('Error updating deposit stats:', _t2);\n          throw _t2;\n        case 5:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2, null, [[0, 4]]);\n  }));\n  return function updateDepositStats(_x2, _x3) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\n// Update user statistics for tournament entries\nvar updateTournamentEntryStats = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(userId, tournamentType, entryFee) {\n    var userRef, userDoc, userData, updates, _t3;\n    return _regeneratorRuntime().wrap(function (_context3) {\n      while (1) switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          userRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.doc)(_firebase__WEBPACK_IMPORTED_MODULE_0__.db, 'users', userId);\n          _context3.next = 1;\n          return (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.getDoc)(userRef);\n        case 1:\n          userDoc = _context3.sent;\n          if (userDoc.exists()) {\n            _context3.next = 2;\n            break;\n          }\n          _context3.next = 2;\n          return initializeUserStats(userId);\n        case 2:\n          userData = userDoc.exists() ? userDoc.data() : {};\n          updates = _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty({\n            balance: (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.increment)(-entryFee),\n            totalTournamentEntries: (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.increment)(1)\n          }, \"tournamentsEntered.\".concat(tournamentType), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.increment)(1)), \"tournamentsEntered.total\", (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.increment)(1)), \"totalEntryFees.\".concat(tournamentType), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.increment)(entryFee)), \"totalEntryFees.total\", (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.increment)(entryFee)), \"netProfit\", (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.increment)(-entryFee)), \"lastTournament\", (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.serverTimestamp)()), \"lastActive\", (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.serverTimestamp)()), \"favoriteTournamentType\", tournamentType); // Set first tournament timestamp if this is the first tournament\n          if (!userData.firstTournament) {\n            updates.firstTournament = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.serverTimestamp)();\n          }\n          _context3.next = 3;\n          return (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.updateDoc)(userRef, updates);\n        case 3:\n          _context3.next = 5;\n          break;\n        case 4:\n          _context3.prev = 4;\n          _t3 = _context3[\"catch\"](0);\n          console.error('Error updating tournament entry stats:', _t3);\n          throw _t3;\n        case 5:\n        case \"end\":\n          return _context3.stop();\n      }\n    }, _callee3, null, [[0, 4]]);\n  }));\n  return function updateTournamentEntryStats(_x4, _x5, _x6) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\n// Update user statistics for tournament results\nvar updateTournamentResultStats = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(userId, tournamentType, finish, winnings, points) {\n    var userRef, userDoc, userData, updates, _userData$tournamentR, currentTotalPoints, currentTournamentCount, _userData$tournamentR2, currentTotalFinishes, currentAverageFinish, _t4;\n    return _regeneratorRuntime().wrap(function (_context4) {\n      while (1) switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          userRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.doc)(_firebase__WEBPACK_IMPORTED_MODULE_0__.db, 'users', userId);\n          _context4.next = 1;\n          return (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.getDoc)(userRef);\n        case 1:\n          userDoc = _context4.sent;\n          if (userDoc.exists()) {\n            _context4.next = 2;\n            break;\n          }\n          console.warn('User document does not exist for tournament result update');\n          return _context4.abrupt(\"return\");\n        case 2:\n          userData = userDoc.data();\n          updates = _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty({}, \"tournamentsCompleted.\".concat(tournamentType), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.increment)(1)), \"tournamentsCompleted.total\", (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.increment)(1)), \"totalTournamentWinnings\", (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.increment)(winnings)), \"totalWinnings.\".concat(tournamentType), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.increment)(winnings)), \"totalWinnings.total\", (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.increment)(winnings)), \"netProfit\", (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.increment)(winnings)), \"balance\", (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.increment)(winnings)), \"lastActive\", (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.serverTimestamp)()); // Update tournament results based on finish\n          if (finish === 1) {\n            updates['tournamentResults.firstPlace'] = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.increment)(1);\n            updates['tournamentResults.cashed'] = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.increment)(1);\n            if (!userData.firstWin) {\n              updates.firstWin = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.serverTimestamp)();\n            }\n            updates.lastWin = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.serverTimestamp)();\n          } else if (finish === 2) {\n            updates['tournamentResults.secondPlace'] = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.increment)(1);\n            updates['tournamentResults.cashed'] = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.increment)(1);\n          } else if (finish === 3) {\n            updates['tournamentResults.thirdPlace'] = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.increment)(1);\n            updates['tournamentResults.cashed'] = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.increment)(1);\n          } else if (finish <= 10) {\n            updates['tournamentResults.topTen'] = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.increment)(1);\n            updates['tournamentResults.cashed'] = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.increment)(1);\n          } else if (finish <= 50) {\n            updates['tournamentResults.topFifty'] = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.increment)(1);\n            updates['tournamentResults.cashed'] = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.increment)(1);\n          } else if (finish <= 100) {\n            updates['tournamentResults.topHundred'] = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.increment)(1);\n            updates['tournamentResults.cashed'] = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.increment)(1);\n          }\n          updates['tournamentResults.total'] = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.increment)(1);\n\n          // Update performance statistics\n          if (points) {\n            currentTotalPoints = userData.totalPoints || 0;\n            currentTournamentCount = ((_userData$tournamentR = userData.tournamentResults) === null || _userData$tournamentR === void 0 ? void 0 : _userData$tournamentR.total) || 0;\n            updates.totalPoints = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.increment)(points);\n            updates.averagePoints = (currentTotalPoints + points) / (currentTournamentCount + 1);\n            updates.highestScore = Math.max(userData.highestScore || 0, points);\n            updates.lowestScore = userData.lowestScore ? Math.min(userData.lowestScore, points) : points;\n          }\n\n          // Update best/worst finish\n          if (finish) {\n            if (!userData.bestFinish || finish < userData.bestFinish) {\n              updates.bestFinish = finish;\n            }\n            if (!userData.worstFinish || finish > userData.worstFinish) {\n              updates.worstFinish = finish;\n            }\n            currentTotalFinishes = ((_userData$tournamentR2 = userData.tournamentResults) === null || _userData$tournamentR2 === void 0 ? void 0 : _userData$tournamentR2.total) || 0;\n            currentAverageFinish = userData.averageFinish || 0;\n            updates.averageFinish = (currentAverageFinish * currentTotalFinishes + finish) / (currentTotalFinishes + 1);\n          }\n          _context4.next = 3;\n          return (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.updateDoc)(userRef, updates);\n        case 3:\n          _context4.next = 5;\n          break;\n        case 4:\n          _context4.prev = 4;\n          _t4 = _context4[\"catch\"](0);\n          console.error('Error updating tournament result stats:', _t4);\n          throw _t4;\n        case 5:\n        case \"end\":\n          return _context4.stop();\n      }\n    }, _callee4, null, [[0, 4]]);\n  }));\n  return function updateTournamentResultStats(_x7, _x8, _x9, _x10, _x11) {\n    return _ref4.apply(this, arguments);\n  };\n}();\n\n// Update draft statistics\nvar updateDraftStats = /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(userId, draftData) {\n    var userRef, userDoc, userData, updates, currentTotalPositions, currentAveragePosition, positionCounts, teamCounts, _t5;\n    return _regeneratorRuntime().wrap(function (_context5) {\n      while (1) switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          userRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.doc)(_firebase__WEBPACK_IMPORTED_MODULE_0__.db, 'users', userId);\n          _context5.next = 1;\n          return (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.getDoc)(userRef);\n        case 1:\n          userDoc = _context5.sent;\n          if (userDoc.exists()) {\n            _context5.next = 2;\n            break;\n          }\n          _context5.next = 2;\n          return initializeUserStats(userId);\n        case 2:\n          userData = userDoc.exists() ? userDoc.data() : {};\n          updates = {\n            draftsParticipated: (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.increment)(1),\n            lastActive: (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.serverTimestamp)()\n          }; // Update draft position statistics\n          if (draftData.position) {\n            updates[\"draftPositions.\".concat(draftData.position)] = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.increment)(1);\n\n            // Update average draft position\n            currentTotalPositions = Object.values(userData.draftPositions || {}).reduce(function (sum, count) {\n              return sum + count;\n            }, 0);\n            currentAveragePosition = userData.averageDraftPosition || 0;\n            updates.averageDraftPosition = (currentAveragePosition * currentTotalPositions + draftData.position) / (currentTotalPositions + 1);\n          }\n\n          // Update player drafting statistics\n          if (draftData.players) {\n            positionCounts = {};\n            draftData.players.forEach(function (player) {\n              var position = player.position;\n              positionCounts[position] = (positionCounts[position] || 0) + 1;\n              updates[\"playersDrafted.\".concat(position)] = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.increment)(1);\n              updates['playersDrafted.total'] = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.increment)(1);\n            });\n\n            // Update favorite teams\n            teamCounts = {};\n            draftData.players.forEach(function (player) {\n              var team = player.team;\n              teamCounts[team] = (teamCounts[team] || 0) + 1;\n            });\n            Object.entries(teamCounts).forEach(function (_ref6) {\n              var _userData$favoriteTea;\n              var _ref7 = _slicedToArray(_ref6, 2),\n                team = _ref7[0],\n                count = _ref7[1];\n              var currentCount = ((_userData$favoriteTea = userData.favoriteTeams) === null || _userData$favoriteTea === void 0 ? void 0 : _userData$favoriteTea[team]) || 0;\n              updates[\"favoriteTeams.\".concat(team)] = currentCount + count;\n            });\n          }\n          _context5.next = 3;\n          return (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.updateDoc)(userRef, updates);\n        case 3:\n          _context5.next = 5;\n          break;\n        case 4:\n          _context5.prev = 4;\n          _t5 = _context5[\"catch\"](0);\n          console.error('Error updating draft stats:', _t5);\n          throw _t5;\n        case 5:\n        case \"end\":\n          return _context5.stop();\n      }\n    }, _callee5, null, [[0, 4]]);\n  }));\n  return function updateDraftStats(_x12, _x13) {\n    return _ref5.apply(this, arguments);\n  };\n}();\n\n// Update activity statistics\nvar updateActivityStats = /*#__PURE__*/function () {\n  var _ref8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(userId) {\n    var sessionData,\n      userRef,\n      userDoc,\n      updates,\n      _args6 = arguments,\n      _t6;\n    return _regeneratorRuntime().wrap(function (_context6) {\n      while (1) switch (_context6.prev = _context6.next) {\n        case 0:\n          sessionData = _args6.length > 1 && _args6[1] !== undefined ? _args6[1] : {};\n          _context6.prev = 1;\n          userRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.doc)(_firebase__WEBPACK_IMPORTED_MODULE_0__.db, 'users', userId);\n          _context6.next = 2;\n          return (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.getDoc)(userRef);\n        case 2:\n          userDoc = _context6.sent;\n          if (userDoc.exists()) {\n            _context6.next = 3;\n            break;\n          }\n          _context6.next = 3;\n          return initializeUserStats(userId);\n        case 3:\n          updates = {\n            lastActive: (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.serverTimestamp)(),\n            lastLogin: (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.serverTimestamp)(),\n            sessionsCount: (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.increment)(1)\n          }; // Update time spent if provided\n          if (sessionData.timeSpent) {\n            updates.totalTimeSpent = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.increment)(sessionData.timeSpent);\n          }\n          _context6.next = 4;\n          return (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.updateDoc)(userRef, updates);\n        case 4:\n          _context6.next = 6;\n          break;\n        case 5:\n          _context6.prev = 5;\n          _t6 = _context6[\"catch\"](1);\n          console.error('Error updating activity stats:', _t6);\n          throw _t6;\n        case 6:\n        case \"end\":\n          return _context6.stop();\n      }\n    }, _callee6, null, [[1, 5]]);\n  }));\n  return function updateActivityStats(_x14) {\n    return _ref8.apply(this, arguments);\n  };\n}();\n\n// Mock user stats for development when Firebase is not available\nvar getMockUserStats = function getMockUserStats(userId) {\n  return {\n    id: userId,\n    balance: 100.00,\n    totalDeposits: 150.00,\n    totalWithdrawals: 0,\n    totalTournamentEntries: 2,\n    totalTournamentWinnings: 25.00,\n    netProfit: -25.00,\n    tournamentsEntered: {\n      topdog: 1,\n      total: 1\n    },\n    tournamentsCompleted: {\n      topdog: 0,\n      total: 0\n    },\n    tournamentResults: {\n      firstPlace: 0,\n      secondPlace: 0,\n      thirdPlace: 0,\n      topTen: 0,\n      topFifty: 0,\n      topHundred: 0,\n      cashed: 0,\n      total: 0\n    },\n    totalEntryFees: {\n      topdog: 25,\n      total: 25\n    },\n    totalWinnings: {\n      topdog: 0,\n      total: 0\n    },\n    draftsParticipated: 2,\n    draftsCompleted: 0,\n    draftsAbandoned: 0,\n    totalPicksMade: 36,\n    averageDraftPosition: 6.5,\n    playersDrafted: {\n      QB: 2,\n      RB: 6,\n      WR: 8,\n      TE: 4,\n      total: 20\n    },\n    createdAt: new Date(),\n    lastActive: new Date()\n  };\n};\n\n// Get comprehensive user statistics\nvar getUserStats = /*#__PURE__*/function () {\n  var _ref9 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(userId) {\n    return _regeneratorRuntime().wrap(function (_context8) {\n      while (1) switch (_context8.prev = _context8.next) {\n        case 0:\n          if (false) {}\n          return _context8.abrupt(\"return\", getMockUserStats(userId));\n        case 1:\n          if ((0,_firebase__WEBPACK_IMPORTED_MODULE_0__.isAuthEnabled)()) {\n            _context8.next = 2;\n            break;\n          }\n          console.log('🔄 Using mock user stats (Firebase auth not enabled)');\n          return _context8.abrupt(\"return\", getMockUserStats(userId));\n        case 2:\n          return _context8.abrupt(\"return\", (0,_firebase__WEBPACK_IMPORTED_MODULE_0__.safeFirebaseOperation)( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {\n            var userDoc;\n            return _regeneratorRuntime().wrap(function (_context7) {\n              while (1) switch (_context7.prev = _context7.next) {\n                case 0:\n                  _context7.next = 1;\n                  return (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.getDoc)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.doc)(_firebase__WEBPACK_IMPORTED_MODULE_0__.db, 'users', userId));\n                case 1:\n                  userDoc = _context7.sent;\n                  if (userDoc.exists()) {\n                    _context7.next = 2;\n                    break;\n                  }\n                  return _context7.abrupt(\"return\", null);\n                case 2:\n                  return _context7.abrupt(\"return\", userDoc.data());\n                case 3:\n                case \"end\":\n                  return _context7.stop();\n              }\n            }, _callee7);\n          })), getMockUserStats(userId)));\n        case 3:\n        case \"end\":\n          return _context8.stop();\n      }\n    }, _callee8);\n  }));\n  return function getUserStats(_x15) {\n    return _ref9.apply(this, arguments);\n  };\n}();\n\n// Calculate user rank based on various metrics\nvar calculateUserRank = function calculateUserRank(userStats) {\n  var _userStats$tournament;\n  if (!userStats) return null;\n  var rank = {\n    overall: 0,\n    financial: 0,\n    tournament: 0,\n    draft: 0,\n    performance: 0\n  };\n\n  // Financial rank (based on net profit)\n  rank.financial = userStats.netProfit || 0;\n\n  // Tournament rank (based on total winnings and finish rate)\n  var finishRate = ((_userStats$tournament = userStats.tournamentResults) === null || _userStats$tournament === void 0 ? void 0 : _userStats$tournament.total) > 0 ? userStats.tournamentResults.cashed / userStats.tournamentResults.total * 100 : 0;\n  rank.tournament = (userStats.totalTournamentWinnings || 0) + finishRate * 100;\n\n  // Draft rank (based on participation and completion rate)\n  var draftCompletionRate = userStats.draftsParticipated > 0 ? userStats.draftsCompleted / userStats.draftsParticipated * 100 : 0;\n  rank.draft = (userStats.draftsParticipated || 0) + draftCompletionRate * 10;\n\n  // Performance rank (based on average finish and points)\n  rank.performance = (userStats.averagePoints || 0) - (userStats.averageFinish || 0);\n\n  // Overall rank (weighted combination)\n  rank.overall = rank.financial * 0.4 + rank.tournament * 0.3 + rank.draft * 0.2 + rank.performance * 0.1;\n  return rank;\n};\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-node)/./lib/userStats.js\n");

/***/ }),

/***/ "(pages-dir-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES&page=%2Fdraft%2Ftopdog%2F%5BroomId%5D&preferredRegion=&absolutePagePath=.%2Fpages%2Fdraft%2Ftopdog%2F%5BroomId%5D.js&absoluteAppPath=private-next-pages%2F_app&absoluteDocumentPath=private-next-pages%2F_document&middlewareConfigBase64=e30%3D!":
/*!**********************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES&page=%2Fdraft%2Ftopdog%2F%5BroomId%5D&preferredRegion=&absolutePagePath=.%2Fpages%2Fdraft%2Ftopdog%2F%5BroomId%5D.js&absoluteAppPath=private-next-pages%2F_app&absoluteDocumentPath=private-next-pages%2F_document&middlewareConfigBase64=e30%3D! ***!
  \**********************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   getServerSideProps: () => (/* binding */ getServerSideProps),\n/* harmony export */   getStaticPaths: () => (/* binding */ getStaticPaths),\n/* harmony export */   getStaticProps: () => (/* binding */ getStaticProps),\n/* harmony export */   reportWebVitals: () => (/* binding */ reportWebVitals),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   unstable_getServerProps: () => (/* binding */ unstable_getServerProps),\n/* harmony export */   unstable_getServerSideProps: () => (/* binding */ unstable_getServerSideProps),\n/* harmony export */   unstable_getStaticParams: () => (/* binding */ unstable_getStaticParams),\n/* harmony export */   unstable_getStaticPaths: () => (/* binding */ unstable_getStaticPaths),\n/* harmony export */   unstable_getStaticProps: () => (/* binding */ unstable_getStaticProps)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_pages_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/pages/module.compiled */ \"(pages-dir-node)/./node_modules/next/dist/server/route-modules/pages/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_pages_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_pages_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(pages-dir-node)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(pages-dir-node)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var private_next_pages_document__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! private-next-pages/_document */ \"(pages-dir-node)/./pages/_document.js\");\n/* harmony import */ var private_next_pages_app__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! private-next-pages/_app */ \"(pages-dir-node)/./pages/_app.js\");\n/* harmony import */ var _pages_draft_topdog_roomId_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./pages/draft/topdog/[roomId].js */ \"(pages-dir-node)/./pages/draft/topdog/[roomId].js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([private_next_pages_app__WEBPACK_IMPORTED_MODULE_4__, _pages_draft_topdog_roomId_js__WEBPACK_IMPORTED_MODULE_5__]);\n([private_next_pages_app__WEBPACK_IMPORTED_MODULE_4__, _pages_draft_topdog_roomId_js__WEBPACK_IMPORTED_MODULE_5__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n// Import the app and document modules.\n\n\n// Import the userland code.\n\n// Re-export the component (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_draft_topdog_roomId_js__WEBPACK_IMPORTED_MODULE_5__, 'default'));\n// Re-export methods.\nconst getStaticProps = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_draft_topdog_roomId_js__WEBPACK_IMPORTED_MODULE_5__, 'getStaticProps');\nconst getStaticPaths = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_draft_topdog_roomId_js__WEBPACK_IMPORTED_MODULE_5__, 'getStaticPaths');\nconst getServerSideProps = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_draft_topdog_roomId_js__WEBPACK_IMPORTED_MODULE_5__, 'getServerSideProps');\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_draft_topdog_roomId_js__WEBPACK_IMPORTED_MODULE_5__, 'config');\nconst reportWebVitals = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_draft_topdog_roomId_js__WEBPACK_IMPORTED_MODULE_5__, 'reportWebVitals');\n// Re-export legacy methods.\nconst unstable_getStaticProps = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_draft_topdog_roomId_js__WEBPACK_IMPORTED_MODULE_5__, 'unstable_getStaticProps');\nconst unstable_getStaticPaths = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_draft_topdog_roomId_js__WEBPACK_IMPORTED_MODULE_5__, 'unstable_getStaticPaths');\nconst unstable_getStaticParams = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_draft_topdog_roomId_js__WEBPACK_IMPORTED_MODULE_5__, 'unstable_getStaticParams');\nconst unstable_getServerProps = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_draft_topdog_roomId_js__WEBPACK_IMPORTED_MODULE_5__, 'unstable_getServerProps');\nconst unstable_getServerSideProps = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_draft_topdog_roomId_js__WEBPACK_IMPORTED_MODULE_5__, 'unstable_getServerSideProps');\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_route_modules_pages_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES,\n        page: \"/draft/topdog/[roomId]\",\n        pathname: \"/draft/topdog/[roomId]\",\n        // The following aren't used in production.\n        bundlePath: '',\n        filename: ''\n    },\n    components: {\n        // default export might not exist when optimized for data only\n        App: private_next_pages_app__WEBPACK_IMPORTED_MODULE_4__[\"default\"],\n        Document: private_next_pages_document__WEBPACK_IMPORTED_MODULE_3__[\"default\"]\n    },\n    userland: _pages_draft_topdog_roomId_js__WEBPACK_IMPORTED_MODULE_5__\n});\n\n//# sourceMappingURL=pages.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1ub2RlKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtcm91dGUtbG9hZGVyL2luZGV4LmpzP2tpbmQ9UEFHRVMmcGFnZT0lMkZkcmFmdCUyRnRvcGRvZyUyRiU1QnJvb21JZCU1RCZwcmVmZXJyZWRSZWdpb249JmFic29sdXRlUGFnZVBhdGg9LiUyRnBhZ2VzJTJGZHJhZnQlMkZ0b3Bkb2clMkYlNUJyb29tSWQlNUQuanMmYWJzb2x1dGVBcHBQYXRoPXByaXZhdGUtbmV4dC1wYWdlcyUyRl9hcHAmYWJzb2x1dGVEb2N1bWVudFBhdGg9cHJpdmF0ZS1uZXh0LXBhZ2VzJTJGX2RvY3VtZW50Jm1pZGRsZXdhcmVDb25maWdCYXNlNjQ9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQXdGO0FBQ2hDO0FBQ0U7QUFDMUQ7QUFDeUQ7QUFDVjtBQUMvQztBQUM2RDtBQUM3RDtBQUNBLGlFQUFlLHdFQUFLLENBQUMsMERBQVEsWUFBWSxFQUFDO0FBQzFDO0FBQ08sdUJBQXVCLHdFQUFLLENBQUMsMERBQVE7QUFDckMsdUJBQXVCLHdFQUFLLENBQUMsMERBQVE7QUFDckMsMkJBQTJCLHdFQUFLLENBQUMsMERBQVE7QUFDekMsZUFBZSx3RUFBSyxDQUFDLDBEQUFRO0FBQzdCLHdCQUF3Qix3RUFBSyxDQUFDLDBEQUFRO0FBQzdDO0FBQ08sZ0NBQWdDLHdFQUFLLENBQUMsMERBQVE7QUFDOUMsZ0NBQWdDLHdFQUFLLENBQUMsMERBQVE7QUFDOUMsaUNBQWlDLHdFQUFLLENBQUMsMERBQVE7QUFDL0MsZ0NBQWdDLHdFQUFLLENBQUMsMERBQVE7QUFDOUMsb0NBQW9DLHdFQUFLLENBQUMsMERBQVE7QUFDekQ7QUFDTyx3QkFBd0Isa0dBQWdCO0FBQy9DO0FBQ0EsY0FBYyxrRUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxhQUFhLDhEQUFXO0FBQ3hCLGtCQUFrQixtRUFBZ0I7QUFDbEMsS0FBSztBQUNMLFlBQVk7QUFDWixDQUFDOztBQUVELGlDIiwic291cmNlcyI6WyIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUGFnZXNSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL3JvdXRlLW1vZHVsZXMvcGFnZXMvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBob2lzdCB9IGZyb20gXCJuZXh0L2Rpc3QvYnVpbGQvdGVtcGxhdGVzL2hlbHBlcnNcIjtcbi8vIEltcG9ydCB0aGUgYXBwIGFuZCBkb2N1bWVudCBtb2R1bGVzLlxuaW1wb3J0ICogYXMgZG9jdW1lbnQgZnJvbSBcInByaXZhdGUtbmV4dC1wYWdlcy9fZG9jdW1lbnRcIjtcbmltcG9ydCAqIGFzIGFwcCBmcm9tIFwicHJpdmF0ZS1uZXh0LXBhZ2VzL19hcHBcIjtcbi8vIEltcG9ydCB0aGUgdXNlcmxhbmQgY29kZS5cbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCIuL3BhZ2VzL2RyYWZ0L3RvcGRvZy9bcm9vbUlkXS5qc1wiO1xuLy8gUmUtZXhwb3J0IHRoZSBjb21wb25lbnQgKHNob3VsZCBiZSB0aGUgZGVmYXVsdCBleHBvcnQpLlxuZXhwb3J0IGRlZmF1bHQgaG9pc3QodXNlcmxhbmQsICdkZWZhdWx0Jyk7XG4vLyBSZS1leHBvcnQgbWV0aG9kcy5cbmV4cG9ydCBjb25zdCBnZXRTdGF0aWNQcm9wcyA9IGhvaXN0KHVzZXJsYW5kLCAnZ2V0U3RhdGljUHJvcHMnKTtcbmV4cG9ydCBjb25zdCBnZXRTdGF0aWNQYXRocyA9IGhvaXN0KHVzZXJsYW5kLCAnZ2V0U3RhdGljUGF0aHMnKTtcbmV4cG9ydCBjb25zdCBnZXRTZXJ2ZXJTaWRlUHJvcHMgPSBob2lzdCh1c2VybGFuZCwgJ2dldFNlcnZlclNpZGVQcm9wcycpO1xuZXhwb3J0IGNvbnN0IGNvbmZpZyA9IGhvaXN0KHVzZXJsYW5kLCAnY29uZmlnJyk7XG5leHBvcnQgY29uc3QgcmVwb3J0V2ViVml0YWxzID0gaG9pc3QodXNlcmxhbmQsICdyZXBvcnRXZWJWaXRhbHMnKTtcbi8vIFJlLWV4cG9ydCBsZWdhY3kgbWV0aG9kcy5cbmV4cG9ydCBjb25zdCB1bnN0YWJsZV9nZXRTdGF0aWNQcm9wcyA9IGhvaXN0KHVzZXJsYW5kLCAndW5zdGFibGVfZ2V0U3RhdGljUHJvcHMnKTtcbmV4cG9ydCBjb25zdCB1bnN0YWJsZV9nZXRTdGF0aWNQYXRocyA9IGhvaXN0KHVzZXJsYW5kLCAndW5zdGFibGVfZ2V0U3RhdGljUGF0aHMnKTtcbmV4cG9ydCBjb25zdCB1bnN0YWJsZV9nZXRTdGF0aWNQYXJhbXMgPSBob2lzdCh1c2VybGFuZCwgJ3Vuc3RhYmxlX2dldFN0YXRpY1BhcmFtcycpO1xuZXhwb3J0IGNvbnN0IHVuc3RhYmxlX2dldFNlcnZlclByb3BzID0gaG9pc3QodXNlcmxhbmQsICd1bnN0YWJsZV9nZXRTZXJ2ZXJQcm9wcycpO1xuZXhwb3J0IGNvbnN0IHVuc3RhYmxlX2dldFNlcnZlclNpZGVQcm9wcyA9IGhvaXN0KHVzZXJsYW5kLCAndW5zdGFibGVfZ2V0U2VydmVyU2lkZVByb3BzJyk7XG4vLyBDcmVhdGUgYW5kIGV4cG9ydCB0aGUgcm91dGUgbW9kdWxlIHRoYXQgd2lsbCBiZSBjb25zdW1lZC5cbmV4cG9ydCBjb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBQYWdlc1JvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5QQUdFUyxcbiAgICAgICAgcGFnZTogXCIvZHJhZnQvdG9wZG9nL1tyb29tSWRdXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9kcmFmdC90b3Bkb2cvW3Jvb21JZF1cIixcbiAgICAgICAgLy8gVGhlIGZvbGxvd2luZyBhcmVuJ3QgdXNlZCBpbiBwcm9kdWN0aW9uLlxuICAgICAgICBidW5kbGVQYXRoOiAnJyxcbiAgICAgICAgZmlsZW5hbWU6ICcnXG4gICAgfSxcbiAgICBjb21wb25lbnRzOiB7XG4gICAgICAgIC8vIGRlZmF1bHQgZXhwb3J0IG1pZ2h0IG5vdCBleGlzdCB3aGVuIG9wdGltaXplZCBmb3IgZGF0YSBvbmx5XG4gICAgICAgIEFwcDogYXBwLmRlZmF1bHQsXG4gICAgICAgIERvY3VtZW50OiBkb2N1bWVudC5kZWZhdWx0XG4gICAgfSxcbiAgICB1c2VybGFuZFxufSk7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBhZ2VzLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(pages-dir-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES&page=%2Fdraft%2Ftopdog%2F%5BroomId%5D&preferredRegion=&absolutePagePath=.%2Fpages%2Fdraft%2Ftopdog%2F%5BroomId%5D.js&absoluteAppPath=private-next-pages%2F_app&absoluteDocumentPath=private-next-pages%2F_document&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(pages-dir-node)/./pages/_app.js":
/*!***********************!*\
  !*** ./pages/_app.js ***!
  \***********************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _styles_globals_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../styles/globals.css */ \"(pages-dir-node)/./styles/globals.css\");\n/* harmony import */ var _styles_globals_css__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_styles_globals_css__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _components_Navbar__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../components/Navbar */ \"(pages-dir-node)/./components/Navbar.js\");\n/* harmony import */ var _components_Footer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../components/Footer */ \"(pages-dir-node)/./components/Footer.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_components_Navbar__WEBPACK_IMPORTED_MODULE_2__]);\n_components_Navbar__WEBPACK_IMPORTED_MODULE_2__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw new Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw new Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, \"catch\": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n\n\n\nfunction MyApp(_ref) {\n  var Component = _ref.Component,\n    pageProps = _ref.pageProps;\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {\n    // Initialize Firebase authentication when the app loads\n    // Wrap in try-catch to prevent authentication errors from crashing the app\n    var initFirebase = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var _yield$import, initializeAuth, _t;\n        return _regeneratorRuntime().wrap(function (_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 1;\n              return Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ../lib/firebase */ \"(pages-dir-node)/./lib/firebase.js\"));\n            case 1:\n              _yield$import = _context.sent;\n              initializeAuth = _yield$import.initializeAuth;\n              _context.next = 2;\n              return initializeAuth();\n            case 2:\n              _context.next = 4;\n              break;\n            case 3:\n              _context.prev = 3;\n              _t = _context[\"catch\"](0);\n              console.log('🔄 Firebase initialization failed - app will use mock data');\n              console.log('This is normal if Firebase is not configured');\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[0, 3]]);\n      }));\n      return function initFirebase() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    initFirebase();\n  }, []);\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_components_Navbar__WEBPACK_IMPORTED_MODULE_2__[\"default\"], null), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(Component, pageProps), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_components_Footer__WEBPACK_IMPORTED_MODULE_3__[\"default\"], null));\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (MyApp);\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-node)/./pages/_app.js\n");

/***/ }),

/***/ "(pages-dir-node)/./pages/_document.js":
/*!****************************!*\
  !*** ./pages/_document.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Document)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_document__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/document */ \"(pages-dir-node)/./node_modules/next/document.js\");\n/* harmony import */ var next_document__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_document__WEBPACK_IMPORTED_MODULE_1__);\n\n\nfunction Document() {\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(next_document__WEBPACK_IMPORTED_MODULE_1__.Html, {\n    lang: \"en\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(next_document__WEBPACK_IMPORTED_MODULE_1__.Head, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"link\", {\n    href: \"https://fonts.googleapis.com/css2?family=Anton+SC&display=swap\",\n    rel: \"stylesheet\"\n  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"body\", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(next_document__WEBPACK_IMPORTED_MODULE_1__.Main, null), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(next_document__WEBPACK_IMPORTED_MODULE_1__.NextScript, null)));\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1ub2RlKS8uL3BhZ2VzL19kb2N1bWVudC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUEwQjtBQUNrQztBQUU3QyxTQUFTSyxRQUFRQSxDQUFBLEVBQUc7RUFDakMsb0JBQ0VMLDBEQUFBLENBQUNDLCtDQUFJO0lBQUNNLElBQUksRUFBQztFQUFJLGdCQUNiUCwwREFBQSxDQUFDRSwrQ0FBSSxxQkFDSEYsMERBQUE7SUFBTVEsSUFBSSxFQUFDLGdFQUFnRTtJQUFDQyxHQUFHLEVBQUM7RUFBWSxDQUFFLENBQzFGLENBQUMsZUFDUFQsMERBQUEsNEJBQ0VBLDBEQUFBLENBQUNHLCtDQUFJLE1BQUUsQ0FBQyxlQUNSSCwwREFBQSxDQUFDSSxxREFBVSxNQUFFLENBQ1QsQ0FDRixDQUFDO0FBRVgiLCJzb3VyY2VzIjpbIi9Vc2Vycy90ZWRkeS9iZXN0YmFsbC1zaXRlL3BhZ2VzL19kb2N1bWVudC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgSHRtbCwgSGVhZCwgTWFpbiwgTmV4dFNjcmlwdCB9IGZyb20gJ25leHQvZG9jdW1lbnQnXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIERvY3VtZW50KCkge1xuICByZXR1cm4gKFxuICAgIDxIdG1sIGxhbmc9XCJlblwiPlxuICAgICAgPEhlYWQ+XG4gICAgICAgIDxsaW5rIGhyZWY9XCJodHRwczovL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2NzczI/ZmFtaWx5PUFudG9uK1NDJmRpc3BsYXk9c3dhcFwiIHJlbD1cInN0eWxlc2hlZXRcIiAvPlxuICAgICAgPC9IZWFkPlxuICAgICAgPGJvZHk+XG4gICAgICAgIDxNYWluIC8+XG4gICAgICAgIDxOZXh0U2NyaXB0IC8+XG4gICAgICA8L2JvZHk+XG4gICAgPC9IdG1sPlxuICApXG59ICJdLCJuYW1lcyI6WyJSZWFjdCIsIkh0bWwiLCJIZWFkIiwiTWFpbiIsIk5leHRTY3JpcHQiLCJEb2N1bWVudCIsImNyZWF0ZUVsZW1lbnQiLCJsYW5nIiwiaHJlZiIsInJlbCJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(pages-dir-node)/./pages/_document.js\n");

/***/ }),

/***/ "(pages-dir-node)/./pages/draft/topdog/[roomId].js":
/*!****************************************!*\
  !*** ./pages/draft/topdog/[roomId].js ***!
  \****************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ DraftRoom)\n/* harmony export */ });\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/router */ \"(pages-dir-node)/./node_modules/next/router.js\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _lib_firebase__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../lib/firebase */ \"(pages-dir-node)/./lib/firebase.js\");\n/* harmony import */ var firebase_firestore__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! firebase/firestore */ \"firebase/firestore\");\n/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! next/link */ \"(pages-dir-node)/./node_modules/next/link.js\");\n/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(next_link__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var react_beautiful_dnd__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react-beautiful-dnd */ \"react-beautiful-dnd\");\n/* harmony import */ var react_beautiful_dnd__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(react_beautiful_dnd__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _lib_playerPool__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../lib/playerPool */ \"(pages-dir-node)/./lib/playerPool.js\");\n/* harmony import */ var _lib_mockDrafters__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../lib/mockDrafters */ \"(pages-dir-node)/./lib/mockDrafters.js\");\n/* harmony import */ var _components_FullDraftBoard__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../components/FullDraftBoard */ \"(pages-dir-node)/./components/FullDraftBoard.js\");\n/* harmony import */ var _components_team_logos__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../components/team-logos */ \"(pages-dir-node)/./components/team-logos/index.js\");\n/* harmony import */ var next_dynamic__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! next/dynamic */ \"(pages-dir-node)/./node_modules/next/dynamic.js\");\n/* harmony import */ var next_dynamic__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(next_dynamic__WEBPACK_IMPORTED_MODULE_10__);\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_lib_firebase__WEBPACK_IMPORTED_MODULE_2__, firebase_firestore__WEBPACK_IMPORTED_MODULE_3__]);\n([_lib_firebase__WEBPACK_IMPORTED_MODULE_2__, firebase_firestore__WEBPACK_IMPORTED_MODULE_3__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw new Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw new Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, \"catch\": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n\n\n\n\n\n\n\n\n\n\n\nvar SevenSegmentCountdown = next_dynamic__WEBPACK_IMPORTED_MODULE_10___default()(function () {\n  return __webpack_require__.e(/*! import() */ \"_pages-dir-node_components_SevenSegmentCountdown_js\").then(__webpack_require__.bind(__webpack_require__, /*! ../../../components/SevenSegmentCountdown */ \"(pages-dir-node)/./components/SevenSegmentCountdown.js\"));\n}, {\n  ssr: false\n});\n\n// Team colors (from FullDraftBoard)\nvar TEAM_COLORS = ['#2563eb',\n// blue\n'#e11d48',\n// red\n'#10b981',\n// green\n'#f59e42',\n// orange\n'#a21caf',\n// purple\n'#14b8a6',\n// teal\n'#facc15',\n// yellow\n'#f472b6',\n// pink\n'#6b7280',\n// gray\n'#92400e',\n// brown\n'#84cc16',\n// lime\n'#6366f1' // indigo\n];\n\nfunction getRandomName() {\n  return 'Not Todd Middleton';\n}\nfunction DraftRoom() {\n  var _room$settings, _room$settings5, _room$settings7, _currentTeamRosterGro, _currentTeamRosterGro2, _currentTeamRosterGro3, _currentTeamRosterGro4, _currentTeamStartingL, _currentTeamStartingL2, _currentTeamStartingL3, _currentTeamStartingL4, _currentTeamStartingL5, _currentTeamStartingL6, _currentTeamStartingL7, _currentTeamStartingL8;\n  var router = (0,next_router__WEBPACK_IMPORTED_MODULE_0__.useRouter)();\n  var roomId = router.query.roomId;\n  var _useState = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    room = _useState2[0],\n    setRoom = _useState2[1];\n  var _useState3 = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    participants = _useState4[0],\n    setParticipants = _useState4[1];\n  var _useState5 = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    picks = _useState6[0],\n    setPicks = _useState6[1];\n  var _useState7 = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    userName = _useState8[0],\n    setUserName = _useState8[1];\n  var _useState9 = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(_lib_playerPool__WEBPACK_IMPORTED_MODULE_6__.PLAYER_POOL),\n    _useState10 = _slicedToArray(_useState9, 2),\n    availablePlayers = _useState10[0],\n    setAvailablePlayers = _useState10[1];\n  var _useState11 = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false),\n    _useState12 = _slicedToArray(_useState11, 2),\n    pickLoading = _useState12[0],\n    setPickLoading = _useState12[1];\n  var _useState13 = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(30),\n    _useState14 = _slicedToArray(_useState13, 2),\n    timer = _useState14[0],\n    setTimer = _useState14[1];\n  var timerRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)();\n  var prevPickLength = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(0);\n  var _useState15 = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]),\n    _useState16 = _slicedToArray(_useState15, 2),\n    rankings = _useState16[0],\n    setRankings = _useState16[1];\n  var _useState17 = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(''),\n    _useState18 = _slicedToArray(_useState17, 2),\n    rankingsText = _useState18[0],\n    setRankingsText = _useState18[1];\n  var _useState19 = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]),\n    _useState20 = _slicedToArray(_useState19, 2),\n    queue = _useState20[0],\n    setQueue = _useState20[1];\n  var _useState21 = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false),\n    _useState22 = _slicedToArray(_useState21, 2),\n    showModal = _useState22[0],\n    setShowModal = _useState22[1];\n  var _useState23 = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false),\n    _useState24 = _slicedToArray(_useState23, 2),\n    showTeamModal = _useState24[0],\n    setShowTeamModal = _useState24[1];\n  var _useState25 = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(userName),\n    _useState26 = _slicedToArray(_useState25, 2),\n    selectedTeam = _useState26[0],\n    setSelectedTeam = _useState26[1];\n  var _useState27 = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false),\n    _useState28 = _slicedToArray(_useState27, 2),\n    showDraftOrderModal = _useState28[0],\n    setShowDraftOrderModal = _useState28[1];\n  var _useState29 = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]),\n    _useState30 = _slicedToArray(_useState29, 2),\n    draftOrder = _useState30[0],\n    setDraftOrder = _useState30[1];\n  var _useState31 = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false),\n    _useState32 = _slicedToArray(_useState31, 2),\n    isRoomOwner = _useState32[0],\n    setIsRoomOwner = _useState32[1];\n  var _useState33 = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(''),\n    _useState34 = _slicedToArray(_useState33, 2),\n    playerSearch = _useState34[0],\n    setPlayerSearch = _useState34[1];\n  var _useState35 = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)('ALL'),\n    _useState36 = _slicedToArray(_useState35, 2),\n    positionFilter = _useState36[0],\n    setPositionFilter = _useState36[1];\n  var _useState37 = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false),\n    _useState38 = _slicedToArray(_useState37, 2),\n    showSettingsModal = _useState38[0],\n    setShowSettingsModal = _useState38[1];\n  var _useState39 = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n      timerSeconds: 30,\n      totalRounds: 18\n    }),\n    _useState40 = _slicedToArray(_useState39, 2),\n    draftSettings = _useState40[0],\n    setDraftSettings = _useState40[1];\n  var _useState41 = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false),\n    _useState42 = _slicedToArray(_useState41, 2),\n    showRandomizationNotification = _useState42[0],\n    setShowRandomizationNotification = _useState42[1];\n  var _useState43 = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null),\n    _useState44 = _slicedToArray(_useState43, 2),\n    draftOrderTimestamp = _useState44[0],\n    setDraftOrderTimestamp = _useState44[1];\n  var _useState45 = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(60),\n    _useState46 = _slicedToArray(_useState45, 2),\n    preDraftCountdown = _useState46[0],\n    setPreDraftCountdown = _useState46[1];\n  var _useState47 = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)('adp'),\n    _useState48 = _slicedToArray(_useState47, 2),\n    sortBy = _useState48[0],\n    setSortBy = _useState48[1]; // 'adp' or 'rankings'\n  var _useState49 = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)('manual'),\n    _useState50 = _slicedToArray(_useState49, 2),\n    queueSortBy = _useState50[0],\n    setQueueSortBy = _useState50[1]; // 'manual', 'adp', or 'rankings'\n  var picksScrollRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n  var _useState51 = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false),\n    _useState52 = _slicedToArray(_useState51, 2),\n    showTeamDropdown = _useState52[0],\n    setShowTeamDropdown = _useState52[1];\n  var _useState53 = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false),\n    _useState54 = _slicedToArray(_useState53, 2),\n    showInfoModal = _useState54[0],\n    setShowInfoModal = _useState54[1];\n  var _useState55 = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false),\n    _useState56 = _slicedToArray(_useState55, 2),\n    mockDraftSpeed = _useState56[0],\n    setMockDraftSpeed = _useState56[1];\n  var lastPickTimestampRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(0);\n  var pickInProgressRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(false);\n\n  // Auto-scroll to show only one completed pick at a time, positioned as far left as possible\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(function () {\n    if (picksScrollRef.current && picks.length > 0) {\n      // Add a longer delay to ensure DOM is fully updated\n      setTimeout(function () {\n        var completedPicksCount = picks.length;\n        var currentPickIndex = completedPicksCount - 1; // Index of the last completed pick\n        var currentPickElement = picksScrollRef.current.children[currentPickIndex];\n        if (currentPickElement) {\n          console.log(\"Auto-scrolling to show only completed pick #\".concat(completedPicksCount, \" as far left as possible\"));\n          currentPickElement.scrollIntoView({\n            behavior: 'smooth',\n            block: 'nearest',\n            inline: 'start'\n          });\n        } else {\n          console.log(\"Could not find element for completed pick #\".concat(completedPicksCount));\n        }\n      }, 300);\n    }\n  }, [picks.length]);\n\n  // Function to clear picks for this room\n  var clearPicksForRoom = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var picksRef, picksSnapshot, deletePromises, _t;\n      return _regeneratorRuntime().wrap(function (_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            picksRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_3__.collection)(_lib_firebase__WEBPACK_IMPORTED_MODULE_2__.db, 'draftRooms', roomId, 'picks');\n            _context.next = 1;\n            return (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_3__.getDocs)(picksRef);\n          case 1:\n            picksSnapshot = _context.sent;\n            deletePromises = picksSnapshot.docs.map(function (pickDoc) {\n              return (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_3__.deleteDoc)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_3__.doc)(_lib_firebase__WEBPACK_IMPORTED_MODULE_2__.db, 'draftRooms', roomId, 'picks', pickDoc.id));\n            });\n            _context.next = 2;\n            return Promise.all(deletePromises);\n          case 2:\n            console.log(\"[ROOM \".concat(roomId, \"] Cleared picks for room \").concat(roomId));\n            _context.next = 4;\n            break;\n          case 3:\n            _context.prev = 3;\n            _t = _context[\"catch\"](0);\n            console.error(\"[ROOM \".concat(roomId, \"] Error clearing picks for room \").concat(roomId, \":\"), _t);\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee, null, [[0, 3]]);\n    }));\n    return function clearPicksForRoom() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  // Verify and clean up picks that don't belong to this room\n  var verifyAndCleanPicks = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n      var picksRef, picksSnapshot, invalidPicks, deletePromises, _t2;\n      return _regeneratorRuntime().wrap(function (_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            picksRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_3__.collection)(_lib_firebase__WEBPACK_IMPORTED_MODULE_2__.db, 'draftRooms', roomId, 'picks');\n            _context2.next = 1;\n            return (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_3__.getDocs)(picksRef);\n          case 1:\n            picksSnapshot = _context2.sent;\n            invalidPicks = [];\n            picksSnapshot.docs.forEach(function (pickDoc) {\n              var pickData = pickDoc.data();\n              if (!pickData.roomId || pickData.roomId !== roomId) {\n                invalidPicks.push(pickDoc.id);\n              }\n            });\n            if (!(invalidPicks.length > 0)) {\n              _context2.next = 3;\n              break;\n            }\n            console.warn(\"[ROOM \".concat(roomId, \"] Found \").concat(invalidPicks.length, \" invalid picks, cleaning up...\"));\n            deletePromises = invalidPicks.map(function (pickId) {\n              return (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_3__.deleteDoc)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_3__.doc)(_lib_firebase__WEBPACK_IMPORTED_MODULE_2__.db, 'draftRooms', roomId, 'picks', pickId));\n            });\n            _context2.next = 2;\n            return Promise.all(deletePromises);\n          case 2:\n            console.log(\"[ROOM \".concat(roomId, \"] Cleaned up \").concat(invalidPicks.length, \" invalid picks\"));\n          case 3:\n            _context2.next = 5;\n            break;\n          case 4:\n            _context2.prev = 4;\n            _t2 = _context2[\"catch\"](0);\n            console.error(\"[ROOM \".concat(roomId, \"] Error verifying picks:\"), _t2);\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2, null, [[0, 4]]);\n    }));\n    return function verifyAndCleanPicks() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  // Join room as a participant\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(function () {\n    if (!roomId) return;\n    var joinRoom = /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var name, userRef, docSnap, data, currentParticipants, maxParticipants, oldUsernames, updatedParticipants;\n        return _regeneratorRuntime().wrap(function (_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              // Force the user to be \"Not Todd Middleton\" regardless of what's in localStorage\n              name = 'Not Todd Middleton';\n              localStorage.setItem('draftUserName', name);\n              setUserName(name);\n              userRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_3__.doc)(_lib_firebase__WEBPACK_IMPORTED_MODULE_2__.db, 'draftRooms', roomId);\n              _context3.next = 1;\n              return (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_3__.getDoc)(userRef);\n            case 1:\n              docSnap = _context3.sent;\n              if (!docSnap.exists()) {\n                _context3.next = 4;\n                break;\n              }\n              data = docSnap.data();\n              setIsRoomOwner(data.createdBy === name);\n\n              // Check if room is full before trying to join\n              currentParticipants = data.participants || [];\n              maxParticipants = data.maxParticipants || 12;\n              if (!(currentParticipants.length >= maxParticipants && !currentParticipants.includes(name))) {\n                _context3.next = 2;\n                break;\n              }\n              // Room is full and user is not already in it\n              alert('Draft room is full (12 participants max).');\n              router.push('/draft');\n              return _context3.abrupt(\"return\");\n            case 2:\n              // Remove any old usernames that might be the same user (like User-XXXX)\n              oldUsernames = currentParticipants.filter(function (p) {\n                return p.startsWith('User-');\n              });\n              updatedParticipants = currentParticipants;\n              if (!(oldUsernames.length > 0)) {\n                _context3.next = 3;\n                break;\n              }\n              // Remove old usernames\n              updatedParticipants = currentParticipants.filter(function (p) {\n                return !p.startsWith('User-');\n              });\n              _context3.next = 3;\n              return (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_3__.updateDoc)(userRef, {\n                participants: updatedParticipants\n              });\n            case 3:\n              if (updatedParticipants.includes(name)) {\n                _context3.next = 4;\n                break;\n              }\n              _context3.next = 4;\n              return (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_3__.updateDoc)(userRef, {\n                participants: (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_3__.arrayUnion)(name)\n              });\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3);\n      }));\n      return function joinRoom() {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n    joinRoom();\n  }, [roomId, router]);\n\n  // Listen for room data\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(function () {\n    if (!roomId) return;\n    var unsub = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_3__.onSnapshot)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_3__.doc)(_lib_firebase__WEBPACK_IMPORTED_MODULE_2__.db, 'draftRooms', roomId), function (docSnap) {\n      var _roomData$settings, _roomData$settings2;\n      var roomData = _objectSpread({\n        id: docSnap.id\n      }, docSnap.data());\n      var previousStatus = room === null || room === void 0 ? void 0 : room.status;\n      setRoom(roomData);\n      setParticipants((roomData === null || roomData === void 0 ? void 0 : roomData.participants) || []);\n      setDraftOrder((roomData === null || roomData === void 0 ? void 0 : roomData.draftOrder) || []);\n      setDraftOrderTimestamp((roomData === null || roomData === void 0 ? void 0 : roomData.draftOrderTimestamp) || null);\n      setDraftSettings({\n        timerSeconds: (roomData === null || roomData === void 0 || (_roomData$settings = roomData.settings) === null || _roomData$settings === void 0 ? void 0 : _roomData$settings.timerSeconds) || 30,\n        totalRounds: (roomData === null || roomData === void 0 || (_roomData$settings2 = roomData.settings) === null || _roomData$settings2 === void 0 ? void 0 : _roomData$settings2.totalRounds) || 18\n      });\n\n      // Safety check: if room status changed from 'completed' to 'waiting', clear picks\n      if (previousStatus === 'completed' && (roomData === null || roomData === void 0 ? void 0 : roomData.status) === 'waiting') {\n        console.log(\"[ROOM \".concat(roomId, \"] Room reset from completed to waiting - clearing picks\"));\n        clearPicksForRoom();\n      }\n\n      // Additional safety: if room is in 'waiting' status and there are picks, clear them\n      if ((roomData === null || roomData === void 0 ? void 0 : roomData.status) === 'waiting' && picks.length > 0) {\n        console.log(\"[ROOM \".concat(roomId, \"] Room is in waiting status but has \").concat(picks.length, \" picks - clearing picks\"));\n        clearPicksForRoom();\n      }\n\n      // Verify picks belong to this room\n      verifyAndCleanPicks();\n    }, function (error) {\n      console.error(\"[ROOM \".concat(roomId, \"] Error listening to room data:\"), error);\n      if (error.code === 'failed-precondition') {\n        alert('Firebase connection error. Please check your internet connection and try again.');\n      }\n    });\n    return function () {\n      return unsub();\n    };\n  }, [roomId]);\n\n  // Periodic verification that no drafted players are in available list\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(function () {\n    if (!isDraftActive && (room === null || room === void 0 ? void 0 : room.status) !== 'waiting') return;\n    var verificationInterval = setInterval(function () {\n      var pickedNames = picks.map(function (p) {\n        return p.player;\n      });\n      var invalidAvailablePlayers = availablePlayers.filter(function (p) {\n        return pickedNames.includes(p.name);\n      });\n      if (invalidAvailablePlayers.length > 0) {\n        console.error(\"\\uD83D\\uDEA8 PERIODIC CHECK: Found \".concat(invalidAvailablePlayers.length, \" drafted players in available list:\"), invalidAvailablePlayers.map(function (p) {\n          return p.name;\n        }));\n\n        // Force refresh available players\n        var cleanAvailablePlayers = _lib_playerPool__WEBPACK_IMPORTED_MODULE_6__.PLAYER_POOL.filter(function (p) {\n          return !pickedNames.includes(p.name);\n        });\n        setAvailablePlayers(cleanAvailablePlayers);\n        console.log(\"[ROOM \".concat(roomId, \"] Forced refresh of available players\"));\n      } else {\n        console.log(\"\\u2705 Periodic check passed: No drafted players in available list\");\n      }\n    }, 5000); // Check every 5 seconds\n\n    return function () {\n      return clearInterval(verificationInterval);\n    };\n  }, [picks, availablePlayers, isDraftActive, room === null || room === void 0 ? void 0 : room.status, roomId]);\n\n  // Force update available players whenever picks change\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(function () {\n    var pickedNames = picks.map(function (p) {\n      return p.player;\n    });\n    var filteredAvailable = _lib_playerPool__WEBPACK_IMPORTED_MODULE_6__.PLAYER_POOL.filter(function (p) {\n      return !pickedNames.includes(p.name);\n    });\n    setAvailablePlayers(filteredAvailable);\n  }, [picks]);\n\n  // Listen for picks\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(function () {\n    if (!roomId) return;\n    var picksQuery = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_3__.query)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_3__.collection)(_lib_firebase__WEBPACK_IMPORTED_MODULE_2__.db, 'draftRooms', roomId, 'picks'), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_3__.orderBy)('pickNumber'));\n    var unsub = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_3__.onSnapshot)(picksQuery, function (snap) {\n      var picksArr = snap.docs.map(function (doc) {\n        return doc.data();\n      });\n      setPicks(picksArr);\n      // Remove picked players from available\n      var pickedNames = picksArr.map(function (p) {\n        return p.player;\n      });\n      var filteredAvailable = _lib_playerPool__WEBPACK_IMPORTED_MODULE_6__.PLAYER_POOL.filter(function (p) {\n        return !pickedNames.includes(p.name);\n      });\n      setAvailablePlayers(filteredAvailable);\n\n      // Debug logging\n      console.log(\"[ROOM \".concat(roomId, \"] Picks updated:\"), picksArr.length, 'picks');\n      console.log(\"[ROOM \".concat(roomId, \"] Picked names:\"), pickedNames);\n      console.log(\"[ROOM \".concat(roomId, \"] Available players before filter:\"), _lib_playerPool__WEBPACK_IMPORTED_MODULE_6__.PLAYER_POOL.length);\n      console.log(\"[ROOM \".concat(roomId, \"] Available players after filter:\"), filteredAvailable.length);\n      console.log(\"[ROOM \".concat(roomId, \"] Sample picked player:\"), pickedNames[0]);\n      console.log(\"[ROOM \".concat(roomId, \"] Sample available player:\"), filteredAvailable[0]);\n\n      // Additional safety check: verify picks belong to this room\n      var invalidPicks = picksArr.filter(function (pick) {\n        return !pick.roomId || pick.roomId !== roomId;\n      });\n      if (invalidPicks.length > 0) {\n        console.warn(\"[ROOM \".concat(roomId, \"] Found \").concat(invalidPicks.length, \" picks that don't belong to this room:\"), invalidPicks);\n      }\n    }, function (error) {\n      console.error(\"[ROOM \".concat(roomId, \"] Error listening to picks:\"), error);\n      if (error.code === 'failed-precondition') {\n        alert('Firebase connection error. Please check your internet connection and try again.');\n      }\n    });\n    return function () {\n      return unsub();\n    };\n  }, [roomId]);\n\n  // Load rankings from localStorage\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(function () {\n    var stored = localStorage.getItem('draftRankings');\n    if (stored) {\n      setRankings(JSON.parse(stored));\n    }\n  }, []);\n\n  // Load queue from localStorage\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(function () {\n    var stored = localStorage.getItem('draftQueue');\n    if (stored) {\n      setQueue(JSON.parse(stored));\n    }\n  }, []);\n\n  // Save rankings to localStorage\n  var handleRankingsUpload = function handleRankingsUpload(e) {\n    e.preventDefault();\n    var lines = rankingsText.split(/\\n|,/).map(function (l) {\n      return l.trim();\n    }).filter(Boolean);\n    setRankings(lines);\n    localStorage.setItem('draftRankings', JSON.stringify(lines));\n    setRankingsText('');\n  };\n\n  // Handle CSV file upload\n  var handleCSVUpload = function handleCSVUpload(e) {\n    var file = e.target.files[0];\n    if (!file) return;\n    var reader = new FileReader();\n    reader.onload = function (event) {\n      var text = event.target.result;\n      var lines = text.split(/\\n|,/).map(function (l) {\n        return l.trim();\n      }).filter(Boolean);\n      setRankings(lines);\n      localStorage.setItem('draftRankings', JSON.stringify(lines));\n    };\n    reader.readAsText(file);\n  };\n\n  // Clear/reset rankings\n  var clearRankings = function clearRankings() {\n    setRankings([]);\n    localStorage.removeItem('draftRankings');\n  };\n\n  // Save queue to localStorage\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(function () {\n    localStorage.setItem('draftQueue', JSON.stringify(queue));\n  }, [queue]);\n\n  // Add to queue\n  var addToQueue = function addToQueue(player) {\n    console.log('Adding player to queue:', player);\n    if (!queue.find(function (p) {\n      return p.name === player.name;\n    })) {\n      var newQueue = [].concat(_toConsumableArray(queue), [player]);\n      console.log('New queue:', newQueue);\n      setQueue(newQueue);\n    }\n  };\n\n  // Remove from queue\n  var removeFromQueue = function removeFromQueue(player) {\n    setQueue(queue.filter(function (p) {\n      return p.name !== player.name;\n    }));\n  };\n\n  // Draft order management\n  var setDraftOrderForRoom = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(newOrder) {\n      var roomRef;\n      return _regeneratorRuntime().wrap(function (_context4) {\n        while (1) switch (_context4.prev = _context4.next) {\n          case 0:\n            roomRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_3__.doc)(_lib_firebase__WEBPACK_IMPORTED_MODULE_2__.db, 'draftRooms', roomId);\n            _context4.next = 1;\n            return (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_3__.updateDoc)(roomRef, {\n              draftOrder: newOrder\n            });\n          case 1:\n            setShowDraftOrderModal(false);\n          case 2:\n          case \"end\":\n            return _context4.stop();\n        }\n      }, _callee4);\n    }));\n    return function setDraftOrderForRoom(_x) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var randomizeDraftOrder = function randomizeDraftOrder() {\n    var shuffled = _toConsumableArray(participants).sort(function () {\n      return Math.random() - 0.5;\n    });\n    setDraftOrder(shuffled);\n  };\n\n  // Update draft settings\n  var updateDraftSettings = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n      var roomRef;\n      return _regeneratorRuntime().wrap(function (_context5) {\n        while (1) switch (_context5.prev = _context5.next) {\n          case 0:\n            roomRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_3__.doc)(_lib_firebase__WEBPACK_IMPORTED_MODULE_2__.db, 'draftRooms', roomId);\n            _context5.next = 1;\n            return (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_3__.updateDoc)(roomRef, {\n              settings: draftSettings\n            });\n          case 1:\n            setShowSettingsModal(false);\n          case 2:\n          case \"end\":\n            return _context5.stop();\n        }\n      }, _callee5);\n    }));\n    return function updateDraftSettings() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  // Draft order: use custom order if set, otherwise simple snake draft\n  var totalRounds = (room === null || room === void 0 || (_room$settings = room.settings) === null || _room$settings === void 0 ? void 0 : _room$settings.totalRounds) || 18;\n  var effectiveDraftOrder = draftOrder.length > 0 ? draftOrder : participants;\n  var totalPicks = totalRounds * effectiveDraftOrder.length;\n  var currentPickNumber = picks.length + 1;\n  var currentRound = Math.ceil(currentPickNumber / effectiveDraftOrder.length);\n\n  // Snake draft logic: odd rounds go forward, even rounds go backward\n  var isSnakeRound = currentRound % 2 === 0;\n  var pickIndex = (currentPickNumber - 1) % effectiveDraftOrder.length;\n  var currentPicker = isSnakeRound ? effectiveDraftOrder[effectiveDraftOrder.length - 1 - pickIndex] : effectiveDraftOrder[pickIndex];\n  var isMyTurn = 'Not Todd Middleton' === currentPicker;\n  var isDraftActive = (room === null || room === void 0 ? void 0 : room.status) === 'active';\n\n  // Timer logic\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(function () {\n    if (!isDraftActive || picks.length >= totalPicks) {\n      var _room$settings2;\n      setTimer((room === null || room === void 0 || (_room$settings2 = room.settings) === null || _room$settings2 === void 0 ? void 0 : _room$settings2.timerSeconds) || 30);\n      clearInterval(timerRef.current);\n      return;\n    }\n\n    // Get current picker\n    var currentPicker = effectiveDraftOrder[pickIndex];\n    var mockDrafterNames = (room === null || room === void 0 ? void 0 : room.mockDrafters) || [];\n    var isMockDrafter = currentPicker && currentPicker !== userName && mockDrafterNames.includes(currentPicker);\n    console.log('⏰ TIMER LOGIC:', {\n      isMyTurn: isMyTurn,\n      isMockDrafter: isMockDrafter,\n      currentPicker: currentPicker,\n      userName: userName,\n      timer: timer,\n      isDraftActive: isDraftActive,\n      picksLength: picks.length,\n      totalPicks: totalPicks\n    });\n\n    // Timer should count down for both current user and mock drafters\n    if (isMyTurn || isMockDrafter) {\n      var _room$settings3;\n      setTimer((room === null || room === void 0 || (_room$settings3 = room.settings) === null || _room$settings3 === void 0 ? void 0 : _room$settings3.timerSeconds) || 30);\n      clearInterval(timerRef.current);\n      timerRef.current = setInterval(function () {\n        setTimer(function (t) {\n          if (t <= 1) {\n            clearInterval(timerRef.current);\n            return 0;\n          }\n          return t - 1;\n        });\n      }, 1000);\n      return function () {\n        return clearInterval(timerRef.current);\n      };\n    } else {\n      var _room$settings4;\n      // Reset timer when it's not our turn\n      setTimer((room === null || room === void 0 || (_room$settings4 = room.settings) === null || _room$settings4 === void 0 ? void 0 : _room$settings4.timerSeconds) || 30);\n      clearInterval(timerRef.current);\n    }\n  }, [isMyTurn, isDraftActive, picks.length, totalPicks, room === null || room === void 0 || (_room$settings5 = room.settings) === null || _room$settings5 === void 0 ? void 0 : _room$settings5.timerSeconds, currentPicker, room === null || room === void 0 ? void 0 : room.mockDrafters, userName]);\n\n  // Skip pick if timer runs out\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(function () {\n    if (timer === 0 && isMyTurn && isDraftActive && availablePlayers.length > 0) {\n      console.log('🚨 TIMER EXPIRED - TRIGGERING AUTO-PICK:', {\n        timer: timer,\n        isMyTurn: isMyTurn,\n        isDraftActive: isDraftActive,\n        availablePlayersLength: availablePlayers.length,\n        currentPickNumber: currentPickNumber,\n        currentRound: currentRound\n      });\n      var autoPick = getAutoPickPlayer();\n      if (!autoPick) {\n        console.error(\"[ROOM \".concat(roomId, \"] No valid auto-pick available for \").concat(userName, \" - autodraft limits reached\"));\n        // Alert the user and extend timer by 30 seconds\n        alert(\"No valid players available for autodraft. You have reached autodraft position limits (3QB, 6RB, 7WR, 3TE). Please manually select a player.\");\n        setTimer(30); // Give 30 more seconds\n        return;\n      }\n      console.log(\"[ROOM \".concat(roomId, \"] Timer expired for \").concat(userName, \", auto-picking: \").concat(autoPick.name));\n      makeAutoPick(autoPick.name);\n    }\n  }, [timer, isMyTurn, isDraftActive, availablePlayers, rankings, queue]);\n\n  // Check for draft completion\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(function () {\n    if (picks.length >= totalPicks && isDraftActive) {\n      console.log('🏁 DRAFT COMPLETION DETECTED:', {\n        picksLength: picks.length,\n        totalPicks: totalPicks,\n        isDraftActive: isDraftActive,\n        isRoomOwner: isRoomOwner,\n        roomId: roomId\n      });\n\n      // Mark draft as completed and clear picks to prevent reuse\n      var completeDraft = /*#__PURE__*/function () {\n        var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n          var userId, userPicks, players, playerDetails, _t3;\n          return _regeneratorRuntime().wrap(function (_context6) {\n            while (1) switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.prev = 0;\n                _context6.next = 1;\n                return (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_3__.updateDoc)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_3__.doc)(_lib_firebase__WEBPACK_IMPORTED_MODULE_2__.db, 'draftRooms', roomId), {\n                  status: 'completed',\n                  completedAt: new Date()\n                });\n              case 1:\n                console.log(\"\\u2705 Draft marked as completed for room \".concat(roomId));\n\n                // Only room owner should save team and clear picks\n                if (!isRoomOwner) {\n                  _context6.next = 4;\n                  break;\n                }\n                // Save user's drafted team to Firestore\n                userId = 'Not Todd Middleton';\n                userPicks = picks.filter(function (p) {\n                  return p.user === userId;\n                });\n                players = userPicks.map(function (p) {\n                  return p.player;\n                }); // Optionally, group by position for easier display\n                playerDetails = userPicks.map(function (p) {\n                  var playerObj = _lib_playerPool__WEBPACK_IMPORTED_MODULE_6__.PLAYER_POOL.find(function (pl) {\n                    return pl.name === p.player;\n                  });\n                  return playerObj ? {\n                    name: playerObj.name,\n                    position: playerObj.position,\n                    team: playerObj.team,\n                    pickNumber: p.pickNumber\n                  } : {\n                    name: p.player\n                  };\n                });\n                _context6.next = 2;\n                return (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_3__.addDoc)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_3__.collection)(_lib_firebase__WEBPACK_IMPORTED_MODULE_2__.db, 'teams'), {\n                  userId: userId,\n                  name: (room === null || room === void 0 ? void 0 : room.name) || 'My Team',\n                  tournament: 'Top Dog',\n                  players: playerDetails,\n                  createdAt: new Date()\n                });\n              case 2:\n                _context6.next = 3;\n                return clearPicksForRoom();\n              case 3:\n                console.log(\"\\u2705 Draft completed, team saved, and picks cleared for room \".concat(roomId));\n              case 4:\n                _context6.next = 6;\n                break;\n              case 5:\n                _context6.prev = 5;\n                _t3 = _context6[\"catch\"](0);\n                console.error('❌ Error completing draft:', _t3);\n              case 6:\n              case \"end\":\n                return _context6.stop();\n            }\n          }, _callee6, null, [[0, 5]]);\n        }));\n        return function completeDraft() {\n          return _ref6.apply(this, arguments);\n        };\n      }();\n      completeDraft();\n    }\n  }, [picks.length, totalPicks, isDraftActive, isRoomOwner, roomId]);\n\n  // Positional limits\n  var POSITIONAL_LIMITS = {\n    QB: 5,\n    RB: 11,\n    WR: 11,\n    TE: 6\n  };\n\n  // Function to check if a player can be drafted based on positional limits\n  var canDraftPlayer = function canDraftPlayer(player) {\n    var _userRoster$playerDat;\n    var userPicks = picks.filter(function (pick) {\n      return pick.user === userName;\n    });\n    var userRoster = (0,_lib_playerPool__WEBPACK_IMPORTED_MODULE_6__.groupPicksByPosition)(userPicks.map(function (p) {\n      return p.player;\n    }), _lib_playerPool__WEBPACK_IMPORTED_MODULE_6__.PLAYER_POOL);\n    var playerData = _lib_playerPool__WEBPACK_IMPORTED_MODULE_6__.PLAYER_POOL.find(function (p) {\n      return p.name === player;\n    });\n    if (!playerData) return false;\n    var currentCount = ((_userRoster$playerDat = userRoster[playerData.position]) === null || _userRoster$playerDat === void 0 ? void 0 : _userRoster$playerDat.length) || 0;\n    var limit = POSITIONAL_LIMITS[playerData.position];\n    return currentCount < limit;\n  };\n  var makePick = /*#__PURE__*/function () {\n    var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(player) {\n      var playerData, limit, pickRef, _t4;\n      return _regeneratorRuntime().wrap(function (_context7) {\n        while (1) switch (_context7.prev = _context7.next) {\n          case 0:\n            console.log('🎯 MAKE PICK CALLED:', {\n              player: player,\n              pickLoading: pickLoading,\n              pickInProgress: pickInProgressRef.current,\n              isMyTurn: isMyTurn,\n              isDraftActive: isDraftActive,\n              currentPickNumber: currentPickNumber,\n              currentRound: currentRound\n            });\n            if (isMyTurn) {\n              _context7.next = 1;\n              break;\n            }\n            console.log('❌ PICK BLOCKED: Not your turn');\n            return _context7.abrupt(\"return\");\n          case 1:\n            if (!(pickLoading || pickInProgressRef.current)) {\n              _context7.next = 2;\n              break;\n            }\n            console.log('❌ PICK BLOCKED: Pick already in progress');\n            return _context7.abrupt(\"return\");\n          case 2:\n            if (canDraftPlayer(player)) {\n              _context7.next = 3;\n              break;\n            }\n            playerData = _lib_playerPool__WEBPACK_IMPORTED_MODULE_6__.PLAYER_POOL.find(function (p) {\n              return p.name === player;\n            });\n            limit = POSITIONAL_LIMITS[playerData.position];\n            alert(\"Cannot draft \".concat(player, \". You already have \").concat(limit, \" \").concat(playerData.position, \"s. Maximum allowed: \").concat(limit, \".\"));\n            return _context7.abrupt(\"return\");\n          case 3:\n            _context7.prev = 3;\n            pickInProgressRef.current = true;\n            setPickLoading(true);\n            pickRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_3__.doc)(_lib_firebase__WEBPACK_IMPORTED_MODULE_2__.db, 'draftRooms', roomId, 'picks', String(currentPickNumber));\n            _context7.next = 4;\n            return (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_3__.setDoc)(pickRef, {\n              pickNumber: currentPickNumber,\n              round: currentRound,\n              user: userName,\n              player: player,\n              roomId: roomId,\n              timestamp: Date.now()\n            });\n          case 4:\n            console.log(\"[ROOM \".concat(roomId, \"] Made pick: \").concat(player, \" by \").concat(userName, \" (pick #\").concat(currentPickNumber, \")\"));\n            _context7.next = 6;\n            break;\n          case 5:\n            _context7.prev = 5;\n            _t4 = _context7[\"catch\"](3);\n            console.error(\"[ROOM \".concat(roomId, \"] Error making pick:\"), _t4);\n            alert('Error making pick. Please try again.');\n          case 6:\n            _context7.prev = 6;\n            setPickLoading(false);\n            pickInProgressRef.current = false;\n            return _context7.finish(6);\n          case 7:\n          case \"end\":\n            return _context7.stop();\n        }\n      }, _callee7, null, [[3, 5, 6, 7]]);\n    }));\n    return function makePick(_x2) {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n\n  // Auto-pick function that bypasses turn checks\n  var makeAutoPick = /*#__PURE__*/function () {\n    var _ref8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(player) {\n      var pickRef, _t5;\n      return _regeneratorRuntime().wrap(function (_context8) {\n        while (1) switch (_context8.prev = _context8.next) {\n          case 0:\n            console.log('🤖 AUTO PICK CALLED:', {\n              player: player,\n              pickLoading: pickLoading,\n              pickInProgress: pickInProgressRef.current,\n              isDraftActive: isDraftActive,\n              currentPickNumber: currentPickNumber,\n              currentRound: currentRound,\n              userName: userName\n            });\n            if (!(pickLoading || !isDraftActive || pickInProgressRef.current)) {\n              _context8.next = 1;\n              break;\n            }\n            console.log('❌ AUTO PICK BLOCKED:', {\n              reason: pickLoading ? 'pick loading' : !isDraftActive ? 'draft not active' : 'pick in progress'\n            });\n            return _context8.abrupt(\"return\");\n          case 1:\n            _context8.prev = 1;\n            pickInProgressRef.current = true;\n            setPickLoading(true);\n            pickRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_3__.doc)(_lib_firebase__WEBPACK_IMPORTED_MODULE_2__.db, 'draftRooms', roomId, 'picks', String(currentPickNumber));\n            _context8.next = 2;\n            return (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_3__.setDoc)(pickRef, {\n              pickNumber: currentPickNumber,\n              round: currentRound,\n              user: userName,\n              player: player,\n              roomId: roomId,\n              timestamp: Date.now()\n            });\n          case 2:\n            console.log(\"[ROOM \".concat(roomId, \"] Auto-pick made: \").concat(player, \" by \").concat(userName, \" (pick #\").concat(currentPickNumber, \")\"));\n            _context8.next = 4;\n            break;\n          case 3:\n            _context8.prev = 3;\n            _t5 = _context8[\"catch\"](1);\n            console.error(\"[ROOM \".concat(roomId, \"] Error making auto-pick:\"), _t5);\n          case 4:\n            _context8.prev = 4;\n            setPickLoading(false);\n            pickInProgressRef.current = false;\n            return _context8.finish(4);\n          case 5:\n          case \"end\":\n            return _context8.stop();\n        }\n      }, _callee8, null, [[1, 3, 4, 5]]);\n    }));\n    return function makeAutoPick(_x3) {\n      return _ref8.apply(this, arguments);\n    };\n  }();\n\n  // Determine who would be auto-picked\n  var getAutoPickPlayer = function getAutoPickPlayer() {\n    // Get current user's roster to check position counts\n    var userPicks = picks.filter(function (pick) {\n      return pick.user === userName;\n    });\n    var userRoster = userPicks.map(function (pick) {\n      var playerData = _lib_playerPool__WEBPACK_IMPORTED_MODULE_6__.PLAYER_POOL.find(function (p) {\n        return p.name === pick.player;\n      });\n      return (playerData === null || playerData === void 0 ? void 0 : playerData.position) || 'UNK';\n    });\n    var positionCounts = {\n      QB: userRoster.filter(function (pos) {\n        return pos === 'QB';\n      }).length,\n      RB: userRoster.filter(function (pos) {\n        return pos === 'RB';\n      }).length,\n      WR: userRoster.filter(function (pos) {\n        return pos === 'WR';\n      }).length,\n      TE: userRoster.filter(function (pos) {\n        return pos === 'TE';\n      }).length\n    };\n\n    // Autodraft position maximums\n    var AUTODRAFT_LIMITS = {\n      QB: 3,\n      RB: 6,\n      WR: 7,\n      TE: 3\n    };\n\n    // Filter available players to only those that can be drafted within autodraft limits\n    var draftablePlayers = availablePlayers.filter(function (player) {\n      var currentCount = positionCounts[player.position] || 0;\n      var limit = AUTODRAFT_LIMITS[player.position];\n      return currentCount < limit;\n    });\n\n    // If no players within autodraft limits, fall back to regular draftable players\n    if (draftablePlayers.length === 0) {\n      draftablePlayers = availablePlayers.filter(function (player) {\n        return canDraftPlayer(player.name);\n      });\n    }\n    if (draftablePlayers.length === 0) {\n      return null; // Only return null if truly no players can be drafted\n    }\n\n    // Sort draftable players by ADP (lowest ADP first)\n    draftablePlayers.sort(function (a, b) {\n      return (a.adp || 999) - (b.adp || 999);\n    });\n\n    // 1. From queue (if draftable) - still respect queue priority\n    var queued = queue.find(function (p) {\n      return draftablePlayers.find(function (ap) {\n        return ap.name === p.name;\n      });\n    });\n    if (queued) return queued;\n\n    // 2. From rankings (if draftable) - still respect rankings priority\n    if (rankings.length > 0) {\n      var rankedPlayer = draftablePlayers.find(function (p) {\n        return rankings.includes(p.name);\n      });\n      if (rankedPlayer) return rankedPlayer;\n    }\n\n    // 3. Best available player by ADP\n    return draftablePlayers[0];\n  };\n  var autoPickPlayer = getAutoPickPlayer();\n\n  // Handle drag end for queue\n  var onDragEnd = function onDragEnd(result) {\n    console.log('Drag end result:', result);\n    if (!result.destination) {\n      console.log('No destination, returning');\n      return;\n    }\n    console.log('Updating queue from drag and drop');\n    var newQueue = Array.from(queue);\n    var _newQueue$splice = newQueue.splice(result.source.index, 1),\n      _newQueue$splice2 = _slicedToArray(_newQueue$splice, 1),\n      removed = _newQueue$splice2[0];\n    newQueue.splice(result.destination.index, 0, removed);\n    setQueue(newQueue);\n    console.log('New queue:', newQueue);\n  };\n\n  // Handle drag end specifically for queue\n  var onQueueDragEnd = function onQueueDragEnd(result) {\n    console.log('Queue drag end result:', result);\n    if (!result.destination) {\n      console.log('No destination for queue drag, returning');\n      return;\n    }\n    console.log('Updating queue from queue drag and drop');\n    var newQueue = Array.from(queue);\n    var _newQueue$splice3 = newQueue.splice(result.source.index, 1),\n      _newQueue$splice4 = _slicedToArray(_newQueue$splice3, 1),\n      removed = _newQueue$splice4[0];\n    newQueue.splice(result.destination.index, 0, removed);\n    setQueue(newQueue);\n    console.log('New queue after drag:', newQueue);\n  };\n\n  // Handle drag end for draft order\n  var onDraftOrderDragEnd = function onDraftOrderDragEnd(result) {\n    if (!result.destination) return;\n    var newOrder = Array.from(draftOrder);\n    var _newOrder$splice = newOrder.splice(result.source.index, 1),\n      _newOrder$splice2 = _slicedToArray(_newOrder$splice, 1),\n      removed = _newOrder$splice2[0];\n    newOrder.splice(result.destination.index, 0, removed);\n    setDraftOrder(newOrder);\n  };\n\n  // Auto-randomize draft order when room is filled\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(function () {\n    console.log('Auto-start check:', {\n      participantsLength: participants.length,\n      roomStatus: room === null || room === void 0 ? void 0 : room.status,\n      isRoomOwner: isRoomOwner,\n      draftOrderLength: draftOrder.length\n    });\n    if (participants.length >= 1 && (room === null || room === void 0 ? void 0 : room.status) === 'waiting' && isRoomOwner && draftOrder.length === 0) {\n      console.log('Starting draft automatically with 1 participant for testing');\n      var shuffled = _toConsumableArray(participants).sort(function () {\n        return Math.random() - 0.5;\n      });\n      var timestamp = new Date();\n      setDraftOrder(shuffled);\n      setDraftOrderTimestamp(timestamp);\n      setShowRandomizationNotification(true);\n      setPreDraftCountdown(60); // Start 60-second countdown\n\n      // Save the randomized order but don't start draft yet\n      (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_3__.updateDoc)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_3__.doc)(_lib_firebase__WEBPACK_IMPORTED_MODULE_2__.db, 'draftRooms', roomId), {\n        draftOrder: shuffled,\n        draftOrderTimestamp: timestamp\n      });\n\n      // Hide notification after 5 seconds\n      setTimeout(function () {\n        setShowRandomizationNotification(false);\n      }, 5000);\n    }\n  }, [participants.length, room === null || room === void 0 ? void 0 : room.status, isRoomOwner, draftOrder.length, roomId]);\n\n  // Reset countdown when draft order is set\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(function () {\n    if (draftOrder.length > 0 && (room === null || room === void 0 ? void 0 : room.status) === 'waiting') {\n      setPreDraftCountdown(60);\n    }\n  }, [draftOrder.length, room === null || room === void 0 ? void 0 : room.status]);\n\n  // Pre-draft countdown timer\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(function () {\n    if (draftOrder.length > 0 && (room === null || room === void 0 ? void 0 : room.status) === 'waiting' && preDraftCountdown > 0) {\n      var countdown = setInterval(function () {\n        setPreDraftCountdown(function (prev) {\n          if (prev <= 1) {\n            clearInterval(countdown);\n            // Start the draft automatically when timer expires\n            (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_3__.updateDoc)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_3__.doc)(_lib_firebase__WEBPACK_IMPORTED_MODULE_2__.db, 'draftRooms', roomId), {\n              status: 'active',\n              startedAt: new Date()\n            });\n            return 0;\n          }\n\n          // Play sound effects for countdown\n          if (prev <= 10) {\n            try {\n              var ticking = new Audio('/ticking.mp3');\n              ticking.volume = 0.3;\n              ticking.play()[\"catch\"](function () {});\n            } catch (error) {\n              console.log('Audio not supported');\n            }\n          }\n          return prev - 1;\n        });\n      }, 1000);\n      return function () {\n        return clearInterval(countdown);\n      };\n    }\n  }, [draftOrder.length, room === null || room === void 0 ? void 0 : room.status, preDraftCountdown, roomId]);\n\n  // 2. Sound/vibration alerts\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(function () {\n    var _room$settings6;\n    if (isMyTurn && timer === ((room === null || room === void 0 || (_room$settings6 = room.settings) === null || _room$settings6 === void 0 ? void 0 : _room$settings6.timerSeconds) || 30)) {\n      // Play sound when your turn starts\n      try {\n        var audio = new Audio('/notification.mp3');\n        audio.volume = 0.5;\n        audio.play()[\"catch\"](function () {\n          // Fallback to ticking sound if notification fails\n          var ticking = new Audio('/ticking.mp3');\n          ticking.volume = 0.5;\n          ticking.play()[\"catch\"](function () {});\n        });\n      } catch (error) {\n        console.log('Audio not supported');\n      }\n      if (window.navigator.vibrate) window.navigator.vibrate(200);\n    }\n    if (isMyTurn && timer > 0 && timer <= 5) {\n      // Play ticking sound and vibrate when timer is low\n      try {\n        var ticking = new Audio('/ticking.mp3');\n        ticking.volume = 0.3;\n        ticking.play()[\"catch\"](function () {});\n      } catch (error) {\n        console.log('Audio not supported');\n      }\n      if (window.navigator.vibrate) window.navigator.vibrate([100, 100, 100]);\n    }\n  }, [isMyTurn, timer, room === null || room === void 0 || (_room$settings7 = room.settings) === null || _room$settings7 === void 0 ? void 0 : _room$settings7.timerSeconds]);\n\n  // 2. Draft board grid helpers\n  var maxTeams = 12;\n  var gridParticipants = _toConsumableArray(effectiveDraftOrder);\n  while (gridParticipants.length < maxTeams) gridParticipants.push('---');\n  var rounds = Array.from({\n    length: totalRounds\n  }, function (_, i) {\n    return i + 1;\n  });\n  var picksByTeam = gridParticipants.map(function (team) {\n    return rounds.map(function (round) {\n      var _picks$find;\n      return ((_picks$find = picks.find(function (p) {\n        return p.user === team && p.round === round;\n      })) === null || _picks$find === void 0 ? void 0 : _picks$find.player) || '';\n    });\n  });\n\n  // Get team roster for any team\n  var getTeamRoster = function getTeamRoster(teamName) {\n    return picks.filter(function (pick) {\n      return pick.user === teamName;\n    }).map(function (pick) {\n      return pick.player;\n    });\n  };\n\n  // Get grouped roster for any team\n  var getTeamRosterGrouped = function getTeamRosterGrouped(teamName) {\n    var teamPicks = getTeamRoster(teamName);\n    return (0,_lib_playerPool__WEBPACK_IMPORTED_MODULE_6__.groupPicksByPosition)(teamPicks, _lib_playerPool__WEBPACK_IMPORTED_MODULE_6__.PLAYER_POOL);\n  };\n\n  // Get starting lineup for any team\n  var getTeamStartingLineup = function getTeamStartingLineup(teamName) {\n    var userPicks = picks.filter(function (pick) {\n      return pick.user === teamName;\n    });\n    var assignedPlayers = new Set();\n    var lineup = {\n      QB: [],\n      RB: [],\n      WR: [],\n      TE: [],\n      FLEX: []\n    };\n\n    // Helper function to assign player to position if available and not already assigned\n    var assignPlayer = function assignPlayer(player, position) {\n      if (!assignedPlayers.has(player.name)) {\n        lineup[position].push(player);\n        assignedPlayers.add(player.name);\n        return true;\n      }\n      return false;\n    };\n\n    // Process players in draft order\n    userPicks.forEach(function (pick) {\n      var playerData = _lib_playerPool__WEBPACK_IMPORTED_MODULE_6__.PLAYER_POOL.find(function (p) {\n        return p.name === pick.player;\n      });\n      if (!playerData) return;\n      var player = {\n        name: pick.player,\n        position: playerData.position,\n        team: playerData.team,\n        bye: playerData.bye,\n        adp: playerData.adp\n      };\n\n      // Try to assign to position-specific spot first\n      if (player.position === 'QB' && lineup.QB.length < 1) {\n        assignPlayer(player, 'QB');\n      } else if (player.position === 'RB' && lineup.RB.length < 2) {\n        assignPlayer(player, 'RB');\n      } else if (player.position === 'WR' && lineup.WR.length < 3) {\n        assignPlayer(player, 'WR');\n      } else if (player.position === 'TE' && lineup.TE.length < 1) {\n        assignPlayer(player, 'TE');\n      }\n      // If position-specific spots are full or player is RB/WR/TE, try FLEX\n      else if (['RB', 'WR', 'TE'].includes(player.position) && lineup.FLEX.length < 2) {\n        assignPlayer(player, 'FLEX');\n      }\n    });\n    return lineup;\n  };\n  var openTeamModal = function openTeamModal(teamName) {\n    setSelectedTeam(teamName);\n    setShowTeamModal(true);\n  };\n\n  // Get current user's roster\n  var myRoster = getTeamRoster(userName);\n  var myRosterGrouped = getTeamRosterGrouped(userName);\n\n  // Function to assign players to starting lineup positions without duplication\n  var getStartingLineup = function getStartingLineup() {\n    var userPicks = picks.filter(function (pick) {\n      return pick.user === userName;\n    });\n    var assignedPlayers = new Set();\n    var lineup = {\n      QB: [],\n      RB: [],\n      WR: [],\n      TE: [],\n      FLEX: []\n    };\n\n    // Helper function to assign player to position if available and not already assigned\n    var assignPlayer = function assignPlayer(player, position) {\n      if (!assignedPlayers.has(player.name)) {\n        lineup[position].push(player);\n        assignedPlayers.add(player.name);\n        return true;\n      }\n      return false;\n    };\n\n    // Process players in draft order\n    userPicks.forEach(function (pick) {\n      var playerData = _lib_playerPool__WEBPACK_IMPORTED_MODULE_6__.PLAYER_POOL.find(function (p) {\n        return p.name === pick.player;\n      });\n      if (!playerData) return;\n      var player = {\n        name: pick.player,\n        position: playerData.position,\n        team: playerData.team,\n        bye: playerData.bye,\n        adp: playerData.adp\n      };\n\n      // Try to assign to position-specific spot first\n      if (player.position === 'QB' && lineup.QB.length < 1) {\n        assignPlayer(player, 'QB');\n      } else if (player.position === 'RB' && lineup.RB.length < 2) {\n        assignPlayer(player, 'RB');\n      } else if (player.position === 'WR' && lineup.WR.length < 3) {\n        assignPlayer(player, 'WR');\n      } else if (player.position === 'TE' && lineup.TE.length < 1) {\n        assignPlayer(player, 'TE');\n      }\n      // If position-specific spots are full or player is RB/WR/TE, try FLEX\n      else if (['RB', 'WR', 'TE'].includes(player.position) && lineup.FLEX.length < 2) {\n        assignPlayer(player, 'FLEX');\n      }\n    });\n    return lineup;\n  };\n  var startingLineup = getStartingLineup();\n\n  // Calculate draft statistics\n  var getDraftStats = function getDraftStats() {\n    var stats = {\n      totalPicks: picks.length,\n      totalPossible: totalPicks,\n      percentComplete: Math.round(picks.length / totalPicks * 100),\n      averagePickTime: 0,\n      fastestPick: null,\n      slowestPick: null\n    };\n    if (picks.length > 1) {\n      var pickTimes = [];\n      for (var i = 1; i < picks.length; i++) {\n        var timeDiff = picks[i].timestamp - picks[i - 1].timestamp;\n        pickTimes.push(timeDiff);\n      }\n      if (pickTimes.length > 0) {\n        stats.averagePickTime = Math.round(pickTimes.reduce(function (a, b) {\n          return a + b;\n        }, 0) / pickTimes.length / 1000);\n        stats.fastestPick = Math.min.apply(Math, pickTimes) / 1000;\n        stats.slowestPick = Math.max.apply(Math, pickTimes) / 1000;\n      }\n    }\n    return stats;\n  };\n  var draftStats = getDraftStats();\n\n  // Calculate upcoming picks for snake draft\n  var getUpcomingPicks = function getUpcomingPicks() {\n    if (!isDraftActive || picks.length >= totalPicks) return [];\n    var upcoming = [];\n    var roundsToShow = 3;\n    for (var roundOffset = 0; roundOffset < roundsToShow; roundOffset++) {\n      var futureRound = currentRound + roundOffset;\n      var futurePickNumber = (futureRound - 1) * effectiveDraftOrder.length + 1;\n      if (futurePickNumber > totalPicks) break;\n      var _isSnakeRound = futureRound % 2 === 0;\n      var roundPicks = [];\n      for (var pickInRound = 0; pickInRound < effectiveDraftOrder.length; pickInRound++) {\n        var actualPickNumber = futurePickNumber + pickInRound;\n        if (actualPickNumber > totalPicks) break;\n        var _pickIndex = pickInRound;\n        var picker = _isSnakeRound ? effectiveDraftOrder[effectiveDraftOrder.length - 1 - _pickIndex] : effectiveDraftOrder[_pickIndex];\n        roundPicks.push({\n          pickNumber: actualPickNumber,\n          picker: picker,\n          round: futureRound\n        });\n      }\n      upcoming.push({\n        round: futureRound,\n        picks: roundPicks\n      });\n    }\n    return upcoming;\n  };\n  var upcomingPicks = getUpcomingPicks();\n\n  // Filter available players based on search and position\n  var pickedPlayerNames = picks.map(function (p) {\n    return p.player;\n  });\n\n  // Get truly available players (not drafted) - MULTIPLE LAYERS OF PROTECTION\n  var trulyAvailablePlayers = _lib_playerPool__WEBPACK_IMPORTED_MODULE_6__.PLAYER_POOL.filter(function (p) {\n    // Layer 1: Check against current picks\n    if (pickedPlayerNames.includes(p.name)) {\n      console.warn(\"[FILTER] Player \".concat(p.name, \" found in picks - removing from available\"));\n      return false;\n    }\n    // Layer 2: Double-check against availablePlayers state\n    var isInAvailablePlayers = availablePlayers.find(function (ap) {\n      return ap.name === p.name;\n    });\n    if (!isInAvailablePlayers) {\n      console.warn(\"[FILTER] Player \".concat(p.name, \" not in availablePlayers state - removing from available\"));\n      return false;\n    }\n    return true;\n  });\n  var finalFilteredPlayers = trulyAvailablePlayers.filter(function (player) {\n    // Layer 3: Final safety check in filtered list\n    if (pickedPlayerNames.includes(player.name)) {\n      console.error(\"[FILTER] CRITICAL ERROR: Drafted player \".concat(player.name, \" found in filtered list\"));\n      return false;\n    }\n    var matchesSearch = player.name.toLowerCase().includes(playerSearch.toLowerCase()) || player.team.toLowerCase().includes(playerSearch.toLowerCase());\n    var matchesPosition = positionFilter === 'ALL' || player.position === positionFilter;\n    return matchesSearch && matchesPosition;\n  }).sort(function (a, b) {\n    if (sortBy === 'adp') {\n      return (a.adp || 999) - (b.adp || 999);\n    } else if (sortBy === 'rankings') {\n      var aRank = rankings.indexOf(a.name);\n      var bRank = rankings.indexOf(b.name);\n      // If both players are in rankings, sort by ranking position\n      if (aRank !== -1 && bRank !== -1) {\n        return aRank - bRank;\n      }\n      // If only one player is in rankings, prioritize ranked players\n      if (aRank !== -1 && bRank === -1) return -1;\n      if (aRank === -1 && bRank !== -1) return 1;\n      // If neither player is in rankings, fall back to ADP\n      return (a.adp || 999) - (b.adp || 999);\n    }\n    return 0;\n  });\n\n  // Enhanced debug logging\n  console.log('=== PLAYER FILTERING DEBUG ===');\n  console.log('Total PLAYER_POOL size:', _lib_playerPool__WEBPACK_IMPORTED_MODULE_6__.PLAYER_POOL.length);\n  console.log('Current picks count:', picks.length);\n  console.log('Picked player names:', pickedPlayerNames);\n  console.log('Available players state count:', availablePlayers.length);\n  console.log('Truly available players count:', trulyAvailablePlayers.length);\n  console.log('Filtered players count:', finalFilteredPlayers.length);\n\n  // Check for any drafted players in the filtered list\n  var draftedInFiltered = finalFilteredPlayers.filter(function (player) {\n    return pickedPlayerNames.includes(player.name);\n  });\n  if (draftedInFiltered.length > 0) {\n    console.error('🚨 CRITICAL ERROR: Found drafted players in filtered list:', draftedInFiltered.map(function (p) {\n      return p.name;\n    }));\n    // Force remove them from the filtered list\n    finalFilteredPlayers = finalFilteredPlayers.filter(function (player) {\n      return !pickedPlayerNames.includes(player.name);\n    });\n    console.log('Cleaned filtered players count:', finalFilteredPlayers.length);\n  } else {\n    console.log('✅ No drafted players found in filtered list');\n  }\n\n  // Additional safety check: verify no duplicates\n  var playerNames = finalFilteredPlayers.map(function (p) {\n    return p.name;\n  });\n  var uniqueNames = new Set(playerNames);\n  if (playerNames.length !== uniqueNames.size) {\n    console.warn('⚠️ Duplicate players found in filtered list, removing duplicates');\n    var seen = new Set();\n    finalFilteredPlayers = finalFilteredPlayers.filter(function (player) {\n      if (seen.has(player.name)) {\n        return false;\n      }\n      seen.add(player.name);\n      return true;\n    });\n  }\n  console.log('Sample available player:', availablePlayers[0]);\n  console.log('Sample truly available player:', trulyAvailablePlayers[0]);\n  console.log('Sample filtered player:', finalFilteredPlayers[0]);\n  console.log('Rankings count:', rankings.length);\n  console.log('Sample player with ADP:', finalFilteredPlayers[0]);\n  console.log('Sample rankings:', rankings.slice(0, 5));\n  console.log('Queue count:', queue.length);\n  console.log('Queue data:', queue);\n  console.log('=== END PLAYER FILTERING DEBUG ===');\n\n  // Mock draft function\n  var startMockDraft = /*#__PURE__*/function () {\n    var _ref9 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9() {\n      var mockDrafters, allParticipants, shuffledOrder, _t6;\n      return _regeneratorRuntime().wrap(function (_context9) {\n        while (1) switch (_context9.prev = _context9.next) {\n          case 0:\n            setMockDraftSpeed(true);\n            _context9.prev = 1;\n            // Get 11 simulated drafter names from the index\n            mockDrafters = (0,_lib_mockDrafters__WEBPACK_IMPORTED_MODULE_7__.getRandomMockDrafters)();\n            if (!(mockDrafters.length === 0)) {\n              _context9.next = 2;\n              break;\n            }\n            alert('No mock drafter names available. Please add names to the mock drafter index.');\n            return _context9.abrupt(\"return\");\n          case 2:\n            // Add current user (as \"Not Todd Middleton\") and mock drafters to participants\n            allParticipants = ['Not Todd Middleton'].concat(_toConsumableArray(mockDrafters)); // Randomize draft order\n            shuffledOrder = _toConsumableArray(allParticipants).sort(function () {\n              return Math.random() - 0.5;\n            }); // Update room with participants and draft order - LAUNCH WITH COUNTDOWN\n            _context9.next = 3;\n            return (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_3__.updateDoc)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_3__.doc)(_lib_firebase__WEBPACK_IMPORTED_MODULE_2__.db, 'draftRooms', roomId), {\n              participants: allParticipants,\n              draftOrder: shuffledOrder,\n              draftOrderTimestamp: new Date(),\n              status: 'waiting',\n              // Start in waiting status to trigger countdown\n              startedAt: null,\n              // Will be set when countdown completes\n              mockDrafters: mockDrafters // Store mock drafter names for detection\n            });\n          case 3:\n            // Set local state to trigger countdown\n            setDraftOrder(shuffledOrder);\n            setDraftOrderTimestamp(new Date());\n            setPreDraftCountdown(60);\n            console.log('Mock draft launched with countdown - participants:', allParticipants);\n            console.log('Draft order:', shuffledOrder);\n            console.log('Mock drafters:', mockDrafters);\n            console.log('Draft will start in 60 seconds...');\n            _context9.next = 5;\n            break;\n          case 4:\n            _context9.prev = 4;\n            _t6 = _context9[\"catch\"](1);\n            console.error('Error starting mock draft:', _t6);\n            alert('Error starting mock draft. Please try again.');\n          case 5:\n          case \"end\":\n            return _context9.stop();\n        }\n      }, _callee9, null, [[1, 4]]);\n    }));\n    return function startMockDraft() {\n      return _ref9.apply(this, arguments);\n    };\n  }();\n\n  // Auto-pick for mock drafters\n  var makeMockPick = /*#__PURE__*/function () {\n    var _ref10 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10(mockDrafter, pickNumber, round) {\n      var pickedPlayers, availableForMock, bestAvailable, pickRef, _t7;\n      return _regeneratorRuntime().wrap(function (_context10) {\n        while (1) switch (_context10.prev = _context10.next) {\n          case 0:\n            console.log('🎲 STARTING MOCK PICK:', {\n              mockDrafter: mockDrafter,\n              pickNumber: pickNumber,\n              round: round,\n              currentPickLoading: pickLoading,\n              pickInProgress: pickInProgressRef.current,\n              timestamp: new Date().toISOString()\n            });\n\n            // Defensive check: if a pick is already in progress, don't start another\n            if (!pickInProgressRef.current) {\n              _context10.next = 1;\n              break;\n            }\n            console.log('❌ MOCK PICK BLOCKED: Pick already in progress');\n            return _context10.abrupt(\"return\");\n          case 1:\n            if (!pickLoading) {\n              _context10.next = 2;\n              break;\n            }\n            console.log('❌ MOCK PICK BLOCKED: pickLoading already true');\n            return _context10.abrupt(\"return\");\n          case 2:\n            if (!(picks.length >= pickNumber)) {\n              _context10.next = 3;\n              break;\n            }\n            console.log('❌ MOCK PICK BLOCKED: Pick number already processed', {\n              requestedPickNumber: pickNumber,\n              currentPicksLength: picks.length\n            });\n            return _context10.abrupt(\"return\");\n          case 3:\n            _context10.prev = 3;\n            pickInProgressRef.current = true;\n            setPickLoading(true);\n            console.log('🔒 SET PICK LOADING TO TRUE');\n\n            // Get available players (excluding already picked ones)\n            pickedPlayers = picks.map(function (p) {\n              return p.player;\n            });\n            availableForMock = _lib_playerPool__WEBPACK_IMPORTED_MODULE_6__.PLAYER_POOL.filter(function (p) {\n              return !pickedPlayers.includes(p.name);\n            });\n            console.log('📊 AVAILABLE PLAYERS FOR MOCK:', {\n              totalPicked: pickedPlayers.length,\n              availableCount: availableForMock.length,\n              sampleAvailable: availableForMock.slice(0, 3).map(function (p) {\n                return p.name;\n              })\n            });\n            if (!(availableForMock.length === 0)) {\n              _context10.next = 4;\n              break;\n            }\n            console.error('❌ No available players for mock pick');\n            setPickLoading(false);\n            pickInProgressRef.current = false;\n            return _context10.abrupt(\"return\");\n          case 4:\n            // Simple mock draft strategy: pick best available by ADP\n            bestAvailable = availableForMock.sort(function (a, b) {\n              return (a.adp || 999) - (b.adp || 999);\n            })[0];\n            console.log('🎯 SELECTED PLAYER FOR MOCK PICK:', {\n              player: bestAvailable.name,\n              position: bestAvailable.position,\n              team: bestAvailable.team,\n              adp: bestAvailable.adp\n            });\n            pickRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_3__.doc)(_lib_firebase__WEBPACK_IMPORTED_MODULE_2__.db, 'draftRooms', roomId, 'picks', String(pickNumber));\n            _context10.next = 5;\n            return (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_3__.setDoc)(pickRef, {\n              pickNumber: pickNumber,\n              round: round,\n              user: mockDrafter,\n              player: bestAvailable.name,\n              roomId: roomId,\n              timestamp: Date.now()\n            });\n          case 5:\n            console.log('✅ MOCK PICK COMPLETED:', {\n              mockDrafter: mockDrafter,\n              player: bestAvailable.name,\n              pickNumber: pickNumber,\n              timestamp: new Date().toISOString()\n            });\n            _context10.next = 7;\n            break;\n          case 6:\n            _context10.prev = 6;\n            _t7 = _context10[\"catch\"](3);\n            console.error('❌ ERROR MAKING MOCK PICK:', _t7);\n          case 7:\n            _context10.prev = 7;\n            console.log('🔓 SETTING PICK LOADING TO FALSE');\n            setPickLoading(false);\n            pickInProgressRef.current = false;\n            return _context10.finish(7);\n          case 8:\n          case \"end\":\n            return _context10.stop();\n        }\n      }, _callee10, null, [[3, 6, 7, 8]]);\n    }));\n    return function makeMockPick(_x4, _x5, _x6) {\n      return _ref10.apply(this, arguments);\n    };\n  }();\n\n  // Auto-pick timer for mock drafters\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(function () {\n    console.log('🚀 INSTANT PICK EFFECT TRIGGERED:', {\n      isDraftActive: isDraftActive,\n      roomStatus: room === null || room === void 0 ? void 0 : room.status,\n      picksLength: picks.length,\n      totalPicks: totalPicks,\n      mockDraftSpeed: mockDraftSpeed,\n      effectiveDraftOrderLength: effectiveDraftOrder.length,\n      pickIndex: pickIndex,\n      currentPicker: effectiveDraftOrder[pickIndex],\n      roomMockDrafters: room === null || room === void 0 ? void 0 : room.mockDrafters,\n      pickLoading: pickLoading,\n      currentPickNumber: currentPickNumber,\n      currentRound: currentRound,\n      lastPickTimestamp: lastPickTimestampRef.current,\n      timestamp: new Date().toISOString()\n    });\n\n    // Enhanced completion check - also check room status\n    if (!isDraftActive || (room === null || room === void 0 ? void 0 : room.status) === 'completed' || picks.length >= totalPicks || !mockDraftSpeed) {\n      console.log('❌ INSTANT PICK EFFECT EARLY RETURN:', {\n        reason: !isDraftActive ? 'draft not active' : (room === null || room === void 0 ? void 0 : room.status) === 'completed' ? 'room marked completed' : picks.length >= totalPicks ? 'draft complete' : 'mock speed off'\n      });\n      return;\n    }\n    var currentPicker = effectiveDraftOrder[pickIndex];\n    var mockDrafterNames = (room === null || room === void 0 ? void 0 : room.mockDrafters) || [];\n    var isMockDrafter = currentPicker && currentPicker !== 'Not Todd Middleton' && mockDrafterNames.includes(currentPicker);\n    console.log('🎯 MOCK DRAFTER CHECK:', {\n      currentPicker: currentPicker,\n      mockDrafterNames: mockDrafterNames,\n      isMockDrafter: isMockDrafter,\n      pickLoading: pickLoading,\n      pickInProgress: pickInProgressRef.current,\n      shouldMakePick: isMockDrafter && !pickLoading && !pickInProgressRef.current\n    });\n    if (isMockDrafter && !pickLoading && !pickInProgressRef.current) {\n      // Debounce check: only trigger if at least 1 second has passed since last pick\n      var now = Date.now();\n      var timeSinceLastPick = now - lastPickTimestampRef.current;\n      var minInterval = 1000; // 1 second minimum between picks\n\n      if (timeSinceLastPick < minInterval) {\n        console.log('⏱️ DEBOUNCE: Skipping pick trigger - too soon since last pick:', {\n          timeSinceLastPick: timeSinceLastPick,\n          minInterval: minInterval,\n          remaining: minInterval - timeSinceLastPick\n        });\n        return;\n      }\n      console.log('✅ MAKING MOCK PICK:', {\n        mockDrafter: currentPicker,\n        pickNumber: currentPickNumber,\n        round: currentRound,\n        timeSinceLastPick: timeSinceLastPick\n      });\n\n      // Update timestamp and trigger pick\n      lastPickTimestampRef.current = now;\n      setTimeout(function () {\n        makeMockPick(currentPicker, currentPickNumber, currentRound);\n      }, 2000); // 2 second delay for autodraft speed\n    } else if (isMockDrafter && (pickLoading || pickInProgressRef.current)) {\n      console.log('⏳ MOCK DRAFTER ON CLOCK BUT PICK IN PROGRESS:', {\n        currentPicker: currentPicker,\n        pickLoading: pickLoading,\n        pickInProgress: pickInProgressRef.current\n      });\n\n      // More aggressive safety mechanism: if pickLoading is stuck for more than 2 seconds, force reset it\n      setTimeout(function () {\n        if (pickLoading && pickInProgressRef.current) {\n          console.log('🚨 PICK LOADING STUCK - FORCING RESET (2s timeout)');\n          setPickLoading(false);\n          pickInProgressRef.current = false;\n        }\n      }, 2000);\n    } else if (!isMockDrafter) {\n      console.log('👤 NOT A MOCK DRAFTER OR USER TURN:', currentPicker);\n    }\n  }, [isDraftActive, picks.length, totalPicks, mockDraftSpeed, effectiveDraftOrder, pickIndex, room === null || room === void 0 ? void 0 : room.mockDrafters, currentPickNumber, currentRound]);\n\n  // Additional debugging: Log every state change\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(function () {\n    console.log('🔄 STATE CHANGE DETECTED:', {\n      picksLength: picks.length,\n      pickLoading: pickLoading,\n      currentPickNumber: currentPickNumber,\n      currentRound: currentRound,\n      isDraftActive: isDraftActive,\n      mockDraftSpeed: mockDraftSpeed,\n      timestamp: new Date().toISOString()\n    });\n  }, [picks.length, pickLoading, currentPickNumber, currentRound, isDraftActive, mockDraftSpeed]);\n\n  // Stall detection and recovery\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(function () {\n    if (!isDraftActive || !mockDraftSpeed || picks.length >= totalPicks || (room === null || room === void 0 ? void 0 : room.status) === 'completed') return;\n    var currentPicker = effectiveDraftOrder[pickIndex];\n    var mockDrafterNames = (room === null || room === void 0 ? void 0 : room.mockDrafters) || [];\n    var isMockDrafter = currentPicker && currentPicker !== 'Not Todd Middleton' && mockDrafterNames.includes(currentPicker);\n    if (isMockDrafter) {\n      console.log('🔍 STALL DETECTION: Mock drafter on clock, setting up stall monitor');\n      var stallTimeout = setTimeout(function () {\n        console.log('🚨 STALL DETECTED: Mock drafter has been on clock for 10+ seconds');\n        console.log('🔄 FORCING PICK LOADING RESET AND RETRY');\n        setPickLoading(false);\n        pickInProgressRef.current = false;\n\n        // Force a retry after a longer delay to allow state to settle\n        setTimeout(function () {\n          if (isDraftActive && mockDraftSpeed && picks.length < totalPicks && (room === null || room === void 0 ? void 0 : room.status) !== 'completed' && !pickInProgressRef.current) {\n            console.log('🔄 STALL RECOVERY: Retrying mock pick after delay');\n            makeMockPick(currentPicker, currentPickNumber, currentRound);\n          } else {\n            console.log('❌ STALL RECOVERY: Conditions not met for retry');\n          }\n        }, 2000); // 2 second delay before retry\n      }, 10000); // 10 second stall threshold\n\n      return function () {\n        return clearTimeout(stallTimeout);\n      };\n    }\n  }, [isDraftActive, mockDraftSpeed, picks.length, totalPicks, room === null || room === void 0 ? void 0 : room.status, effectiveDraftOrder, pickIndex, room === null || room === void 0 ? void 0 : room.mockDrafters, currentPickNumber, currentRound]);\n\n  // User turn stall detection and recovery\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(function () {\n    if (!isDraftActive || picks.length >= totalPicks || (room === null || room === void 0 ? void 0 : room.status) === 'completed') return;\n    var currentPicker = effectiveDraftOrder[pickIndex];\n    var isUserTurn = currentPicker === 'Not Todd Middleton';\n    if (isUserTurn && !pickLoading) {\n      console.log('👤 USER TURN STALL DETECTION: User on clock, setting up stall monitor');\n      var userStallTimeout = setTimeout(function () {\n        console.log('🚨 USER TURN STALL DETECTED: User has been on clock for 15+ seconds');\n        console.log('🔄 FORCING AUTO-PICK FOR USER');\n        var autoPick = getAutoPickPlayer();\n        if (autoPick) {\n          console.log('🔄 USER STALL RECOVERY: Auto-picking for user:', autoPick.name);\n          makeAutoPick(autoPick.name);\n        } else {\n          console.log('❌ USER STALL RECOVERY: No valid auto-pick available');\n        }\n      }, 15000); // 15 second stall threshold for user\n\n      return function () {\n        return clearTimeout(userStallTimeout);\n      };\n    }\n  }, [isDraftActive, picks.length, totalPicks, room === null || room === void 0 ? void 0 : room.status, effectiveDraftOrder, pickIndex, pickLoading]);\n\n  // Auto-switch to user's team when it's their turn\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(function () {\n    if (isMyTurn && isDraftActive) {\n      setSelectedTeam('Not Todd Middleton');\n    }\n  }, [isMyTurn, isDraftActive]);\n\n  // Close dropdown when clicking outside\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(function () {\n    var handleClickOutside = function handleClickOutside(event) {\n      if (showTeamDropdown && !event.target.closest('.team-dropdown')) {\n        setShowTeamDropdown(false);\n      }\n    };\n    document.addEventListener('mousedown', handleClickOutside);\n    return function () {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [showTeamDropdown]);\n\n  // Helper function to calculate dynamic color transition\n  var getCountdownGradient = function getCountdownGradient() {\n    return '#C4b5fe';\n  };\n\n  // Cleanup effect to reset pick progress when draft status changes\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(function () {\n    // Reset pick progress when draft status changes\n    if ((room === null || room === void 0 ? void 0 : room.status) === 'completed' || !isDraftActive) {\n      console.log('🧹 CLEANUP: Resetting pick progress due to status change');\n      pickInProgressRef.current = false;\n    }\n\n    // Cleanup function for component unmount\n    return function () {\n      console.log('🧹 CLEANUP: Component unmounting, resetting pick progress');\n      pickInProgressRef.current = false;\n    };\n  }, [room === null || room === void 0 ? void 0 : room.status, isDraftActive]);\n\n  // Early return for loading state - MUST be after all hooks\n  if (!room) {\n    // Check if we're still loading or if the room doesn't exist\n    if (roomId) {\n      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n        className: \"min-h-screen bg-[#000F55] text-white flex items-center justify-center\"\n      }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n        className: \"text-center\"\n      }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"h1\", {\n        className: \"text-2xl font-bold mb-4\"\n      }, \"Room Not Found\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"p\", {\n        className: \"text-lg mb-4\"\n      }, \"The draft room \\\"\", roomId, \"\\\" does not exist.\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"p\", {\n        className: \"text-sm text-gray-300 mb-6\"\n      }, \"Please check the URL or create a new room.\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement((next_link__WEBPACK_IMPORTED_MODULE_4___default()), {\n        href: \"/tournaments/topdog\",\n        className: \"bg-[#c4b5fd] text-[#000F55] px-6 py-3 rounded-lg font-bold hover:bg-[#2DE2C5] transition-colors\"\n      }, \"Back to Tournaments\")));\n    }\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n      className: \"min-h-screen bg-[#000F55] text-white flex items-center justify-center\"\n    }, \"Loading...\");\n  }\n\n  // Get current team's data\n  var currentTeamRoster = getTeamRoster(selectedTeam);\n  var currentTeamRosterGrouped = getTeamRosterGrouped(selectedTeam);\n  var currentTeamStartingLineup = getTeamStartingLineup(selectedTeam);\n\n  // Debug rendering\n  console.log('=== RENDERING DEBUG ===');\n  console.log('Room:', room);\n  console.log('Is draft active:', isDraftActive);\n  console.log('Available players count:', availablePlayers.length);\n  console.log('Filtered players count:', finalFilteredPlayers.length);\n  console.log('Picks count:', picks.length);\n  console.log('Room status:', room === null || room === void 0 ? void 0 : room.status);\n  console.log('======================');\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n    className: \"min-h-screen bg-[#18181A] text-white\"\n  }, (room === null || room === void 0 ? void 0 : room.status) === 'completed' && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement((react__WEBPACK_IMPORTED_MODULE_1___default().Fragment), null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n    className: \"px-8 pb-4\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n    className: \"bg-gradient-to-r from-green-500 to-emerald-500 text-white rounded-lg p-6 shadow-lg\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n    className: \"text-center\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"h2\", {\n    className: \"text-3xl font-bold mb-4\"\n  }, \"\\uD83C\\uDF89 Draft Complete!\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"p\", {\n    className: \"text-xl mb-4\"\n  }, \"Congratulations! Your TopDog draft has finished successfully.\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"p\", {\n    className: \"text-lg opacity-90\"\n  }, \"Your team has been saved and you can view your roster below.\")))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n    className: \"px-8 pb-4\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_components_FullDraftBoard__WEBPACK_IMPORTED_MODULE_8__[\"default\"], {\n    room: room,\n    picks: picks,\n    participants: participants,\n    draftOrder: draftOrder,\n    PLAYER_POOL: _lib_playerPool__WEBPACK_IMPORTED_MODULE_6__.PLAYER_POOL\n  }))), (isDraftActive || (room === null || room === void 0 ? void 0 : room.status) === 'waiting') && (room === null || room === void 0 ? void 0 : room.status) !== 'completed' && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n    className: \"pt-8 pb-0 bg-[#18181A]\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n    ref: picksScrollRef,\n    className: \"flex overflow-x-auto pb-0 hide-scrollbar\",\n    style: {\n      scrollbarWidth: 'none',\n      msOverflowStyle: 'none',\n      height: 'calc(198px + 40px)'\n    }\n  }, Array.from({\n    length: draftSettings.totalRounds * 12\n  }, function (_, i) {\n    var _logoOptions$logoInde, _logoOptions$logoInde2;\n    var pickNumber = i + 1;\n    var round = Math.ceil(pickNumber / 12);\n    var pickIndex = (pickNumber - 1) % 12;\n    var isSnakeRound = round % 2 === 0;\n    var teamIndex = isSnakeRound ? 12 - 1 - pickIndex : pickIndex;\n    var team = effectiveDraftOrder[teamIndex] || \"Team \".concat(teamIndex + 1);\n    var isCompleted = picks.length >= pickNumber;\n    var isOnTheClock = pickNumber === picks.length + 1;\n    // Robust player lookup (from FullDraftBoard)\n    var findPlayerInPool = function findPlayerInPool(playerName) {\n      if (!playerName || !_lib_playerPool__WEBPACK_IMPORTED_MODULE_6__.PLAYER_POOL) return null;\n\n      // Try exact match first\n      var player = _lib_playerPool__WEBPACK_IMPORTED_MODULE_6__.PLAYER_POOL.find(function (p) {\n        return p.name === playerName;\n      });\n      if (player) return player;\n\n      // Try case-insensitive match\n      player = _lib_playerPool__WEBPACK_IMPORTED_MODULE_6__.PLAYER_POOL.find(function (p) {\n        return p.name.toLowerCase() === playerName.toLowerCase();\n      });\n      if (player) return player;\n\n      // Try matching by last name (common format: \"McBride\" vs \"Trey McBride\")\n      var lastName = playerName.split(' ').pop();\n      if (lastName && lastName.length > 2) {\n        player = _lib_playerPool__WEBPACK_IMPORTED_MODULE_6__.PLAYER_POOL.find(function (p) {\n          return p.name.toLowerCase().includes(lastName.toLowerCase());\n        });\n        if (player) return player;\n      }\n\n      // Try matching by first name + last name variations\n      var nameParts = playerName.split(' ');\n      if (nameParts.length >= 2) {\n        var firstName = nameParts[0];\n        var _lastName = nameParts.slice(1).join(' ');\n\n        // Try \"First Last\" format\n        player = _lib_playerPool__WEBPACK_IMPORTED_MODULE_6__.PLAYER_POOL.find(function (p) {\n          var poolNameParts = p.name.split(' ');\n          if (poolNameParts.length >= 2) {\n            var poolFirstName = poolNameParts[0];\n            var poolLastName = poolNameParts.slice(1).join(' ');\n            return poolFirstName.toLowerCase() === firstName.toLowerCase() && poolLastName.toLowerCase() === _lastName.toLowerCase();\n          }\n          return false;\n        });\n        if (player) return player;\n      }\n\n      // If still no match, try partial matching\n      var normalizedPlayerName = playerName.toLowerCase().replace(/[^a-z\\s]/g, '');\n      player = _lib_playerPool__WEBPACK_IMPORTED_MODULE_6__.PLAYER_POOL.find(function (p) {\n        var normalizedPoolName = p.name.toLowerCase().replace(/[^a-z\\s]/g, '');\n        return normalizedPoolName.includes(normalizedPlayerName) || normalizedPlayerName.includes(normalizedPoolName);\n      });\n      if (player) return player;\n\n      // Debug: log when player is not found\n      console.warn(\"Player not found: \\\"\".concat(playerName, \"\\\"\"));\n      return null;\n    };\n    var completedPick = picks[pickNumber - 1];\n    var playerData = completedPick ? findPlayerInPool(completedPick.player) : null;\n\n    // Debug logging for first few picks\n    if (pickNumber <= 3) {\n      console.log(\"Pick \".concat(pickNumber, \":\"), {\n        completedPick: completedPick,\n        playerName: completedPick === null || completedPick === void 0 ? void 0 : completedPick.player,\n        playerData: playerData,\n        picksLength: picks.length,\n        isCompleted: picks.length >= pickNumber\n      });\n    }\n\n    // Position color logic (from FullDraftBoard)\n    var getPositionColor = function getPositionColor(position) {\n      switch (position) {\n        case 'QB':\n          return '#ef4444';\n        case 'RB':\n          return '#8b5cf6';\n        case 'WR':\n          return '#10b981';\n        case 'TE':\n          return '#3b82f6';\n        default:\n          return '#6b7280';\n      }\n    };\n    // Team color bar logic (from FullDraftBoard)\n    var getTeamPositionProportions = function getTeamPositionProportions(teamIdx) {\n      // Get the team name for this team index\n      var teamName = effectiveDraftOrder[teamIdx];\n      var teamPicks = picks.filter(function (p) {\n        // Find all picks for this team by name\n        return p.user === teamName;\n      });\n      var positionCounts = {};\n      var totalPicks = 0;\n      teamPicks.forEach(function (pick) {\n        var pdata = findPlayerInPool(pick.player);\n        if (pdata && pdata.position) {\n          positionCounts[pdata.position] = (positionCounts[pdata.position] || 0) + 1;\n          totalPicks++;\n        } else {\n          console.warn(\"Could not find position for player: \".concat(pick.player));\n        }\n      });\n\n      // If no picks, show equal distribution for all positions\n      if (totalPicks === 0) {\n        var _positions = ['QB', 'RB', 'WR', 'TE'];\n        return _positions.map(function (position) {\n          return {\n            position: position,\n            proportion: 0.25,\n            // Equal 25% for each position\n            color: getPositionColor(position)\n          };\n        });\n      }\n      var positions = ['QB', 'RB', 'WR', 'TE'];\n      return positions.map(function (position) {\n        return {\n          position: position,\n          proportion: (positionCounts[position] || 0) / totalPicks,\n          color: getPositionColor(position)\n        };\n      }).filter(function (prop) {\n        return prop.proportion > 0;\n      });\n    };\n    // Team logo\n    var logoIndex = teamIndex % _components_team_logos__WEBPACK_IMPORTED_MODULE_9__.logoOptions.length;\n    var LogoComponent = (_logoOptions$logoInde = _components_team_logos__WEBPACK_IMPORTED_MODULE_9__.logoOptions[logoIndex]) === null || _logoOptions$logoInde === void 0 ? void 0 : _logoOptions$logoInde.component;\n    var bgColor = (_logoOptions$logoInde2 = _components_team_logos__WEBPACK_IMPORTED_MODULE_9__.logoOptions[logoIndex]) === null || _logoOptions$logoInde2 === void 0 ? void 0 : _logoOptions$logoInde2.bgColor;\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n      key: i,\n      className: \"flex-shrink-0 text-center font-bold\",\n      style: {\n        background: '#18181b',\n        color: '#fff',\n        border: '6px solid #18181b',\n        padding: 0,\n        width: 168,\n        minWidth: 168,\n        maxWidth: 168,\n        height: 198,\n        minHeight: 198,\n        maxHeight: 198,\n        boxSizing: 'border-box',\n        position: 'relative'\n      }\n    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n      className: \"min-h-full flex items-center justify-center w-full h-full\"\n    }, playerData ?\n    /*#__PURE__*/\n    // AFTER PICK: Player card style\n    react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n      className: \"text-sm rounded w-full h-full flex flex-col justify-center items-center\",\n      style: {\n        position: 'relative',\n        overflow: 'visible',\n        background: 'transparent',\n        height: '100%',\n        width: '100%',\n        boxSizing: 'border-box',\n        borderTop: \"27px solid \".concat(getPositionColor(playerData.position)),\n        borderLeft: \"4px solid \".concat(getPositionColor(playerData.position)),\n        borderRight: \"4px solid \".concat(getPositionColor(playerData.position)),\n        borderBottom: \"4px solid \".concat(getPositionColor(playerData.position)),\n        borderRadius: 8,\n        margin: 0,\n        padding: 0,\n        textAlign: 'left',\n        alignItems: 'flex-start'\n      }\n    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n      style: {\n        position: 'absolute',\n        top: -22,\n        left: 0,\n        right: 0,\n        height: 16,\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'center',\n        fontWeight: 700,\n        fontSize: 13,\n        color: isOnTheClock ? '#000' : '#fff',\n        zIndex: 4,\n        pointerEvents: 'none'\n      }\n    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"span\", null, (team.length > 18 ? team.slice(0, 17) + '…' : team).toUpperCase().replace(/\\s/g, ''))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n      style: {\n        position: 'absolute',\n        top: 4,\n        left: 0,\n        right: 0,\n        width: '100%',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        fontWeight: 700,\n        fontSize: 12,\n        color: '#fff',\n        fontFamily: 'Arial, Helvetica, sans-serif',\n        zIndex: 4,\n        pointerEvents: 'none',\n        marginBottom: '4px',\n        paddingLeft: '8px',\n        paddingRight: '8px'\n      }\n    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"span\", null, \"\".concat(round, \".\").concat(String(pickIndex + 1).padStart(2, '0'))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"span\", null, pickNumber)), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n      style: {\n        position: 'absolute',\n        top: 10,\n        left: 0,\n        right: 0,\n        height: 52,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        zIndex: 3\n      }\n    }, function () {\n      if (!team || team === '---') return null;\n      var logoIndex = teamIndex % _components_team_logos__WEBPACK_IMPORTED_MODULE_9__.logoOptions.length;\n      var LogoComponent = _components_team_logos__WEBPACK_IMPORTED_MODULE_9__.logoOptions[logoIndex].component;\n      var bgColor = _components_team_logos__WEBPACK_IMPORTED_MODULE_9__.logoOptions[logoIndex].bgColor;\n      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(LogoComponent, {\n        size: 43,\n        bgColor: bgColor\n      });\n    }()), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n      style: {\n        position: 'absolute',\n        top: 79,\n        left: 4,\n        right: 4,\n        fontSize: 12,\n        letterSpacing: 0.5,\n        color: '#fff',\n        fontFamily: 'Arial, Helvetica, sans-serif',\n        textAlign: 'center',\n        zIndex: 3\n      }\n    }, function () {\n      if (!playerData.name) return null;\n      var nameParts = playerData.name.split(' ');\n      if (nameParts.length === 1) {\n        return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"span\", null, playerData.name);\n      }\n      var firstName = nameParts[0];\n      var lastName = nameParts.slice(1).join(' ');\n      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement((react__WEBPACK_IMPORTED_MODULE_1___default().Fragment), null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"span\", {\n        style: {\n          display: 'block',\n          marginBottom: 0,\n          lineHeight: 1,\n          marginTop: 0\n        }\n      }, firstName), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"span\", {\n        style: {\n          display: 'block',\n          lineHeight: 1,\n          marginBottom: 2\n        }\n      }, lastName));\n    }()), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n      className: \"text-xs\",\n      style: {\n        position: 'absolute',\n        top: 110,\n        left: 4,\n        right: 4,\n        color: '#fff',\n        fontWeight: 500,\n        fontSize: 10,\n        fontFamily: 'Futura, Helvetica, Arial, sans-serif',\n        textAlign: 'center',\n        zIndex: 3\n      }\n    }, playerData ? \"\".concat(playerData.position, \" \\u2022 \").concat(playerData.team) : ''), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n      style: {\n        position: 'absolute',\n        bottom: 9,\n        left: '50%',\n        transform: 'translateX(-50%)',\n        width: '141.2px',\n        maxWidth: '141.2px',\n        minWidth: '141.2px',\n        height: 10.56,\n        display: 'flex',\n        borderRadius: 5.28,\n        overflow: 'hidden',\n        zIndex: 3\n      }\n    }, function () {\n      var proportions = getTeamPositionProportions(teamIndex);\n      // Debug logging for position tracker\n      if (pickNumber <= 3) {\n        var teamName = effectiveDraftOrder[teamIndex];\n        console.log(\"Position tracker for pick \".concat(pickNumber, \", team \").concat(teamIndex, \" (\").concat(teamName, \"):\"), {\n          proportions: proportions,\n          teamPicks: picks.filter(function (p) {\n            return p.user === teamName;\n          }),\n          effectiveDraftOrder: effectiveDraftOrder,\n          team: team\n        });\n      }\n      if (proportions.length === 0) {\n        return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n          style: {\n            height: 10.56,\n            width: '100%',\n            background: '#6b7280',\n            borderRadius: 5.28\n          }\n        });\n      }\n      return proportions.map(function (prop, idx) {\n        return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n          key: prop.position,\n          style: {\n            height: 10.56,\n            width: \"\".concat(prop.proportion * 100, \"%\"),\n            background: prop.color,\n            borderRadius: idx === 0 ? '5px 0 0 5px' : idx === proportions.length - 1 ? '0 5px 5px 0' : '0'\n          }\n        });\n      });\n    }())) :\n    /*#__PURE__*/\n    // FUTURE PICK: Grey outline style matching completed picks\n    react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n      className: \"text-sm rounded w-full h-full flex flex-col justify-center items-center\",\n      style: {\n        position: 'relative',\n        overflow: 'visible',\n        background: 'transparent',\n        height: '100%',\n        width: '100%',\n        boxSizing: 'border-box',\n        borderTop: \"27px solid \".concat(isOnTheClock ? '#fbbf24' : '#6b7280'),\n        borderLeft: \"4px solid \".concat(isOnTheClock ? '#fbbf24' : '#6b7280'),\n        borderRight: \"4px solid \".concat(isOnTheClock ? '#fbbf24' : '#6b7280'),\n        borderBottom: \"4px solid \".concat(isOnTheClock ? '#fbbf24' : '#6b7280'),\n        borderRadius: 8,\n        margin: 0,\n        padding: 0,\n        textAlign: 'left',\n        alignItems: 'flex-start'\n      }\n    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n      style: {\n        position: 'absolute',\n        top: -22,\n        left: 0,\n        right: 0,\n        height: 16,\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'center',\n        fontWeight: 700,\n        fontSize: 13,\n        color: isOnTheClock ? '#000' : '#fff',\n        zIndex: 4,\n        pointerEvents: 'none'\n      }\n    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"span\", null, (team.length > 18 ? team.slice(0, 17) + '…' : team).toUpperCase().replace(/\\s/g, ''))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n      style: {\n        position: 'absolute',\n        top: 4,\n        left: 0,\n        right: 0,\n        width: '100%',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        fontWeight: 700,\n        fontSize: 12,\n        color: '#fff',\n        fontFamily: 'Arial, Helvetica, sans-serif',\n        zIndex: 4,\n        pointerEvents: 'none',\n        marginBottom: '4px',\n        paddingLeft: '8px',\n        paddingRight: '8px'\n      }\n    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"span\", null, \"\".concat(round, \".\").concat(String(pickIndex + 1).padStart(2, '0'))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"span\", null, pickNumber)), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'flex-start',\n        height: '100%',\n        width: '100%',\n        padding: '8px 4px',\n        boxSizing: 'border-box',\n        background: 'transparent'\n      }\n    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n      style: {\n        position: 'absolute',\n        top: 10,\n        left: 0,\n        right: 0,\n        height: 52,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        zIndex: 3\n      }\n    }, function () {\n      if (typeof team !== 'string' || team === '---') return null;\n      var logoIndex = teamIndex % _components_team_logos__WEBPACK_IMPORTED_MODULE_9__.logoOptions.length;\n      var LogoComponent = _components_team_logos__WEBPACK_IMPORTED_MODULE_9__.logoOptions[logoIndex].component;\n      var bgColor = _components_team_logos__WEBPACK_IMPORTED_MODULE_9__.logoOptions[logoIndex].bgColor;\n      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(LogoComponent, {\n        size: 43,\n        bgColor: bgColor\n      });\n    }()), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n      style: {\n        height: '20px',\n        width: '100%',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        marginBottom: 'auto'\n      }\n    }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n      style: {\n        position: 'absolute',\n        bottom: 9,\n        left: '50%',\n        transform: 'translateX(-50%)',\n        width: '141.2px',\n        maxWidth: '141.2px',\n        minWidth: '141.2px',\n        height: 10.56,\n        display: 'flex',\n        borderRadius: 5.28,\n        overflow: 'hidden',\n        zIndex: 3\n      }\n    }, function () {\n      var proportions = getTeamPositionProportions(teamIndex);\n      // Debug logging for position tracker rendering\n      if (pickNumber <= 5) {\n        console.log(\"Rendering position tracker for pick \".concat(pickNumber, \", team \").concat(teamIndex, \":\"), {\n          proportions: proportions,\n          proportionsLength: proportions.length,\n          teamName: effectiveDraftOrder[teamIndex]\n        });\n      }\n      if (proportions.length === 0) {\n        return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n          style: {\n            height: 10.56,\n            width: '100%',\n            background: '#6b7280',\n            borderRadius: 5.28\n          }\n        });\n      }\n      return proportions.map(function (prop, idx) {\n        return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n          key: prop.position,\n          style: {\n            height: 10.56,\n            width: \"\".concat(prop.proportion * 100, \"%\"),\n            background: prop.color,\n            borderRadius: idx === 0 ? '5px 0 0 5px' : idx === proportions.length - 1 ? '0 5px 5px 0' : '0'\n          }\n        });\n      });\n    }())))));\n  }))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n    className: \"flex\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n    className: \"w-80 flex flex-col\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n    className: \"px-4 mb-4\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n    className: \"flex flex-col gap-3\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n    className: \"flex items-center gap-3\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"button\", {\n    onClick: function onClick() {\n      console.log('Info button clicked!');\n      setShowInfoModal(true);\n    },\n    className: \"w-7 h-7 text-[#3B82F6] rounded-full flex items-center justify-center hover:text-[#1d4ed8] transition-colors font-bold text-base border-2 border-[#3B82F6]\",\n    title: \"Tournament Info\"\n  }, \"i\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement((next_link__WEBPACK_IMPORTED_MODULE_4___default()), {\n    href: \"/draft/topdog/\".concat(roomId, \"/full-board\"),\n    className: \"inline-block px-4 py-2 bg-[#3B82F6] font-bold rounded-lg hover:bg-[#1d4ed8] transition-colors text-sm text-center\",\n    style: {\n      width: 240,\n      minWidth: 240,\n      maxWidth: 240,\n      color: '#ffffff'\n    }\n  }, \"Full Draft Board\")), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n    className: \"flex items-center gap-4\"\n  }, autoPickPlayer && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n    className: \"rounded p-3 border-l-4 border-[#3B82F6]\",\n    style: {\n      backgroundColor: '#1e40af',\n      minWidth: 180\n    }\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n    className: \"text-xs font-bold text-white mb-1\"\n  }, \"Autodraft Would Be:\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n    className: \"flex items-center gap-3\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n    className: \"flex-1\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n    className: \"font-bold text-white text-sm\"\n  }, autoPickPlayer.name), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n    className: \"text-xs text-white opacity-75\"\n  }, autoPickPlayer.position, \" \\u2022 \", autoPickPlayer.team)))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n    className: \"bg-black pt-1 pr-1 pl-1 rounded\",\n    style: {\n      display: 'inline-block',\n      transform: 'scale(1.0)',\n      marginTop: '0px'\n    }\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(SevenSegmentCountdown, {\n    initialSeconds: isDraftActive ? timer : preDraftCountdown\n  }))))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n    className: \"px-4 mt-0\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n    className: \"bg-white/10 p-4 z-30 flex flex-col rounded-lg w-80\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"h2\", {\n    className: \"text-xl font-bold mb-2\",\n    style: {\n      color: '#3B82F6'\n    }\n  }, \"Your Queue\"), queue.length === 0 && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n    className: \"text-gray-300 mb-2\"\n  }, \"No players in queue.\", /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"button\", {\n    onClick: function onClick() {\n      return addToQueue(finalFilteredPlayers[0]);\n    },\n    className: \"ml-2 px-2 py-1 bg-[#3B82F6] text-white rounded text-xs font-bold hover:bg-[#1d4ed8]\"\n  }, \"Add Player\")), queue.length > 0 && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(react_beautiful_dnd__WEBPACK_IMPORTED_MODULE_5__.DragDropContext, {\n    onDragEnd: onQueueDragEnd\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(react_beautiful_dnd__WEBPACK_IMPORTED_MODULE_5__.Droppable, {\n    droppableId: \"player-queue\"\n  }, function (provided) {\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", _extends({}, provided.droppableProps, {\n      ref: provided.innerRef,\n      className: \"flex flex-col gap-2\"\n    }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n      className: \"flex items-center justify-between bg-white/10 rounded p-2 font-bold text-xs\"\n    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n      className: \"flex-1\"\n    }, \"Player\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n      className: \"flex items-center gap-3\"\n    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n      className: \"w-12 text-center text-gray-300\"\n    }, \"ADP\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n      className: \"w-12 text-center text-gray-300\"\n    }, \"Rank\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n      className: \"w-4\"\n    }))), queue.map(function (player, index) {\n      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(react_beautiful_dnd__WEBPACK_IMPORTED_MODULE_5__.Draggable, {\n        key: \"queue-\".concat(player.name, \"-\").concat(index),\n        draggableId: \"queue-\".concat(player.name, \"-\").concat(index),\n        index: index\n      }, function (provided) {\n        var _provided$draggablePr;\n        return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", _extends({\n          ref: provided.innerRef\n        }, provided.draggableProps, provided.dragHandleProps, {\n          className: \"bg-white/5 p-3 rounded cursor-move hover:bg-white/10 transition-all\",\n          style: _objectSpread(_objectSpread({}, provided.draggableProps.style), {}, {\n            transform: (_provided$draggablePr = provided.draggableProps.style) === null || _provided$draggablePr === void 0 ? void 0 : _provided$draggablePr.transform\n          })\n        }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n          className: \"flex items-center justify-between\"\n        }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n          className: \"flex-1\"\n        }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n          className: \"font-bold text-white\"\n        }, player.name), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n          className: \"text-sm text-gray-300\"\n        }, player.position, \" \\u2022 \", player.team)), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n          className: \"flex items-center gap-3\"\n        }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n          className: \"w-12 text-center text-xs font-bold text-[#3B82F6]\"\n        }, player.adp || 'N/A'), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n          className: \"w-12 text-center text-xs font-bold text-[#3B82F6]\"\n        }, rankings.indexOf(player.name) !== -1 ? \"#\".concat(rankings.indexOf(player.name) + 1) : 'N/A'), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"button\", {\n          onClick: function onClick() {\n            return removeFromQueue(player);\n          },\n          className: \"text-red-400 hover:text-red-300 text-sm\"\n        }, \"\\xD7\"))));\n      });\n    }), provided.placeholder);\n  }))))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n    className: \"flex-1 ml-8 mr-8\"\n  }, room && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n    className: \"bg-[#18181A] rounded pt-4 pb-4 pl-4 pr-4 mb-2 border-4 border-white/20\",\n    style: {\n      marginBottom: '2px',\n      marginTop: 'auto'\n    }\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n    className: \"mb-4 flex flex-col sm:flex-row gap-2\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"input\", {\n    type: \"text\",\n    id: \"player-search-input\",\n    name: \"playerSearch\",\n    placeholder: \"Search players or teams...\",\n    value: playerSearch,\n    onChange: function onChange(e) {\n      return setPlayerSearch(e.target.value);\n    },\n    className: \"px-3 py-2 rounded text-black flex-1\"\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"select\", {\n    value: positionFilter,\n    onChange: function onChange(e) {\n      return setPositionFilter(e.target.value);\n    },\n    className: \"px-3 py-2 rounded text-black bg-white\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"option\", {\n    value: \"ALL\"\n  }, \"All Positions\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"option\", {\n    value: \"QB\"\n  }, \"QB\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"option\", {\n    value: \"RB\"\n  }, \"RB\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"option\", {\n    value: \"WR\"\n  }, \"WR\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"option\", {\n    value: \"TE\"\n  }, \"TE\"))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n    className: \"text-sm text-gray-300 mb-3\"\n  }, \"Showing \", finalFilteredPlayers.length, \" of \", availablePlayers.length, \" available players\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n    className: \"overflow-y-auto\",\n    style: {\n      height: '1095px'\n    }\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n    className: \"space-y-2\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n    className: \"flex items-center justify-between bg-white/10 rounded p-3 font-bold text-xs\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n    className: \"flex items-center gap-3 flex-1\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"button\", {\n    onClick: function onClick() {\n      return setSortBy('adp');\n    },\n    className: \"w-16 text-center hover:text-[#3B82F6] hover:bg-white/5 transition-all cursor-pointer rounded px-1 py-1 \".concat(sortBy === 'adp' ? 'text-[#3B82F6] bg-white/10' : 'text-gray-300'),\n    title: \"Click to sort by ADP\"\n  }, \"ADP \", sortBy === 'adp' && '↓'), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"button\", {\n    onClick: function onClick() {\n      return setSortBy('rankings');\n    },\n    className: \"w-16 text-center hover:text-[#3B82F6] hover:bg-white/5 transition-all cursor-pointer rounded px-1 py-1 \".concat(sortBy === 'rankings' ? 'text-[#3B82F6] bg-white/10' : 'text-gray-300'),\n    title: \"Click to sort by Rankings\"\n  }, \"Rank \", sortBy === 'rankings' && '↓'), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n    className: \"w-32 text-center text-gray-300\"\n  }, \"Name\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n    className: \"w-12 text-center text-gray-300\"\n  }, \"Pos\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n    className: \"w-16 text-center text-gray-300\"\n  }, \"Team\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n    className: \"w-12 text-center text-gray-300\"\n  }, \"Bye\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n    className: \"flex-1\"\n  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n    className: \"w-32 text-center\"\n  }, \"Actions\")), finalFilteredPlayers.map(function (player) {\n    var canDraft = canDraftPlayer(player.name);\n    var playerData = _lib_playerPool__WEBPACK_IMPORTED_MODULE_6__.PLAYER_POOL.find(function (p) {\n      return p.name === player.name;\n    });\n    var currentCount = picks.filter(function (pick) {\n      return pick.user === userName;\n    }).map(function (p) {\n      return _lib_playerPool__WEBPACK_IMPORTED_MODULE_6__.PLAYER_POOL.find(function (pp) {\n        return pp.name === p.player;\n      });\n    }).filter(function (p) {\n      return (p === null || p === void 0 ? void 0 : p.position) === (playerData === null || playerData === void 0 ? void 0 : playerData.position);\n    }).length;\n    var limit = POSITIONAL_LIMITS[playerData === null || playerData === void 0 ? void 0 : playerData.position];\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n      key: player.name,\n      className: \"flex items-center justify-between rounded p-3 transition-colors \".concat(canDraft ? 'bg-white/5 hover:bg-white/10' : 'bg-red-500/20 opacity-60')\n    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n      className: \"flex items-center gap-3 flex-1\"\n    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n      className: \"w-16 text-center text-xs font-bold text-[#3B82F6]\"\n    }, player.adp || 'N/A'), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n      className: \"w-16 text-center text-xs font-bold text-[#3B82F6]\"\n    }, rankings.indexOf(player.name) !== -1 ? \"#\".concat(rankings.indexOf(player.name) + 1) : 'N/A'), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n      className: \"w-32 text-center text-white font-medium text-sm\"\n    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n      className: \"truncate overflow-hidden text-ellipsis whitespace-nowrap\",\n      title: player.name\n    }, player.name)), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n      className: \"w-12 text-center text-white text-sm\"\n    }, player.position), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n      className: \"w-16 text-center text-white text-sm\"\n    }, player.team), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n      className: \"w-12 text-center text-white text-sm\"\n    }, player.bye), !canDraft && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n      className: \"text-red-400 text-xs\"\n    }, \"(\", currentCount, \"/\", limit, \")\")), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n      className: \"flex items-center gap-2 w-32 justify-center\"\n    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"button\", {\n      className: \"px-3 py-1 rounded font-bold transition-colors text-sm \".concat(canDraft && isDraftActive ? 'bg-green-500 text-white hover:bg-green-600 disabled:opacity-50' : canDraft && !isDraftActive ? 'bg-yellow-500 text-[#000F55] hover:bg-yellow-400' : 'bg-gray-500 text-gray-300 cursor-not-allowed'),\n      disabled: !isMyTurn || pickLoading || !canDraft || !isDraftActive,\n      onClick: function onClick() {\n        return canDraft && isDraftActive ? makePick(player.name) : null;\n      },\n      title: !canDraft ? \"Cannot draft: \".concat(currentCount, \"/\").concat(limit, \" \").concat(player.position, \"s\") : !isDraftActive ? 'Draft not started yet' : 'Draft this player'\n    }, canDraft && isDraftActive ? 'Draft' : canDraft && !isDraftActive ? 'Ready' : 'Limit'), queue.find(function (q) {\n      return q.name === player.name;\n    }) ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"button\", {\n      onClick: function onClick() {\n        return removeFromQueue(player);\n      },\n      className: \"px-2 py-1 rounded bg-red-500 text-white text-xs font-bold hover:bg-red-600 transition-colors\"\n    }, \"Remove\") : /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"button\", {\n      onClick: function onClick() {\n        return addToQueue(player);\n      },\n      className: \"px-2 py-1 rounded bg-[#c4b5fd] text-gray-900 text-xs font-bold hover:bg-[#a78bfa] transition-colors\"\n    }, \"Queue\")));\n  }))))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n    className: \"w-80 bg-white/10 p-4 pr-6 z-30 flex flex-col overflow-y-auto pt-4 -ml-4 mr-4 mb-2\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n    className: \"mb-4 team-dropdown\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n    className: \"relative\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"button\", {\n    onClick: function onClick() {\n      return setShowTeamDropdown(!showTeamDropdown);\n    },\n    className: \"w-full flex items-center justify-between bg-white/10 rounded p-3 text-left hover:bg-white/20 transition-colors\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"h2\", {\n    className: \"text-xl font-bold\",\n    style: {\n      color: '#3B82F6'\n    }\n  }, selectedTeam === userName ? 'Your Team' : selectedTeam), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n    className: \"text-sm text-gray-300\"\n  }, currentTeamRoster.length === 0 ? 'My Team' : '')), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n    className: \"text-white\"\n  }, \"\\u25BC\")), showTeamDropdown && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n    className: \"absolute top-full left-0 right-0 bg-[#000F55] border border-white/20 rounded mt-1 z-50 max-h-60 overflow-y-auto\"\n  }, effectiveDraftOrder.map(function (team, index) {\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"button\", {\n      key: team,\n      onClick: function onClick() {\n        setSelectedTeam(team);\n        setShowTeamDropdown(false);\n      },\n      className: \"w-full p-3 text-left hover:bg-white/10 transition-colors \".concat(selectedTeam === team ? 'bg-[#60A5FA] text-[#000F55]' : 'text-white')\n    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n      className: \"font-medium\"\n    }, team === userName ? 'Your Team' : team), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n      className: \"text-xs opacity-75\"\n    }));\n  })))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n    className: \"mb-4 p-3 bg-white/5 rounded\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n    className: \"flex justify-between text-xs\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n    className: \"flex items-center gap-1\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"span\", {\n    className: \"text-[#3B82F6] font-bold\"\n  }, \"QB:\"), \" \", ((_currentTeamRosterGro = currentTeamRosterGrouped.QB) === null || _currentTeamRosterGro === void 0 ? void 0 : _currentTeamRosterGro.length) || 0, \" \\xA0\", /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"span\", {\n    className: \"text-[#3B82F6] font-bold\"\n  }, \"RB:\"), \" \", ((_currentTeamRosterGro2 = currentTeamRosterGrouped.RB) === null || _currentTeamRosterGro2 === void 0 ? void 0 : _currentTeamRosterGro2.length) || 0, \" \\xA0\", /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"span\", {\n    className: \"text-[#3B82F6] font-bold\"\n  }, \"WR:\"), \" \", ((_currentTeamRosterGro3 = currentTeamRosterGrouped.WR) === null || _currentTeamRosterGro3 === void 0 ? void 0 : _currentTeamRosterGro3.length) || 0, \" \\xA0\", /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"span\", {\n    className: \"text-[#3B82F6] font-bold\"\n  }, \"TE:\"), \" \", ((_currentTeamRosterGro4 = currentTeamRosterGrouped.TE) === null || _currentTeamRosterGro4 === void 0 ? void 0 : _currentTeamRosterGro4.length) || 0))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n    className: \"mb-6\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n    className: \"space-y-3\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"h4\", {\n    className: \"font-bold text-sm mb-1\",\n    style: {\n      color: '#3B82F6'\n    }\n  }, \"QB\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n    className: \"space-y-1\"\n  }, (_currentTeamStartingL = currentTeamStartingLineup.QB) === null || _currentTeamStartingL === void 0 ? void 0 : _currentTeamStartingL.slice(0, 1).map(function (player, idx) {\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n      key: player.name,\n      className: \"text-sm bg-white/5 rounded p-2\"\n    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n      className: \"font-medium\"\n    }, player.name), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n      className: \"text-xs text-gray-300\"\n    }, player.team, \" \\u2022 Bye \", player.bye, \" \\u2022 ADP \", player.adp));\n  }), (!currentTeamStartingLineup.QB || currentTeamStartingLineup.QB.length === 0) && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n    className: \"text-sm bg-white/5 rounded p-2 border border-dashed border-gray-600\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n    className: \"text-gray-500 italic\"\n  }, \"Empty QB Spot\")))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"h4\", {\n    className: \"font-bold text-sm mb-1\",\n    style: {\n      color: '#3B82F6'\n    }\n  }, \"RB\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n    className: \"space-y-1\"\n  }, (_currentTeamStartingL2 = currentTeamStartingLineup.RB) === null || _currentTeamStartingL2 === void 0 ? void 0 : _currentTeamStartingL2.slice(0, 2).map(function (player, idx) {\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n      key: player.name,\n      className: \"text-sm bg-white/5 rounded p-2\"\n    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n      className: \"font-medium\"\n    }, player.name), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n      className: \"text-xs text-gray-300\"\n    }, player.team, \" \\u2022 Bye \", player.bye, \" \\u2022 ADP \", player.adp));\n  }), Array.from({\n    length: Math.max(0, 2 - (((_currentTeamStartingL3 = currentTeamStartingLineup.RB) === null || _currentTeamStartingL3 === void 0 ? void 0 : _currentTeamStartingL3.slice(0, 2).length) || 0))\n  }, function (_, i) {\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n      key: \"rb-starter-empty-\".concat(i),\n      className: \"text-sm bg-white/5 rounded p-2 border border-dashed border-gray-600\"\n    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n      className: \"text-gray-500 italic\"\n    }, \"Empty RB Spot\"));\n  }))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"h4\", {\n    className: \"font-bold text-sm mb-1\",\n    style: {\n      color: '#3B82F6'\n    }\n  }, \"WR\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n    className: \"space-y-1\"\n  }, (_currentTeamStartingL4 = currentTeamStartingLineup.WR) === null || _currentTeamStartingL4 === void 0 ? void 0 : _currentTeamStartingL4.slice(0, 3).map(function (player, idx) {\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n      key: player.name,\n      className: \"text-sm bg-white/5 rounded p-2\"\n    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n      className: \"font-medium\"\n    }, player.name), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n      className: \"text-xs text-gray-300\"\n    }, player.team, \" \\u2022 Bye \", player.bye, \" \\u2022 ADP \", player.adp));\n  }), Array.from({\n    length: Math.max(0, 3 - (((_currentTeamStartingL5 = currentTeamStartingLineup.WR) === null || _currentTeamStartingL5 === void 0 ? void 0 : _currentTeamStartingL5.slice(0, 3).length) || 0))\n  }, function (_, i) {\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n      key: \"wr-starter-empty-\".concat(i),\n      className: \"text-sm bg-white/5 rounded p-2 border border-dashed border-gray-600\"\n    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n      className: \"text-gray-500 italic\"\n    }, \"Empty WR Spot\"));\n  }))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"h4\", {\n    className: \"font-bold text-sm mb-1\",\n    style: {\n      color: '#3B82F6'\n    }\n  }, \"TE\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n    className: \"space-y-1\"\n  }, (_currentTeamStartingL6 = currentTeamStartingLineup.TE) === null || _currentTeamStartingL6 === void 0 ? void 0 : _currentTeamStartingL6.slice(0, 1).map(function (player, idx) {\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n      key: player.name,\n      className: \"text-sm bg-white/5 rounded p-2\"\n    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n      className: \"font-medium\"\n    }, player.name), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n      className: \"text-xs text-gray-300\"\n    }, player.team, \" \\u2022 Bye \", player.bye, \" \\u2022 ADP \", player.adp));\n  }), (!currentTeamStartingLineup.TE || currentTeamStartingLineup.TE.length === 0) && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n    className: \"text-sm bg-white/5 rounded p-2 border border-dashed border-gray-600\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n    className: \"text-gray-500 italic\"\n  }, \"Empty TE Spot\")))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"h4\", {\n    className: \"font-bold text-sm mb-1\",\n    style: {\n      color: '#3B82F6'\n    }\n  }, \"FLEX\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n    className: \"space-y-1\"\n  }, (_currentTeamStartingL7 = currentTeamStartingLineup.FLEX) === null || _currentTeamStartingL7 === void 0 ? void 0 : _currentTeamStartingL7.slice(0, 2).map(function (player, idx) {\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n      key: player.name,\n      className: \"text-sm bg-white/5 rounded p-2\"\n    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n      className: \"font-medium\"\n    }, player.name), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n      className: \"text-xs text-gray-300\"\n    }, player.team, \" \\u2022 Bye \", player.bye, \" \\u2022 ADP \", player.adp));\n  }), Array.from({\n    length: Math.max(0, 2 - (((_currentTeamStartingL8 = currentTeamStartingLineup.FLEX) === null || _currentTeamStartingL8 === void 0 ? void 0 : _currentTeamStartingL8.slice(0, 2).length) || 0))\n  }, function (_, i) {\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n      key: \"flex-starter-empty-\".concat(i),\n      className: \"text-sm bg-white/5 rounded p-2 border border-dashed border-gray-600\"\n    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n      className: \"text-gray-500 italic\"\n    }, \"Empty FLEX Spot\"));\n  }))))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"h3\", {\n    className: \"font-bold text-lg mb-3\",\n    style: {\n      color: '#c4b5fd'\n    }\n  }, \"Bench\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n    className: \"space-y-1\"\n  }, function () {\n    // Get all players in draft order for selected team\n    var teamPicks = picks.filter(function (pick) {\n      return pick.user === selectedTeam;\n    });\n\n    // Get starting lineup players to exclude from bench\n    var startingLineupPlayers = new Set();\n    Object.values(currentTeamStartingLineup).forEach(function (positionPlayers) {\n      positionPlayers.forEach(function (player) {\n        startingLineupPlayers.add(player.name);\n      });\n    });\n\n    // Get bench players (players not in starting lineup)\n    var benchPlayers = teamPicks.filter(function (pick) {\n      return !startingLineupPlayers.has(pick.player);\n    });\n\n    // Create bench player objects with draft order info\n    var benchPlayerObjects = benchPlayers.map(function (pick, index) {\n      var playerData = _lib_playerPool__WEBPACK_IMPORTED_MODULE_6__.PLAYER_POOL.find(function (p) {\n        return p.name === pick.player;\n      });\n      return {\n        name: pick.player,\n        position: (playerData === null || playerData === void 0 ? void 0 : playerData.position) || 'UNK',\n        team: (playerData === null || playerData === void 0 ? void 0 : playerData.team) || 'FA',\n        bye: (playerData === null || playerData === void 0 ? void 0 : playerData.bye) || 0,\n        adp: (playerData === null || playerData === void 0 ? void 0 : playerData.adp) || 999,\n        draftOrder: teamPicks.indexOf(pick) + 1\n      };\n    });\n    return benchPlayerObjects.map(function (player, idx) {\n      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n        key: player.name,\n        className: \"text-sm bg-white/5 rounded p-2\"\n      }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n        className: \"font-medium\"\n      }, player.name), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n        className: \"text-xs text-gray-300\"\n      }, player.position, \" \", player.team, \" \\u2022 Bye \", player.bye, \" \\u2022 ADP \", player.adp, \" \\u2022 Pick #\", player.draftOrder));\n    });\n  }(), function () {\n    var teamPicks = picks.filter(function (pick) {\n      return pick.user === selectedTeam;\n    });\n    var startingLineupPlayers = new Set();\n    Object.values(currentTeamStartingLineup).forEach(function (positionPlayers) {\n      positionPlayers.forEach(function (player) {\n        startingLineupPlayers.add(player.name);\n      });\n    });\n    var benchPlayers = teamPicks.filter(function (pick) {\n      return !startingLineupPlayers.has(pick.player);\n    });\n    var totalBenchSpots = 10;\n    var emptySpots = Math.max(0, totalBenchSpots - benchPlayers.length);\n    return Array.from({\n      length: emptySpots\n    }, function (_, i) {\n      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n        key: \"bench-empty-\".concat(i),\n        className: \"text-sm bg-white/5 rounded p-2 border border-dashed border-gray-600\"\n      }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n        className: \"text-gray-500 italic\"\n      }, \"Empty Bench Spot\"));\n    });\n  }())))), (room === null || room === void 0 ? void 0 : room.status) === 'waiting' && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n    className: \"fixed bottom-4 left-1/2 transform -translate-x-1/2 z-50\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"button\", {\n    onClick: function onClick() {\n      if (draftOrder.length === 0) {\n        // If no draft order, randomize first\n        var shuffled = _toConsumableArray(participants).sort(function () {\n          return Math.random() - 0.5;\n        });\n        setDraftOrder(shuffled);\n        setDraftOrderTimestamp(new Date());\n        setPreDraftCountdown(60);\n        (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_3__.updateDoc)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_3__.doc)(_lib_firebase__WEBPACK_IMPORTED_MODULE_2__.db, 'draftRooms', roomId), {\n          draftOrder: shuffled,\n          draftOrderTimestamp: new Date()\n        });\n      } else {\n        // Start the draft immediately\n        (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_3__.updateDoc)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_3__.doc)(_lib_firebase__WEBPACK_IMPORTED_MODULE_2__.db, 'draftRooms', roomId), {\n          status: 'active',\n          startedAt: new Date()\n        });\n      }\n    },\n    className: \"bg-gradient-to-r from-[#60A5FA] to-[#2DE2C5] text-[#000F55] px-6 py-3 rounded-lg font-bold text-lg shadow-lg hover:shadow-xl transition-all duration-200 transform hover:scale-105\"\n  }, draftOrder.length === 0 ? 'Randomize & Launch Draft' : 'Launch Draft Now')), (room === null || room === void 0 ? void 0 : room.status) === 'waiting' && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n    className: \"fixed bottom-4 right-4 z-50\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"button\", {\n    onClick: startMockDraft,\n    className: \"bg-gradient-to-r from-purple-500 to-pink-500 text-white px-6 py-3 rounded-lg font-bold text-lg shadow-lg hover:shadow-xl transition-all duration-200 transform hover:scale-105\",\n    title: \"Start a mock draft with 11 simulated drafters\"\n  }, \"\\uD83C\\uDFAF Mock Draft\")), isDraftActive && mockDraftSpeed && (room === null || room === void 0 ? void 0 : room.status) !== 'completed' && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n    className: \"fixed bottom-4 left-4 z-50\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"button\", {\n    onClick: function onClick() {\n      console.log('🔧 MANUAL DEBUG TRIGGER');\n      var currentPicker = effectiveDraftOrder[pickIndex];\n      var mockDrafterNames = (room === null || room === void 0 ? void 0 : room.mockDrafters) || [];\n      var isMockDrafter = currentPicker && currentPicker !== 'Not Todd Middleton' && mockDrafterNames.includes(currentPicker);\n      var isUserTurn = currentPicker === 'Not Todd Middleton';\n      console.log('Manual trigger state:', {\n        currentPicker: currentPicker,\n        mockDrafterNames: mockDrafterNames,\n        isMockDrafter: isMockDrafter,\n        isUserTurn: isUserTurn,\n        pickLoading: pickLoading,\n        currentPickNumber: currentPickNumber,\n        currentRound: currentRound\n      });\n      if (isMockDrafter) {\n        console.log('🔧 MANUALLY TRIGGERING MOCK PICK');\n        setPickLoading(false);\n        setTimeout(function () {\n          makeMockPick(currentPicker, currentPickNumber, currentRound);\n        }, 100);\n      } else if (isUserTurn) {\n        console.log('🔧 MANUALLY TRIGGERING USER AUTO-PICK');\n        var autoPick = getAutoPickPlayer();\n        if (autoPick) {\n          console.log('🔧 MANUALLY AUTO-PICKING FOR USER:', autoPick.name);\n          makeAutoPick(autoPick.name);\n        } else {\n          console.log('❌ MANUAL AUTO-PICK: No valid player available');\n        }\n      }\n    },\n    className: \"bg-red-500 text-white px-4 py-2 rounded-lg font-bold text-sm shadow-lg hover:bg-red-600 transition-all\",\n    title: \"Force next pick if draft is stalled\"\n  }, \"\\uD83D\\uDD27 Force Pick\")), showInfoModal && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n    className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n    className: \"bg-[#000F55] border border-[#60A5FA] rounded-lg p-8 max-w-md w-full mx-4\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n    className: \"text-center\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"h2\", {\n    className: \"text-2xl font-bold mb-4\",\n    style: {\n      color: '#60A5FA'\n    }\n  }, \"Tournament Info\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n    className: \"text-white text-lg mb-6\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"strong\", null, \"TopDog\")), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"button\", {\n    onClick: function onClick() {\n      return setShowInfoModal(false);\n    },\n    className: \"bg-[#60A5FA] text-[#000F55] px-6 py-2 rounded-lg font-bold hover:bg-[#2DE2C5] transition-colors\"\n  }, \"Close\")))));\n}\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-node)/./pages/draft/topdog/[roomId].js\n");

/***/ }),

/***/ "(pages-dir-node)/./styles/globals.css":
/*!****************************!*\
  !*** ./styles/globals.css ***!
  \****************************/
/***/ (() => {



/***/ }),

/***/ "@opentelemetry/api":
/*!*************************************!*\
  !*** external "@opentelemetry/api" ***!
  \*************************************/
/***/ ((module) => {

"use strict";
module.exports = require("@opentelemetry/api");

/***/ }),

/***/ "@stripe/stripe-js":
/*!************************************!*\
  !*** external "@stripe/stripe-js" ***!
  \************************************/
/***/ ((module) => {

"use strict";
module.exports = require("@stripe/stripe-js");

/***/ }),

/***/ "firebase/app":
/*!*******************************!*\
  !*** external "firebase/app" ***!
  \*******************************/
/***/ ((module) => {

"use strict";
module.exports = import("firebase/app");;

/***/ }),

/***/ "firebase/auth":
/*!********************************!*\
  !*** external "firebase/auth" ***!
  \********************************/
/***/ ((module) => {

"use strict";
module.exports = import("firebase/auth");;

/***/ }),

/***/ "firebase/firestore":
/*!*************************************!*\
  !*** external "firebase/firestore" ***!
  \*************************************/
/***/ ((module) => {

"use strict";
module.exports = import("firebase/firestore");;

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

"use strict";
module.exports = require("fs");

/***/ }),

/***/ "next/dist/compiled/next-server/pages.runtime.dev.js":
/*!**********************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages.runtime.dev.js" ***!
  \**********************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/pages.runtime.dev.js");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("path");

/***/ }),

/***/ "react":
/*!************************!*\
  !*** external "react" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("react");

/***/ }),

/***/ "react-beautiful-dnd":
/*!**************************************!*\
  !*** external "react-beautiful-dnd" ***!
  \**************************************/
/***/ ((module) => {

"use strict";
module.exports = require("react-beautiful-dnd");

/***/ }),

/***/ "react-dom":
/*!****************************!*\
  !*** external "react-dom" ***!
  \****************************/
/***/ ((module) => {

"use strict";
module.exports = require("react-dom");

/***/ }),

/***/ "react/jsx-runtime":
/*!************************************!*\
  !*** external "react/jsx-runtime" ***!
  \************************************/
/***/ ((module) => {

"use strict";
module.exports = require("react/jsx-runtime");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("stream");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("zlib");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/@swc"], () => (__webpack_exec__("(pages-dir-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES&page=%2Fdraft%2Ftopdog%2F%5BroomId%5D&preferredRegion=&absolutePagePath=.%2Fpages%2Fdraft%2Ftopdog%2F%5BroomId%5D.js&absoluteAppPath=private-next-pages%2F_app&absoluteDocumentPath=private-next-pages%2F_document&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();